{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useLinkBuilder;\n\nvar _core = require(\"@react-navigation/core\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _LinkingContext = _interopRequireDefault(require(\"./LinkingContext\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar getRootStateForNavigate = function getRootStateForNavigate(navigation, state) {\n  var parent = navigation.getParent();\n\n  if (parent) {\n    var parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [Object.assign({}, parentState.routes[parentState.index], {\n        state: state\n      })]\n    });\n  }\n\n  return state;\n};\n\nfunction useLinkBuilder() {\n  var navigation = React.useContext(_core.NavigationHelpersContext);\n  var linking = React.useContext(_LinkingContext.default);\n  var buildLink = React.useCallback(function (name, params) {\n    var options = linking.options;\n\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n\n    var state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    }) : {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    };\n    var path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : (0, _core.getPathFromState)(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAOA;;AAEA;;;;;;AAWA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAC9BC,UAD8B,EAE9BC,KAF8B,EAGb;EACjB,IAAMC,MAAM,GAAGF,UAAU,CAACG,SAAXH,EAAf;;EAEA,IAAIE,MAAJ,EAAY;IACV,IAAME,WAAW,GAAGF,MAAM,CAACG,QAAPH,EAApB;IAEA,OAAOH,uBAAuB,CAACG,MAAD,EAAS;MACrCI,KAAK,EAAE,CAD8B;MAErCC,MAAM,EAAE,mBAEDH,WAAW,CAACG,MAAZH,CAAmBA,WAAW,CAACE,KAA/BF,CAFC;QAGJH,KAAK,EAAEA;MAHH;IAF6B,CAAT,CAA9B;EASD;;EAED,OAAOA,KAAP;AApBF;;AA2Be,SAASO,cAAT,GAA0B;EACvC,IAAMR,UAAU,GAAGS,KAAK,CAACC,UAAND,CAAiBE,8BAAjBF,CAAnB;EACA,IAAMG,OAAO,GAAGH,KAAK,CAACC,UAAND,CAAiBI,uBAAjBJ,CAAhB;EAEA,IAAMK,SAAS,GAAGL,KAAK,CAACM,WAANN,CAChB,UAACO,IAAD,EAAeC,MAAf,EAAmC;IACjC,IAAQC,OAAR,GAAoBN,OAApB,CAAQM,OAAR;;IAEA,IAAI,QAAO,SAAPA,WAAO,WAAPA,mBAAO,CAAEC,OAAT,MAAqB,KAAzB,EAAgC;MAC9B,OAAOC,SAAP;IACD;;IAED,IAAMnB,KAAK,GAAGD,UAAU,GACpBD,uBAAuB,CAACC,UAAD,EAAa;MAClCM,KAAK,EAAE,CAD2B;MAElCC,MAAM,EAAE,CAAC;QAAES,IAAF,EAAEA,IAAF;QAAQC;MAAR,CAAD;IAF0B,CAAb,CADH,GAOpB;MACEX,KAAK,EAAE,CADT;MAEEC,MAAM,EAAE,CAAC;QAAES,IAAF,EAAEA,IAAF;QAAQC;MAAR,CAAD;IAFV,CAPJ;IAYA,IAAMI,IAAI,GAAGH,OAAO,SAAPA,WAAO,WAAPA,WAAO,CAAEI,gBAATJ,GACTA,OAAO,CAACI,gBAARJ,CAAyBjB,KAAzBiB,EAAgCA,OAAhC,SAAgCA,WAAhC,WAAgCA,GAAhC,MAAgCA,UAAO,CAAEK,MAAzCL,CADSA,GAETI,4BAAiBrB,KAAjBqB,EAAwBJ,OAAR,SAAQA,WAAR,WAAQA,GAAR,MAAQA,UAAO,CAAEK,MAAjCD,CAFJ;IAIA,OAAOD,IAAP;EAxBc,GA0BhB,CAACT,OAAD,EAAUZ,UAAV,CA1BgBS,CAAlB;EA6BA,OAAOK,SAAP;AACD","names":["getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","React","useContext","NavigationHelpersContext","linking","LinkingContext","buildLink","useCallback","name","params","options","enabled","undefined","path","getPathFromState","config"],"sources":["useLinkBuilder.tsx"],"sourcesContent":["import {\n  getPathFromState,\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n"]},"metadata":{},"sourceType":"script"}