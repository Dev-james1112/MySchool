{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StackActions = void 0;\nexports.default = StackRouter;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _nonSecure = require(\"nanoid/non-secure\");\n\nvar _BaseRouter = _interopRequireDefault(require(\"./BaseRouter\"));\n\nvar StackActions = {\n  replace: function replace(name, params) {\n    return {\n      type: 'REPLACE',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  push: function push(name, params) {\n    return {\n      type: 'PUSH',\n      payload: {\n        name: name,\n        params: params\n      }\n    };\n  },\n  pop: function pop() {\n    var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return {\n      type: 'POP',\n      payload: {\n        count: count\n      }\n    };\n  },\n  popToTop: function popToTop() {\n    return {\n      type: 'POP_TO_TOP'\n    };\n  }\n};\nexports.StackActions = StackActions;\n\nfunction StackRouter(options) {\n  var router = Object.assign({}, _BaseRouter.default, {\n    type: 'stack',\n    getInitialState: function getInitialState(_ref) {\n      var routeNames = _ref.routeNames,\n          routeParamList = _ref.routeParamList;\n      var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + (0, _nonSecure.nanoid)(),\n        index: 0,\n        routeNames: routeNames,\n        routes: [{\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        }]\n      };\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref2) {\n      var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n      var state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name);\n      }).map(function (route) {\n        return Object.assign({}, route, {\n          key: route.key || route.name + \"-\" + (0, _nonSecure.nanoid)(),\n          params: routeParamList[route.name] !== undefined ? Object.assign({}, routeParamList[route.name], route.params) : route.params\n        });\n      });\n\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: \"stack-\" + (0, _nonSecure.nanoid)(),\n        index: routes.length - 1,\n        routeNames: routeNames,\n        routes: routes\n      };\n    },\n    getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref3) {\n      var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList,\n          routeKeyChanges = _ref3.routeKeyChanges;\n      var routes = state.routes.filter(function (route) {\n        return routeNames.includes(route.name) && !routeKeyChanges.includes(route.name);\n      });\n\n      if (routes.length === 0) {\n        var initialRouteName = options.initialRouteName !== undefined && routeNames.includes(options.initialRouteName) ? options.initialRouteName : routeNames[0];\n        routes.push({\n          key: initialRouteName + \"-\" + (0, _nonSecure.nanoid)(),\n          name: initialRouteName,\n          params: routeParamList[initialRouteName]\n        });\n      }\n\n      return Object.assign({}, state, {\n        routeNames: routeNames,\n        routes: routes,\n        index: Math.min(state.index, routes.length - 1)\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var index = state.routes.findIndex(function (r) {\n        return r.key === key;\n      });\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return Object.assign({}, state, {\n        index: index,\n        routes: state.routes.slice(0, index + 1)\n      });\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      var routeParamList = options.routeParamList;\n\n      switch (action.type) {\n        case 'REPLACE':\n          {\n            var index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n\n            if (index === -1) {\n              return null;\n            }\n\n            var _action$payload = action.payload,\n                name = _action$payload.name,\n                key = _action$payload.key,\n                params = _action$payload.params;\n\n            if (!state.routeNames.includes(name)) {\n              return null;\n            }\n\n            return Object.assign({}, state, {\n              routes: state.routes.map(function (route, i) {\n                return i === index ? {\n                  key: key !== undefined ? key : name + \"-\" + (0, _nonSecure.nanoid)(),\n                  name: name,\n                  params: routeParamList[name] !== undefined ? Object.assign({}, routeParamList[name], params) : params\n                } : route;\n              })\n            });\n          }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            var getId = options.routeGetIdList[action.payload.name];\n            var id = getId === null || getId === void 0 ? void 0 : getId({\n              params: action.payload.params\n            });\n            var route = id ? state.routes.find(function (route) {\n              return route.name === action.payload.name && id === (getId === null || getId === void 0 ? void 0 : getId({\n                params: route.params\n              }));\n            }) : undefined;\n            var routes;\n\n            if (route) {\n              routes = state.routes.filter(function (r) {\n                return r.key !== route.key;\n              });\n              routes.push(Object.assign({}, route, {\n                params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }));\n            } else {\n              routes = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                name: action.payload.name,\n                params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }]);\n            }\n\n            return Object.assign({}, state, {\n              index: routes.length - 1,\n              routes: routes\n            });\n          }\n\n          return null;\n\n        case 'POP':\n          {\n            var _index = action.target === state.key && action.source ? state.routes.findIndex(function (r) {\n              return r.key === action.source;\n            }) : state.index;\n\n            if (_index > 0) {\n              var count = Math.max(_index - action.payload.count + 1, 1);\n\n              var _routes = state.routes.slice(0, count).concat(state.routes.slice(_index + 1));\n\n              return Object.assign({}, state, {\n                index: _routes.length - 1,\n                routes: _routes\n              });\n            }\n\n            return null;\n          }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(state, {\n            type: 'POP',\n            payload: {\n              count: state.routes.length - 1\n            }\n          }, options);\n\n        case 'NAVIGATE':\n          if (action.payload.name !== undefined && !state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            var _action$payload$path;\n\n            var _index2 = -1;\n\n            var _getId = action.payload.key === undefined && action.payload.name !== undefined ? options.routeGetIdList[action.payload.name] : undefined;\n\n            var _id = _getId === null || _getId === void 0 ? void 0 : _getId({\n              params: action.payload.params\n            });\n\n            if (_id) {\n              _index2 = state.routes.findIndex(function (route) {\n                return route.name === action.payload.name && _id === (_getId === null || _getId === void 0 ? void 0 : _getId({\n                  params: route.params\n                }));\n              });\n            } else if (state.routes[state.index].name === action.payload.name && action.payload.key === undefined || state.routes[state.index].key === action.payload.key) {\n              _index2 = state.index;\n            } else {\n              for (var i = state.routes.length - 1; i >= 0; i--) {\n                if (state.routes[i].name === action.payload.name && action.payload.key === undefined || state.routes[i].key === action.payload.key) {\n                  _index2 = i;\n                  break;\n                }\n              }\n            }\n\n            if (_index2 === -1 && action.payload.key && action.payload.name === undefined) {\n              return null;\n            }\n\n            if (_index2 === -1 && action.payload.name !== undefined) {\n              var _action$payload$key;\n\n              var _routes2 = [].concat((0, _toConsumableArray2.default)(state.routes), [{\n                key: (_action$payload$key = action.payload.key) !== null && _action$payload$key !== void 0 ? _action$payload$key : action.payload.name + \"-\" + (0, _nonSecure.nanoid)(),\n                name: action.payload.name,\n                path: action.payload.path,\n                params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n              }]);\n\n              return Object.assign({}, state, {\n                routes: _routes2,\n                index: _routes2.length - 1\n              });\n            }\n\n            var _route = state.routes[_index2];\n\n            var _params;\n\n            if (action.payload.merge) {\n              _params = action.payload.params !== undefined || routeParamList[_route.name] !== undefined ? Object.assign({}, routeParamList[_route.name], _route.params, action.payload.params) : _route.params;\n            } else {\n              _params = routeParamList[_route.name] !== undefined ? Object.assign({}, routeParamList[_route.name], action.payload.params) : action.payload.params;\n            }\n\n            return Object.assign({}, state, {\n              index: _index2,\n              routes: [].concat((0, _toConsumableArray2.default)(state.routes.slice(0, _index2)), [_params !== _route.params || action.payload.path && action.payload.path !== _route.path ? Object.assign({}, _route, {\n                path: (_action$payload$path = action.payload.path) !== null && _action$payload$path !== void 0 ? _action$payload$path : _route.path,\n                params: _params\n              }) : state.routes[_index2]])\n            });\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(state, {\n              type: 'POP',\n              payload: {\n                count: 1\n              },\n              target: action.target,\n              source: action.source\n            }, options);\n          }\n\n          return null;\n\n        default:\n          return _BaseRouter.default.getStateForAction(state, action);\n      }\n    },\n    actionCreators: StackActions\n  });\n  return router;\n}","map":{"version":3,"mappings":"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","names":["StackActions","replace","name","params","type","payload","push","pop","count","popToTop","StackRouter","options","router","BaseRouter","getInitialState","_ref","routeNames","routeParamList","initialRouteName","undefined","includes","stale","key","nanoid","index","routes","getRehydratedState","partialState","_ref2","state","filter","route","map","length","getStateForRouteNamesChange","_ref3","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","i","getId","routeGetIdList","id","find","max","concat","path","merge","actionCreators"],"sources":["StackRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport BaseRouter from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; key?: string | undefined; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Route name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route for the tab.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: undefined extends ParamList[RouteName]\n      ? [screen: RouteName] | [screen: RouteName, params: ParamList[RouteName]]\n      : [screen: RouteName, params: ParamList[RouteName]]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n};\n\nexport default function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      let state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map(\n          (route) =>\n            ({\n              ...route,\n              key: route.key || `${route.name}-${nanoid()}`,\n              params:\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                    }\n                  : route.params,\n            } as Route<string>)\n        );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, key, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: key !== undefined ? key : `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n          if (state.routeNames.includes(action.payload.name)) {\n            const getId = options.routeGetIdList[action.payload.name];\n            const id = getId?.({ params: action.payload.params });\n\n            const route = id\n              ? state.routes.find(\n                  (route) =>\n                    route.name === action.payload.name &&\n                    id === getId?.({ params: route.params })\n                )\n              : undefined;\n\n            let routes: Route<string>[];\n\n            if (route) {\n              routes = state.routes.filter((r) => r.key !== route.key);\n              routes.push({\n                ...route,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              });\n            } else {\n              routes = [\n                ...state.routes,\n                {\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n            }\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'NAVIGATE':\n          if (\n            action.payload.name !== undefined &&\n            !state.routeNames.includes(action.payload.name)\n          ) {\n            return null;\n          }\n\n          if (action.payload.key || action.payload.name) {\n            // If the route already exists, navigate to that\n            let index = -1;\n\n            const getId =\n              // `getId` and `key` can't be used together\n              action.payload.key === undefined &&\n              action.payload.name !== undefined\n                ? options.routeGetIdList[action.payload.name]\n                : undefined;\n            const id = getId?.({ params: action.payload.params });\n\n            if (id) {\n              index = state.routes.findIndex(\n                (route) =>\n                  route.name === action.payload.name &&\n                  id === getId?.({ params: route.params })\n              );\n            } else if (\n              (state.routes[state.index].name === action.payload.name &&\n                action.payload.key === undefined) ||\n              state.routes[state.index].key === action.payload.key\n            ) {\n              index = state.index;\n            } else {\n              for (let i = state.routes.length - 1; i >= 0; i--) {\n                if (\n                  (state.routes[i].name === action.payload.name &&\n                    action.payload.key === undefined) ||\n                  state.routes[i].key === action.payload.key\n                ) {\n                  index = i;\n                  break;\n                }\n              }\n            }\n\n            if (\n              index === -1 &&\n              action.payload.key &&\n              action.payload.name === undefined\n            ) {\n              return null;\n            }\n\n            if (index === -1 && action.payload.name !== undefined) {\n              const routes = [\n                ...state.routes,\n                {\n                  key:\n                    action.payload.key ?? `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  path: action.payload.path,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                },\n              ];\n\n              return {\n                ...state,\n                routes,\n                index: routes.length - 1,\n              };\n            }\n\n            const route = state.routes[index];\n\n            let params;\n\n            if (action.payload.merge) {\n              params =\n                action.payload.params !== undefined ||\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params,\n                    }\n                  : route.params;\n            } else {\n              params =\n                routeParamList[route.name] !== undefined\n                  ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params,\n                    }\n                  : action.payload.params;\n            }\n\n            return {\n              ...state,\n              index,\n              routes: [\n                ...state.routes.slice(0, index),\n                params !== route.params ||\n                (action.payload.path && action.payload.path !== route.path)\n                  ? {\n                      ...route,\n                      path: action.payload.path ?? route.path,\n                      params,\n                    }\n                  : state.routes[index],\n              ],\n            };\n          }\n\n          return null;\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"]},"metadata":{},"sourceType":"script"}