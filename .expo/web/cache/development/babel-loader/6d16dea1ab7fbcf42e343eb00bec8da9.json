{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeSafeAreaProvider = NativeSafeAreaProvider;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar CSSTransitions = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd'\n};\n\nfunction NativeSafeAreaProvider(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      onInsetsChange = _ref.onInsetsChange;\n  React.useEffect(function () {\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    var element = createContextElement();\n    document.body.appendChild(element);\n\n    var onEnd = function onEnd() {\n      var _window$getComputedSt = window.getComputedStyle(element),\n          paddingTop = _window$getComputedSt.paddingTop,\n          paddingBottom = _window$getComputedSt.paddingBottom,\n          paddingLeft = _window$getComputedSt.paddingLeft,\n          paddingRight = _window$getComputedSt.paddingRight;\n\n      var insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0\n      };\n      var frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight\n      };\n      onInsetsChange({\n        nativeEvent: {\n          insets: insets,\n          frame: frame\n        }\n      });\n    };\n\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return function () {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n  return React.createElement(_reactNative.View, {\n    style: style\n  }, children);\n}\n\nvar _supportedTransitionEvent = null;\n\nfunction getSupportedTransitionEvent() {\n  if (_supportedTransitionEvent != null) {\n    return _supportedTransitionEvent;\n  }\n\n  var element = document.createElement('invalidtype');\n  _supportedTransitionEvent = CSSTransitions.Transition;\n\n  for (var key in CSSTransitions) {\n    if (element.style[key] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n\n  return _supportedTransitionEvent;\n}\n\nvar _supportedEnv = null;\n\nfunction getSupportedEnv() {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n\n  var _window = window,\n      CSS = _window.CSS;\n\n  if (CSS && CSS.supports && CSS.supports('top: constant(safe-area-inset-top)')) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n\n  return _supportedEnv;\n}\n\nfunction getInset(side) {\n  return getSupportedEnv() + \"(safe-area-inset-\" + side + \")\";\n}\n\nfunction createContextElement() {\n  var element = document.createElement('div');\n  var style = element.style;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}","map":{"version":3,"mappings":"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","names":["CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaProvider","children","style","onInsetsChange","React","useEffect","document","element","createContextElement","body","appendChild","onEnd","window","getComputedStyle","paddingTop","paddingBottom","paddingLeft","paddingRight","insets","top","parseInt","bottom","left","right","frame","x","y","width","documentElement","offsetWidth","height","offsetHeight","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","View","_supportedTransitionEvent","createElement","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"sources":["NativeSafeAreaProvider.web.tsx"],"sourcesContent":["/* eslint-env browser */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport type { NativeSafeAreaProviderProps } from './SafeArea.types';\n\n/**\n * TODO:\n * Currently insets and frame are based on the window and are not\n * relative to the provider view. This is inconsistent with iOS and Android.\n * However in most cases if the provider view covers the screen this is not\n * an issue.\n */\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport function NativeSafeAreaProvider({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaProviderProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const { paddingTop, paddingBottom, paddingLeft, paddingRight } =\n        window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets, frame } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null | undefined = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent != null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent as string;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n"]},"metadata":{},"sourceType":"script"}