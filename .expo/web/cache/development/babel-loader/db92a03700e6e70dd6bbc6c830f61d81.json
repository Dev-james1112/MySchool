{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar startNativeAnimationNextId = 1;\n\nvar Animation = function () {\n  function Animation() {\n    (0, _classCallCheck2.default)(this, Animation);\n  }\n\n  (0, _createClass2.default)(Animation, [{\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.__nativeId) {\n        _NativeAnimatedHelper.default.API.stopAnimation(this.__nativeId);\n      }\n    }\n  }, {\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      throw new Error('This animation type cannot be offloaded to native');\n    }\n  }, {\n    key: \"__debouncedOnEnd\",\n    value: function __debouncedOnEnd(result) {\n      var onEnd = this.__onEnd;\n      this.__onEnd = null;\n      onEnd && onEnd(result);\n    }\n  }, {\n    key: \"__startNativeAnimation\",\n    value: function __startNativeAnimation(animatedValue) {\n      var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n      startNativeAnimationNextId += 1;\n\n      _NativeAnimatedHelper.default.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n      try {\n        animatedValue.__makeNative();\n\n        this.__nativeId = _NativeAnimatedHelper.default.generateNewAnimationId();\n\n        _NativeAnimatedHelper.default.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n      } catch (e) {\n        throw e;\n      } finally {\n        _NativeAnimatedHelper.default.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n      }\n    }\n  }]);\n  return Animation;\n}();\n\nvar _default = Animation;\nexports.default = _default;","map":{"version":3,"names":["startNativeAnimationNextId","Animation","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__nativeId","NativeAnimatedHelper","API","stopAnimation","Error","result","__onEnd","startNativeAnimationWaitId","setWaitingForIdentifier","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","__getNativeAnimationConfig","__debouncedOnEnd","bind","e","unsetWaitingForIdentifier"],"sources":["C:/.project/today_meal/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nvar startNativeAnimationNextId = 1; // Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\n\nclass Animation {\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n\n  stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  }\n\n  __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  } // Helper function for subclasses to make sure onEnd is only called once.\n\n\n  __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  }\n\n  __startNativeAnimation(animatedValue) {\n    var startNativeAnimationWaitId = startNativeAnimationNextId + \":startAnimation\";\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n\n    try {\n      animatedValue.__makeNative();\n\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n    }\n  }\n\n}\n\nexport default Animation;"],"mappings":"AASA;;;;;;;;;;;;;AAEA;;AACA,IAAIA,0BAA0B,GAAG,CAAjC;;IAIMC,S;;;;;;;WACJ,eAAMC,SAAN,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkCC,iBAAlC,EAAqDC,aAArD,EAAoE,CAAE;;;WAEtE,gBAAO;MACL,IAAI,KAAKC,UAAT,EAAqB;QACnBC,6BAAA,CAAqBC,GAArB,CAAyBC,aAAzB,CAAuC,KAAKH,UAA5C;MACD;IACF;;;WAED,sCAA6B;MAG3B,MAAM,IAAII,KAAJ,CAAU,mDAAV,CAAN;IACD;;;WAGD,0BAAiBC,MAAjB,EAAyB;MACvB,IAAIR,KAAK,GAAG,KAAKS,OAAjB;MACA,KAAKA,OAAL,GAAe,IAAf;MACAT,KAAK,IAAIA,KAAK,CAACQ,MAAD,CAAd;IACD;;;WAED,gCAAuBN,aAAvB,EAAsC;MACpC,IAAIQ,0BAA0B,GAAGd,0BAA0B,GAAG,iBAA9D;MACAA,0BAA0B,IAAI,CAA9B;;MACAQ,6BAAA,CAAqBC,GAArB,CAAyBM,uBAAzB,CAAiDD,0BAAjD;;MAEA,IAAI;QACFR,aAAa,CAACU,YAAd;;QAEA,KAAKT,UAAL,GAAkBC,6BAAA,CAAqBS,sBAArB,EAAlB;;QACAT,6BAAA,CAAqBC,GAArB,CAAyBS,kBAAzB,CAA4C,KAAKX,UAAjD,EAA6DD,aAAa,CAACa,cAAd,EAA7D,EAA6F,KAAKC,0BAAL,EAA7F,EAAgI,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAhI;MACD,CALD,CAKE,OAAOC,CAAP,EAAU;QACV,MAAMA,CAAN;MACD,CAPD,SAOU;QACRf,6BAAA,CAAqBC,GAArB,CAAyBe,yBAAzB,CAAmDV,0BAAnD;MACD;IACF;;;;;eAIYb,S"},"metadata":{},"sourceType":"script"}