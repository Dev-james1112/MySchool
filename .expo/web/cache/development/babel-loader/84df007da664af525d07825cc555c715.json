{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeViewDescriptorsSet = makeViewDescriptorsSet;\nexports.makeViewsRefSet = makeViewsRefSet;\n\nvar _react = require(\"react\");\n\nvar _core = require(\"./core\");\n\nvar _PlatformChecker = require(\"./PlatformChecker\");\n\nvar scheduleUpdates = (0, _PlatformChecker.shouldBeUseWeb)() ? requestAnimationFrame : setImmediate;\n\nfunction makeViewDescriptorsSet() {\n  var ref = (0, _react.useRef)(null);\n\n  if (ref.current === null) {\n    var data = {\n      batchToRemove: new Set(),\n      tags: new Set(),\n      waitForInsertSync: false,\n      waitForRemoveSync: false,\n      sharableViewDescriptors: (0, _core.makeMutable)([]),\n      items: [],\n      add: function add(item) {\n        if (data.tags.has(item.tag)) {\n          return;\n        }\n\n        data.tags.add(item.tag);\n        data.items.push(item);\n\n        if (!data.waitForInsertSync) {\n          data.waitForInsertSync = true;\n          scheduleUpdates(function () {\n            data.sharableViewDescriptors.value = data.items;\n            data.waitForInsertSync = false;\n          });\n        }\n      },\n      remove: function remove(viewTag) {\n        data.batchToRemove.add(viewTag);\n\n        if (!data.waitForRemoveSync) {\n          data.waitForRemoveSync = true;\n          scheduleUpdates(function () {\n            var items = [];\n\n            for (var item of data.items) {\n              if (data.batchToRemove.has(item.tag)) {\n                data.tags.delete(item.tag);\n              } else {\n                items.push(item);\n              }\n            }\n\n            data.items = items;\n            data.sharableViewDescriptors.value = items;\n            data.batchToRemove = new Set();\n            data.waitForRemoveSync = false;\n          });\n        }\n      },\n      rebuildsharableViewDescriptors: function rebuildsharableViewDescriptors(sharableViewDescriptors) {\n        data.sharableViewDescriptors = sharableViewDescriptors;\n      }\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}\n\nfunction makeViewsRefSet() {\n  var ref = (0, _react.useRef)(null);\n\n  if (ref.current === null) {\n    var data = {\n      items: new Set(),\n      add: function add(item) {\n        if (data.items.has(item)) return;\n        data.items.add(item);\n      },\n      remove: function remove(item) {\n        data.items.delete(item);\n      }\n    };\n    ref.current = data;\n  }\n\n  return ref.current;\n}","map":{"version":3,"names":["scheduleUpdates","shouldBeUseWeb","requestAnimationFrame","setImmediate","makeViewDescriptorsSet","ref","useRef","current","data","batchToRemove","Set","tags","waitForInsertSync","waitForRemoveSync","sharableViewDescriptors","makeMutable","items","add","item","has","tag","push","value","remove","viewTag","delete","rebuildsharableViewDescriptors","makeViewsRefSet"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated2/ViewDescriptorsSet.js"],"sourcesContent":["import { useRef } from 'react';\nimport { makeMutable } from './core';\nimport { shouldBeUseWeb } from './PlatformChecker';\nconst scheduleUpdates = shouldBeUseWeb() ? requestAnimationFrame : setImmediate;\nexport function makeViewDescriptorsSet() {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        const data = {\n            batchToRemove: new Set(),\n            tags: new Set(),\n            waitForInsertSync: false,\n            waitForRemoveSync: false,\n            sharableViewDescriptors: makeMutable([]),\n            items: [],\n            add: (item) => {\n                if (data.tags.has(item.tag)) {\n                    return;\n                }\n                data.tags.add(item.tag);\n                data.items.push(item);\n                if (!data.waitForInsertSync) {\n                    data.waitForInsertSync = true;\n                    scheduleUpdates(() => {\n                        data.sharableViewDescriptors.value = data.items;\n                        data.waitForInsertSync = false;\n                    });\n                }\n            },\n            remove: (viewTag) => {\n                data.batchToRemove.add(viewTag);\n                if (!data.waitForRemoveSync) {\n                    data.waitForRemoveSync = true;\n                    scheduleUpdates(() => {\n                        const items = [];\n                        for (const item of data.items) {\n                            if (data.batchToRemove.has(item.tag)) {\n                                data.tags.delete(item.tag);\n                            }\n                            else {\n                                items.push(item);\n                            }\n                        }\n                        data.items = items;\n                        data.sharableViewDescriptors.value = items;\n                        data.batchToRemove = new Set();\n                        data.waitForRemoveSync = false;\n                    });\n                }\n            },\n            rebuildsharableViewDescriptors: (sharableViewDescriptors) => {\n                data.sharableViewDescriptors = sharableViewDescriptors;\n            },\n        };\n        ref.current = data;\n    }\n    return ref.current;\n}\nexport function makeViewsRefSet() {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        const data = {\n            items: new Set(),\n            add: (item) => {\n                if (data.items.has(item))\n                    return;\n                data.items.add(item);\n            },\n            remove: (item) => {\n                data.items.delete(item);\n            },\n        };\n        ref.current = data;\n    }\n    return ref.current;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}