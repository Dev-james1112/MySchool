{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VEC_LEN_SQ = exports.TEST_MIN_IF_NOT_NAN = exports.TEST_MAX_IF_NOT_NAN = void 0;\nexports.fireAfterInterval = fireAfterInterval;\nexports.isnan = exports.isValidNumber = void 0;\n\nvar isnan = function isnan(v) {\n  return Number.isNaN(v);\n};\n\nexports.isnan = isnan;\n\nvar isValidNumber = function isValidNumber(v) {\n  return typeof v === 'number' && !Number.isNaN(v);\n};\n\nexports.isValidNumber = isValidNumber;\n\nvar TEST_MIN_IF_NOT_NAN = function TEST_MIN_IF_NOT_NAN(value, limit) {\n  return !isnan(limit) && (limit < 0 && value <= limit || limit >= 0 && value >= limit);\n};\n\nexports.TEST_MIN_IF_NOT_NAN = TEST_MIN_IF_NOT_NAN;\n\nvar VEC_LEN_SQ = function VEC_LEN_SQ() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 0 : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 0 : _ref$y;\n\n  return x * x + y * y;\n};\n\nexports.VEC_LEN_SQ = VEC_LEN_SQ;\n\nvar TEST_MAX_IF_NOT_NAN = function TEST_MAX_IF_NOT_NAN(value, max) {\n  return !isnan(max) && (max < 0 && value < max || max >= 0 && value > max);\n};\n\nexports.TEST_MAX_IF_NOT_NAN = TEST_MAX_IF_NOT_NAN;\n\nfunction fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n\n  return setTimeout(function () {\n    return method();\n  }, interval);\n}","map":{"version":3,"mappings":";;;;;;;AACO,IAAMA,KAAK,GAAIC,SAATD,KAASC,EAAD;EAAA,OAAgBC,MAAM,CAACC,KAAPD,CAAaD,CAAbC,CAAhB;AAAA,CAAd;;;;AAGA,IAAME,aAAa,GAAIH,SAAjBG,aAAiBH,EAAD;EAAA,OAC3B,OAAOA,CAAP,KAAa,QAAb,IAAyB,CAACC,MAAM,CAACC,KAAPD,CAAaD,CAAbC,CADC;AAAA,CAAtB;;;;AAGA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAgBC,KAAhB;EAAA,OACjC,CAACP,KAAK,CAACO,KAAD,CAAN,KACEA,KAAK,GAAG,CAARA,IAAaD,KAAK,IAAIC,KAAtBA,IAAiCA,KAAK,IAAI,CAATA,IAAcD,KAAK,IAAIC,KAD1D,CADiC;AAAA,CAA5B;;;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa;EAAA,+EAAoB,EAApB;EAAA,kBAAGC,CAAH;EAAA,IAAGA,CAAH,uBAAO,CAAP;EAAA,kBAAUC,CAAV;EAAA,IAAUA,CAAV,uBAAc,CAAd;;EAAA,OAA2BD,CAAC,GAAGA,CAAJA,GAAQC,CAAC,GAAGA,CAAvC;AAAA,CAAnB;;;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACL,KAAD,EAAgBM,GAAhB;EAAA,OACjC,CAACZ,KAAK,CAACY,GAAD,CAAN,KAAiBA,GAAG,GAAG,CAANA,IAAWN,KAAK,GAAGM,GAAnBA,IAA4BA,GAAG,IAAI,CAAPA,IAAYN,KAAK,GAAGM,GAAjE,CADiC;AAAA,CAA5B;;;;AAGA,SAASC,iBAAT,CACLC,MADK,EAELC,QAFK,EAGL;EACA,IAAI,CAACA,QAAL,EAAe;IACbD,MAAM;IACN,OAAO,IAAP;EACD;;EACD,OAAOE,UAAU,CAAC;IAAA,OAAMF,MAAM,EAAZ;EAAA,CAAD,EAAiBC,QAAjB,CAAjB;AACD","names":["isnan","v","Number","isNaN","isValidNumber","TEST_MIN_IF_NOT_NAN","value","limit","VEC_LEN_SQ","x","y","TEST_MAX_IF_NOT_NAN","max","fireAfterInterval","method","interval","setTimeout"],"sources":["utils.ts"],"sourcesContent":["// TODO(TS) remove if not necessary after rewrite\nexport const isnan = (v: unknown) => Number.isNaN(v);\n\n// TODO(TS) remove if not necessary after rewrite\nexport const isValidNumber = (v: unknown) =>\n  typeof v === 'number' && !Number.isNaN(v);\n\nexport const TEST_MIN_IF_NOT_NAN = (value: number, limit: number): boolean =>\n  !isnan(limit) &&\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value: number, max: number) =>\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\n\nexport function fireAfterInterval(\n  method: () => void,\n  interval?: number | boolean\n) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(() => method(), interval as number);\n}\n"]},"metadata":{},"sourceType":"script"}