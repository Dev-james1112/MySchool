{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAsyncStorage = useAsyncStorage;\n\nvar _AsyncStorage = _interopRequireDefault(require(\"./AsyncStorage\"));\n\nfunction useAsyncStorage(key) {\n  return {\n    getItem: function getItem() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _AsyncStorage.default.getItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    setItem: function setItem() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _AsyncStorage.default.setItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    mergeItem: function mergeItem() {\n      var _AsyncStorage$mergeIt3;\n\n      var _AsyncStorage$mergeIt, _AsyncStorage$mergeIt2;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return (_AsyncStorage$mergeIt = (_AsyncStorage$mergeIt2 = _AsyncStorage.default.mergeItem) === null || _AsyncStorage$mergeIt2 === void 0 ? void 0 : (_AsyncStorage$mergeIt3 = _AsyncStorage$mergeIt2).call.apply(_AsyncStorage$mergeIt3, [_AsyncStorage.default, key].concat(args))) !== null && _AsyncStorage$mergeIt !== void 0 ? _AsyncStorage$mergeIt : Promise.reject('Not implemented');\n    },\n    removeItem: function removeItem() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _AsyncStorage.default.removeItem.apply(_AsyncStorage.default, [key].concat(args));\n    }\n  };\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGO,SAASA,eAAT,CAAyBC,GAAzB,EAAwD;EAC7D,OAAO;IACLC,OAAO,EAAE;MAAA,kCAAIC,IAAJ;QAAIA,IAAJ,MAAIA,GAAJC,eAAID;MAAJ;;MAAA,OAAaE,sBAAaH,OAAbG,+BAAqBJ,GAArBI,SAA6BF,IAA7BE,EAAb;IADJ;IAELC,OAAO,EAAE;MAAA,mCAAIH,IAAJ;QAAIA,IAAJ,OAAIA,GAAJC,gBAAID;MAAJ;;MAAA,OAAaE,sBAAaC,OAAbD,+BAAqBJ,GAArBI,SAA6BF,IAA7BE,EAAb;IAFJ;IAGLE,SAAS,EAAE;MAAA;;MAAA;;MAAA,mCAAIJ,IAAJ;QAAIA,IAAJ,OAAIA,GAAJC,gBAAID;MAAJ;;MAAA,0DACTE,sBAAaE,SADJ,2DACT,6GAAyBN,GAAzB,SAAiCE,IAAjC,EADS,yEAETK,OAAO,CAACC,MAARD,CAAe,iBAAfA,CAFS;IAHN;IAMLE,UAAU,EAAE;MAAA,mCAAIP,IAAJ;QAAIA,IAAJ,OAAIA,GAAJC,gBAAID;MAAJ;;MAAA,OAAaE,sBAAaK,UAAbL,+BAAwBJ,GAAxBI,SAAgCF,IAAhCE,EAAb;IAAA;EANP,CAAP;AAQD","names":["useAsyncStorage","key","getItem","args","arguments","AsyncStorage","setItem","mergeItem","Promise","reject","removeItem"],"sources":["hooks.ts"],"sourcesContent":["import AsyncStorage from './AsyncStorage';\nimport type { AsyncStorageHook } from './types';\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) =>\n      AsyncStorage.mergeItem?.(key, ...args) ??\n      Promise.reject('Not implemented'),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}