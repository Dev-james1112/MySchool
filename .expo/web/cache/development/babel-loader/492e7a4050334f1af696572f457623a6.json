{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSharedValue = useSharedValue;\n\nvar _react = require(\"react\");\n\nvar _animation = require(\"../animation\");\n\nvar _core = require(\"../core\");\n\nfunction useSharedValue(init) {\n  var ref = (0, _react.useRef)((0, _core.makeMutable)(init));\n\n  if (ref.current === null) {\n    ref.current = (0, _core.makeMutable)(init);\n  }\n\n  (0, _react.useEffect)(function () {\n    return function () {\n      (0, _animation.cancelAnimation)(ref.current);\n    };\n  }, []);\n  return ref.current;\n}","map":{"version":3,"names":["useSharedValue","init","ref","useRef","makeMutable","current","useEffect","cancelAnimation"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated2/hook/useSharedValue.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { cancelAnimation } from '../animation';\nimport { makeMutable } from '../core';\nexport function useSharedValue(init) {\n    const ref = useRef(makeMutable(init));\n    if (ref.current === null) {\n        ref.current = makeMutable(init);\n    }\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            cancelAnimation(ref.current);\n        };\n    }, []);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return ref.current;\n}\n"],"mappings":";;;;;AAAA;;AACA;;AACA;;AACO,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;EACjC,IAAMC,GAAG,GAAG,IAAAC,aAAA,EAAO,IAAAC,iBAAA,EAAYH,IAAZ,CAAP,CAAZ;;EACA,IAAIC,GAAG,CAACG,OAAJ,KAAgB,IAApB,EAA0B;IACtBH,GAAG,CAACG,OAAJ,GAAc,IAAAD,iBAAA,EAAYH,IAAZ,CAAd;EACH;;EACD,IAAAK,gBAAA,EAAU,YAAM;IACZ,OAAO,YAAM;MAET,IAAAC,0BAAA,EAAgBL,GAAG,CAACG,OAApB;IACH,CAHD;EAIH,CALD,EAKG,EALH;EAOA,OAAOH,GAAG,CAACG,OAAX;AACH"},"metadata":{},"sourceType":"script"}