{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextInput = exports.Switch = exports.ScrollView = exports.FlatList = exports.DrawerLayoutAndroid = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _createNativeWrapper = _interopRequireDefault(require(\"../handlers/createNativeWrapper\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar ScrollView = (0, _createNativeWrapper.default)(_reactNative.ScrollView, {\n  disallowInterruption: true\n});\nexports.ScrollView = ScrollView;\nvar Switch = (0, _createNativeWrapper.default)(_reactNative.Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexports.Switch = Switch;\nvar TextInput = (0, _createNativeWrapper.default)(_reactNative.TextInput);\nexports.TextInput = TextInput;\nvar DrawerLayoutAndroid = (0, _createNativeWrapper.default)(_reactNative.DrawerLayoutAndroid, {\n  disallowInterruption: true\n});\nexports.DrawerLayoutAndroid = DrawerLayoutAndroid;\nDrawerLayoutAndroid.positions = _reactNative.DrawerLayoutAndroid.positions;\nvar FlatList = React.forwardRef(function (props, ref) {\n  return React.createElement(_reactNative.FlatList, _extends({\n    ref: ref\n  }, props, {\n    renderScrollComponent: function renderScrollComponent(scrollProps) {\n      return React.createElement(ScrollView, scrollProps);\n    }\n  }));\n});\nexports.FlatList = FlatList;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AASA;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,UAAU,GAAGC,kCAAoBC,uBAApBD,EAAkC;EAC1DE,oBAAoB,EAAE;AADoC,CAAlCF,CAAnB;;AAIA,IAAMG,MAAM,GAAGH,kCAAoBI,mBAApBJ,EAA8B;EAClDK,uBAAuB,EAAE,KADyB;EAElDC,qBAAqB,EAAE,IAF2B;EAGlDJ,oBAAoB,EAAE;AAH4B,CAA9BF,CAAf;;AAKA,IAAMO,SAAS,GAAGP,kCAAoBQ,sBAApBR,CAAlB;;AACA,IAAMS,mBAAmB,GAAGT,kCAAoBU,gCAApBV,EAA2C;EAC5EE,oBAAoB,EAAE;AADsD,CAA3CF,CAA5B;;AAIPS,mBAAmB,CAACE,SAApBF,GAAgCC,iCAAsBC,SAAtDF;AAEO,IAAMG,QAAQ,GAAGC,KAAK,CAACC,UAAND,CACtB,UAAoBE,KAApB,EAAiDC,GAAjD;EAAA,OACEH,oBAACI,qBAAD;IACED,GAAG,EAAEA;EADP,GAEMD,KAFN;IAGEG,qBAAqB,EAAGC,0CAAD;MAAA,OAAiBN,oBAACd,UAAD,EAAgBoB,WAAhB,CAAjB;IAAA;EAHzB,GADF;AAAA,CADsBN,CAAjB","names":["ScrollView","createNativeWrapper","RNScrollView","disallowInterruption","Switch","RNSwitch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","RNTextInput","DrawerLayoutAndroid","RNDrawerLayoutAndroid","positions","FlatList","React","forwardRef","props","ref","RNFlatList","renderScrollComponent","scrollProps"],"sources":["GestureComponents.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"script"}