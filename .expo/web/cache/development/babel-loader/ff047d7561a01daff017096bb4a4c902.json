{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SceneView;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _EnsureSingleNavigator = _interopRequireDefault(require(\"./EnsureSingleNavigator\"));\n\nvar _NavigationStateContext = _interopRequireDefault(require(\"./NavigationStateContext\"));\n\nvar _StaticContainer = _interopRequireDefault(require(\"./StaticContainer\"));\n\nvar _useOptionsGetters2 = _interopRequireDefault(require(\"./useOptionsGetters\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction SceneView(_ref) {\n  var screen = _ref.screen,\n      route = _ref.route,\n      navigation = _ref.navigation,\n      routeState = _ref.routeState,\n      getState = _ref.getState,\n      setState = _ref.setState,\n      options = _ref.options,\n      clearOptions = _ref.clearOptions;\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n\n  var _useOptionsGetters = (0, _useOptionsGetters2.default)({\n    key: route.key,\n    options: options,\n    navigation: navigation\n  }),\n      addOptionsGetter = _useOptionsGetters.addOptionsGetter;\n\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var getCurrentState = React.useCallback(function () {\n    var state = getState();\n    var currentRoute = state.routes.find(function (r) {\n      return r.key === route.key;\n    });\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n  var setCurrentState = React.useCallback(function (child) {\n    var state = getState();\n    setState(Object.assign({}, state, {\n      routes: state.routes.map(function (r) {\n        return r.key === route.key ? Object.assign({}, r, {\n          state: child\n        }) : r;\n      })\n    }));\n  }, [getState, route.key, setState]);\n  var isInitialRef = React.useRef(true);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n  });\n  React.useEffect(function () {\n    return clearOptions;\n  }, []);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [routeState, getCurrentState, setCurrentState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var ScreenComponent = screen.getComponent ? screen.getComponent() : screen.component;\n  return React.createElement(_NavigationStateContext.default.Provider, {\n    value: context\n  }, React.createElement(_EnsureSingleNavigator.default, null, React.createElement(_StaticContainer.default, {\n    name: screen.name,\n    render: ScreenComponent || screen.children,\n    navigation: navigation,\n    route: route\n  }, ScreenComponent !== undefined ? React.createElement(ScreenComponent, {\n    navigation: navigation,\n    route: route\n  }) : screen.children !== undefined ? screen.children({\n    navigation: navigation,\n    route: route\n  }) : null)));\n}","map":{"version":3,"mappings":"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","names":["SceneView","screen","route","navigation","routeState","getState","setState","options","clearOptions","navigatorKeyRef","React","useRef","getKey","useCallback","current","useOptionsGetters","key","addOptionsGetter","setKey","getCurrentState","state","currentRoute","routes","find","r","undefined","setCurrentState","child","map","isInitialRef","useEffect","getIsInitial","context","useMemo","ScreenComponent","getComponent","component","NavigationStateContext","Provider","value","EnsureSingleNavigator","StaticContainer","name","render","children"],"sources":["SceneView.tsx"],"sourcesContent":["import type {\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport NavigationStateContext from './NavigationStateContext';\nimport StaticContainer from './StaticContainer';\nimport type { NavigationProp, RouteConfigComponent } from './types';\nimport useOptionsGetters from './useOptionsGetters';\n\ntype Props<State extends NavigationState, ScreenOptions extends {}> = {\n  screen: RouteConfigComponent<ParamListBase, string> & { name: string };\n  navigation: NavigationProp<\n    ParamListBase,\n    string,\n    string | undefined,\n    State,\n    ScreenOptions\n  >;\n  route: Route<string>;\n  routeState: NavigationState | PartialState<NavigationState> | undefined;\n  getState: () => State;\n  setState: (state: State) => void;\n  options: object;\n  clearOptions: () => void;\n};\n\n/**\n * Component which takes care of rendering the screen for a route.\n * It provides all required contexts and applies optimizations when applicable.\n */\nexport default function SceneView<\n  State extends NavigationState,\n  ScreenOptions extends {}\n>({\n  screen,\n  route,\n  navigation,\n  routeState,\n  getState,\n  setState,\n  options,\n  clearOptions,\n}: Props<State, ScreenOptions>) {\n  const navigatorKeyRef = React.useRef<string | undefined>();\n  const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n  const { addOptionsGetter } = useOptionsGetters({\n    key: route.key,\n    options,\n    navigation,\n  });\n\n  const setKey = React.useCallback((key: string) => {\n    navigatorKeyRef.current = key;\n  }, []);\n\n  const getCurrentState = React.useCallback(() => {\n    const state = getState();\n    const currentRoute = state.routes.find((r) => r.key === route.key);\n\n    return currentRoute ? currentRoute.state : undefined;\n  }, [getState, route.key]);\n\n  const setCurrentState = React.useCallback(\n    (child: NavigationState | PartialState<NavigationState> | undefined) => {\n      const state = getState();\n\n      setState({\n        ...state,\n        routes: state.routes.map((r) =>\n          r.key === route.key ? { ...r, state: child } : r\n        ),\n      });\n    },\n    [getState, route.key, setState]\n  );\n\n  const isInitialRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isInitialRef.current = false;\n  });\n\n  // Clear options set by this screen when it is unmounted\n  React.useEffect(() => {\n    return clearOptions;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n  const context = React.useMemo(\n    () => ({\n      state: routeState,\n      getState: getCurrentState,\n      setState: setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    }),\n    [\n      routeState,\n      getCurrentState,\n      setCurrentState,\n      getKey,\n      setKey,\n      getIsInitial,\n      addOptionsGetter,\n    ]\n  );\n\n  const ScreenComponent = screen.getComponent\n    ? screen.getComponent()\n    : screen.component;\n\n  return (\n    <NavigationStateContext.Provider value={context}>\n      <EnsureSingleNavigator>\n        <StaticContainer\n          name={screen.name}\n          render={ScreenComponent || screen.children}\n          navigation={navigation}\n          route={route}\n        >\n          {ScreenComponent !== undefined ? (\n            <ScreenComponent navigation={navigation} route={route} />\n          ) : screen.children !== undefined ? (\n            screen.children({ navigation, route })\n          ) : null}\n        </StaticContainer>\n      </EnsureSingleNavigator>\n    </NavigationStateContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}