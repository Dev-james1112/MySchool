{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.attachRecoveredProps = void 0;\n\nvar attachRecoveredProps = function attachRecoveredProps(props) {\n  try {\n    var _require = require('expo-error-recovery'),\n        recoveredProps = _require.recoveredProps;\n\n    return Object.assign({}, props, {\n      exp: Object.assign({}, props.exp, {\n        errorRecovery: recoveredProps\n      })\n    });\n  } catch (_unused) {}\n\n  return props;\n};\n\nexports.attachRecoveredProps = attachRecoveredProps;","map":{"version":3,"mappings":";;;;;AAEO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAyBC,KAAzB,EAAwC;EAC1E,IAAI;IAEF,eAA2BC,OAAO,CAAC,qBAAD,CAAlC;IAAA,IAAQC,cAAR,YAAQA,cAAR;;IACA,yBACKF,KADL;MAEEG,GAAG,oBAAOH,KAAK,CAACG,GAAb;QAAkBC,aAAa,EAAEF;MAAjC;IAFL;EAID,CAPD,CAOE,gBAAM,CAAE;;EAEV,OAAOF,KAAP;AACD,CAXM","names":["attachRecoveredProps","props","require","recoveredProps","exp","errorRecovery"],"sourceRoot":"","sources":["../../src/launch/RecoveryProps.ts"],"sourcesContent":["import { InitialProps } from './withExpoRoot.types';\n\nexport const attachRecoveredProps = <P extends InitialProps>(props: P): P => {\n  try {\n    // Optionally import expo-error-recovery\n    const { recoveredProps } = require('expo-error-recovery');\n    return {\n      ...props,\n      exp: { ...props.exp, errorRecovery: recoveredProps },\n    };\n  } catch {}\n\n  return props;\n};\n"]},"metadata":{},"sourceType":"script"}