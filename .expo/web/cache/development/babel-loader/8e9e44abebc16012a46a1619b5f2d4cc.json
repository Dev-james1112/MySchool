{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useEventEmitter;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction useEventEmitter(listen) {\n  var listenRef = React.useRef(listen);\n  React.useEffect(function () {\n    listenRef.current = listen;\n  });\n  var listeners = React.useRef({});\n  var create = React.useCallback(function (target) {\n    var removeListener = function removeListener(type, callback) {\n      var callbacks = listeners.current[type] ? listeners.current[type][target] : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      var index = callbacks.indexOf(callback);\n\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    };\n\n    var addListener = function addListener(type, callback) {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n      var removed = false;\n      return function () {\n        if (!removed) {\n          removed = true;\n          removeListener(type, callback);\n        }\n      };\n    };\n\n    return {\n      addListener: addListener,\n      removeListener: removeListener\n    };\n  }, []);\n  var emit = React.useCallback(function (_ref) {\n    var _ref2;\n\n    var _items$target, _listenRef$current;\n\n    var type = _ref.type,\n        data = _ref.data,\n        target = _ref.target,\n        canPreventDefault = _ref.canPreventDefault;\n    var items = listeners.current[type] || {};\n    var callbacks = target !== undefined ? (_items$target = items[target]) === null || _items$target === void 0 ? void 0 : _items$target.slice() : (_ref2 = []).concat.apply(_ref2, (0, _toConsumableArray2.default)(Object.keys(items).map(function (t) {\n      return items[t];\n    }))).filter(function (cb, i, self) {\n      return self.lastIndexOf(cb) === i;\n    });\n    var event = {\n      get type() {\n        return type;\n      }\n\n    };\n\n    if (target !== undefined) {\n      Object.defineProperty(event, 'target', {\n        enumerable: true,\n        get: function get() {\n          return target;\n        }\n      });\n    }\n\n    if (data !== undefined) {\n      Object.defineProperty(event, 'data', {\n        enumerable: true,\n        get: function get() {\n          return data;\n        }\n      });\n    }\n\n    if (canPreventDefault) {\n      var defaultPrevented = false;\n      Object.defineProperties(event, {\n        defaultPrevented: {\n          enumerable: true,\n          get: function get() {\n            return defaultPrevented;\n          }\n        },\n        preventDefault: {\n          enumerable: true,\n          value: function value() {\n            defaultPrevented = true;\n          }\n        }\n      });\n    }\n\n    (_listenRef$current = listenRef.current) === null || _listenRef$current === void 0 ? void 0 : _listenRef$current.call(listenRef, event);\n    callbacks === null || callbacks === void 0 ? void 0 : callbacks.forEach(function (cb) {\n      return cb(event);\n    });\n    return event;\n  }, []);\n  return React.useMemo(function () {\n    return {\n      create: create,\n      emit: emit\n    };\n  }, [create, emit]);\n}","map":{"version":3,"mappings":"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","names":["useEventEmitter","listen","listenRef","React","useRef","useEffect","current","listeners","create","useCallback","target","removeListener","type","callback","callbacks","undefined","index","indexOf","splice","addListener","push","removed","emit","data","canPreventDefault","items","_items$target","slice","concat","Object","keys","map","t","filter","cb","i","self","lastIndexOf","event","defineProperty","enumerable","get","defaultPrevented","defineProperties","preventDefault","value","forEach","useMemo"],"sources":["useEventEmitter.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { EventArg, EventConsumer, EventEmitter } from './types';\n\nexport type NavigationEventEmitter<T extends Record<string, any>> =\n  EventEmitter<T> & {\n    create: (target: string) => EventConsumer<T>;\n  };\n\ntype Listeners = ((e: any) => void)[];\n\n/**\n * Hook to manage the event system used by the navigator to notify screens of various events.\n */\nexport default function useEventEmitter<T extends Record<string, any>>(\n  listen?: (e: any) => void\n): NavigationEventEmitter<T> {\n  const listenRef = React.useRef(listen);\n\n  React.useEffect(() => {\n    listenRef.current = listen;\n  });\n\n  const listeners = React.useRef<Record<string, Record<string, Listeners>>>({});\n\n  const create = React.useCallback((target: string) => {\n    const removeListener = (type: string, callback: (data: any) => void) => {\n      const callbacks = listeners.current[type]\n        ? listeners.current[type][target]\n        : undefined;\n\n      if (!callbacks) {\n        return;\n      }\n\n      const index = callbacks.indexOf(callback);\n\n      if (index > -1) {\n        callbacks.splice(index, 1);\n      }\n    };\n\n    const addListener = (type: string, callback: (data: any) => void) => {\n      listeners.current[type] = listeners.current[type] || {};\n      listeners.current[type][target] = listeners.current[type][target] || [];\n      listeners.current[type][target].push(callback);\n\n      let removed = false;\n      return () => {\n        // Prevent removing other listeners when unsubscribing same listener multiple times\n        if (!removed) {\n          removed = true;\n          removeListener(type, callback);\n        }\n      };\n    };\n\n    return {\n      addListener,\n      removeListener,\n    };\n  }, []);\n\n  const emit = React.useCallback(\n    ({\n      type,\n      data,\n      target,\n      canPreventDefault,\n    }: {\n      type: string;\n      data?: any;\n      target?: string;\n      canPreventDefault?: boolean;\n    }) => {\n      const items = listeners.current[type] || {};\n\n      // Copy the current list of callbacks in case they are mutated during execution\n      const callbacks =\n        target !== undefined\n          ? items[target]?.slice()\n          : ([] as Listeners)\n              .concat(...Object.keys(items).map((t) => items[t]))\n              .filter((cb, i, self) => self.lastIndexOf(cb) === i);\n\n      const event: EventArg<any, any, any> = {\n        get type() {\n          return type;\n        },\n      };\n\n      if (target !== undefined) {\n        Object.defineProperty(event, 'target', {\n          enumerable: true,\n          get() {\n            return target;\n          },\n        });\n      }\n\n      if (data !== undefined) {\n        Object.defineProperty(event, 'data', {\n          enumerable: true,\n          get() {\n            return data;\n          },\n        });\n      }\n\n      if (canPreventDefault) {\n        let defaultPrevented = false;\n\n        Object.defineProperties(event, {\n          defaultPrevented: {\n            enumerable: true,\n            get() {\n              return defaultPrevented;\n            },\n          },\n          preventDefault: {\n            enumerable: true,\n            value() {\n              defaultPrevented = true;\n            },\n          },\n        });\n      }\n\n      listenRef.current?.(event);\n\n      callbacks?.forEach((cb) => cb(event));\n\n      return event as any;\n    },\n    []\n  );\n\n  return React.useMemo(() => ({ create, emit }), [create, emit]);\n}\n"]},"metadata":{},"sourceType":"script"}