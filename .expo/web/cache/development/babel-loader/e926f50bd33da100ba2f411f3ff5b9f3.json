{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createAnimatedComponent;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _ReanimatedEventEmitter = _interopRequireDefault(require(\"./ReanimatedEventEmitter\"));\n\nvar _AnimatedEvent = _interopRequireDefault(require(\"./reanimated1/core/AnimatedEvent\"));\n\nvar _AnimatedNode = _interopRequireDefault(require(\"./reanimated1/core/AnimatedNode\"));\n\nvar _AnimatedValue = _interopRequireDefault(require(\"./reanimated1/core/AnimatedValue\"));\n\nvar _AnimatedProps = require(\"./reanimated1/core/AnimatedProps\");\n\nvar _WorkletEventHandler = _interopRequireDefault(require(\"./reanimated2/WorkletEventHandler\"));\n\nvar _setAndForwardRef = _interopRequireDefault(require(\"./setAndForwardRef\"));\n\nrequire(\"./reanimated2/layoutReanimation/LayoutAnimationRepository\");\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _ConfigHelper = require(\"./ConfigHelper\");\n\nvar _RNRenderer = require(\"./reanimated2/platform-specific/RNRenderer\");\n\nvar _core = require(\"./reanimated2/core\");\n\nvar _Default = require(\"./reanimated2/layoutReanimation/defaultAnimations/Default\");\n\nvar _PlatformChecker = require(\"./reanimated2/PlatformChecker\");\n\nvar _animation = require(\"./reanimated2/animation\");\n\nvar _jsxFileName = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\createAnimatedComponent.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar NODE_MAPPING = new Map();\n\nfunction listener(data) {\n  var component = NODE_MAPPING.get(data.viewTag);\n  component && component._updateFromNative(data.props);\n}\n\nfunction dummyListener() {}\n\nfunction hasAnimatedNodes(value) {\n  if (value instanceof _AnimatedNode.default) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.some(function (item) {\n      return hasAnimatedNodes(item);\n    });\n  }\n\n  if (value && typeof value === 'object') {\n    return Object.keys(value).some(function (key) {\n      return hasAnimatedNodes(value[key]);\n    });\n  }\n\n  return false;\n}\n\nfunction flattenArray(array) {\n  if (!Array.isArray(array)) {\n    return [array];\n  }\n\n  var resultArr = [];\n\n  var _flattenArray = function _flattenArray(arr) {\n    arr.forEach(function (item) {\n      if (Array.isArray(item)) {\n        _flattenArray(item);\n      } else {\n        resultArr.push(item);\n      }\n    });\n  };\n\n  _flattenArray(array);\n\n  return resultArr;\n}\n\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\n\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\n\nvar isSameAnimatedProps = isSameAnimatedStyle;\n\nvar has = function has(key, x) {\n  if (typeof x === 'function' || typeof x === 'object') {\n    if (x === null || x === undefined) {\n      return false;\n    } else {\n      return key in x;\n    }\n  }\n\n  return false;\n};\n\nfunction createAnimatedComponent(Component, options) {\n  var _this4 = this;\n\n  (0, _invariant.default)(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, '`createAnimatedComponent` does not support stateless functional components; ' + 'use a class component instead.');\n\n  var AnimatedComponent = function (_React$Component) {\n    (0, _inherits2.default)(AnimatedComponent, _React$Component);\n\n    var _super = _createSuper(AnimatedComponent);\n\n    function AnimatedComponent(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedComponent);\n      _this = _super.call(this, props);\n      _this._invokeAnimatedPropsCallbackOnMount = false;\n      _this._styles = null;\n      _this._viewTag = -1;\n      _this._isFirstRender = true;\n      _this.animatedStyle = {\n        value: {}\n      };\n      _this.initialStyle = {};\n      _this._component = null;\n\n      _this._animatedPropsCallback = function () {\n        if (_this._component == null) {\n          _this._invokeAnimatedPropsCallbackOnMount = true;\n        } else if (typeof _this._component.setNativeProps !== 'function') {\n          _this.forceUpdate();\n        } else {\n          _this._component.setNativeProps(_this._propsAnimated.__getValue());\n        }\n      };\n\n      _this._setComponentRef = (0, _setAndForwardRef.default)({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = (0, _reactNative.findNodeHandle)(ref);\n\n          if ((_this.props.layout || _this.props.entering || _this.props.exiting) && tag != null) {\n            if (!(0, _PlatformChecker.shouldBeUseWeb)()) {\n              (0, _core.enableLayoutAnimations)(true, false);\n            }\n\n            var layout = _this.props.layout ? _this.props.layout : _Default.DefaultLayout;\n            var entering = _this.props.entering ? _this.props.entering : _Default.DefaultEntering;\n            var exiting = _this.props.exiting ? _this.props.exiting : _Default.DefaultExiting;\n\n            if (has('build', layout)) {\n              layout = layout.build();\n            }\n\n            if (has('build', entering)) {\n              entering = entering.build();\n            }\n\n            if (has('build', exiting)) {\n              exiting = exiting.build();\n            }\n\n            var config = {\n              layout: layout,\n              entering: entering,\n              exiting: exiting,\n              sv: _this.sv\n            };\n            (0, _core.runOnUI)(function () {\n              var _f = function _f() {\n                global.LayoutAnimationRepository.registerConfig(tag, config);\n              };\n\n              _f._closure = {\n                tag: tag,\n                config: config\n              };\n              _f.asString = \"function _f(){const{tag,config}=jsThis._closure;{global.LayoutAnimationRepository.registerConfig(tag,config);}}\";\n              _f.__workletHash = 5455589887771;\n              _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\createAnimatedComponent.js (149:32)\";\n              return _f;\n            }())();\n          }\n\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      });\n\n      _this._attachProps(_this.props);\n\n      if ((0, _PlatformChecker.isJest)()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n\n      _this.sv = (0, _core.makeMutable)({});\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedComponent, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this._detachPropUpdater();\n\n        this._propsAnimated && this._propsAnimated.__detach();\n\n        this._detachNativeEvents();\n\n        this._detachStyles();\n\n        this.sv = null;\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this._invokeAnimatedPropsCallbackOnMount) {\n          this._invokeAnimatedPropsCallbackOnMount = false;\n\n          this._animatedPropsCallback();\n        }\n\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n\n        this._attachNativeEvents();\n\n        this._attachPropUpdater();\n\n        this._attachAnimatedStyles();\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _a;\n\n        return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode() : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n\n        var viewTag = (0, _reactNative.findNodeHandle)((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\n\n        for (var key in this.props) {\n          var prop = this.props[key];\n\n          if (prop instanceof _AnimatedEvent.default) {\n            prop.attachEvent(node, key);\n          } else if (has('current', prop) && prop.current instanceof _WorkletEventHandler.default) {\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        var node = this._getEventViewRef();\n\n        for (var key in this.props) {\n          var prop = this.props[key];\n\n          if (prop instanceof _AnimatedEvent.default) {\n            prop.detachEvent(node, key);\n          } else if (has('current', prop) && prop.current instanceof _WorkletEventHandler.default) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        var _a;\n\n        if (_reactNative.Platform.OS === 'web' && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style === null || style === void 0 ? void 0 : style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n\n          if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        var node = this._getEventViewRef();\n\n        var attached = new Set();\n        var nextEvts = new Set();\n        var viewTag;\n\n        for (var key in this.props) {\n          var prop = this.props[key];\n\n          if (prop instanceof _AnimatedEvent.default) {\n            nextEvts.add(prop.__nodeID);\n          } else if (has('current', prop) && prop.current instanceof _WorkletEventHandler.default) {\n            if (viewTag === undefined) {\n              viewTag = prop.current.viewTag;\n            }\n          }\n        }\n\n        for (var _key in prevProps) {\n          var _prop = this.props[_key];\n\n          if (_prop instanceof _AnimatedEvent.default) {\n            if (!nextEvts.has(_prop.__nodeID)) {\n              _prop.detachEvent(node, _key);\n            } else {\n              attached.add(_prop.__nodeID);\n            }\n          } else if (has('current', _prop) && _prop.current instanceof _WorkletEventHandler.default && _prop.current.reattachNeeded) {\n            _prop.current.unregisterFromEvents();\n          }\n        }\n\n        for (var _key2 in this.props) {\n          var _prop2 = this.props[_key2];\n\n          if (_prop2 instanceof _AnimatedEvent.default && !attached.has(_prop2.__nodeID)) {\n            _prop2.attachEvent(node, _key2);\n          } else if (has('current', _prop2) && _prop2.current instanceof _WorkletEventHandler.default && _prop2.current.reattachNeeded) {\n            _prop2.current.registerForEvents(viewTag, _key2);\n\n            _prop2.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_attachProps\",\n      value: function _attachProps(nextProps) {\n        var oldPropsAnimated = this._propsAnimated;\n        this._propsAnimated = (0, _AnimatedProps.createOrReusePropsNode)(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n\n        if (oldPropsAnimated !== this._propsAnimated) {\n          oldPropsAnimated && oldPropsAnimated.__detach();\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        var _a, _b;\n\n        if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\n        }\n      }\n    }, {\n      key: \"_attachPropUpdater\",\n      value: function _attachPropUpdater() {\n        var viewTag = (0, _reactNative.findNodeHandle)(this);\n        NODE_MAPPING.set(viewTag, this);\n\n        if (NODE_MAPPING.size === 1) {\n          _ReanimatedEventEmitter.default.addListener('onReanimatedPropsChange', listener);\n        }\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n\n        var _a, _b, _c;\n\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var viewTag;\n        var viewName;\n\n        if (_reactNative.Platform.OS === 'web') {\n          viewTag = (0, _reactNative.findNodeHandle)(this);\n          viewName = null;\n        } else {\n          var hostInstance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(this);\n\n          if (!hostInstance) {\n            throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\n          var hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\n\n          if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\n            (0, _ConfigHelper.adaptViewConfig)(hostInstance.viewConfig);\n          }\n        }\n\n        this._viewTag = viewTag;\n\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName\n          });\n\n          if ((0, _PlatformChecker.isJest)()) {\n            _this2.animatedStyle.value = Object.assign(Object.assign({}, _this2.animatedStyle.value), style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n\n        if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName\n          });\n        }\n      }\n    }, {\n      key: \"_detachPropUpdater\",\n      value: function _detachPropUpdater() {\n        var viewTag = (0, _reactNative.findNodeHandle)(this);\n        NODE_MAPPING.delete(viewTag);\n\n        if (NODE_MAPPING.size === 0) {\n          _ReanimatedEventEmitter.default.removeAllListeners('onReanimatedPropsChange');\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        this._attachProps(this.props);\n\n        this._reattachNativeEvents(prevProps);\n\n        this._propsAnimated && this._propsAnimated.setNativeView(this._component);\n\n        this._attachAnimatedStyles();\n      }\n    }, {\n      key: \"_filterNonAnimatedStyle\",\n      value: function _filterNonAnimatedStyle(inputStyle) {\n        var style = {};\n\n        for (var key in inputStyle) {\n          var value = inputStyle[key];\n\n          if (!hasAnimatedNodes(value)) {\n            style[key] = value;\n          } else if (value instanceof _AnimatedValue.default) {\n            style[key] = value._startingValue;\n          }\n        }\n\n        return style;\n      }\n    }, {\n      key: \"_filterNonAnimatedProps\",\n      value: function _filterNonAnimatedProps(inputProps) {\n        var _this3 = this;\n\n        var props = {};\n\n        var _loop2 = function _loop2(key) {\n          var value = inputProps[key];\n\n          if (key === 'style') {\n            var styleProp = inputProps.style;\n            var styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n            var processedStyle = styles.map(function (style) {\n              if (style && style.viewDescriptors) {\n                style.viewsRef.add(_this3);\n\n                if (_this3._isFirstRender) {\n                  _this3.initialStyle = Object.assign(Object.assign({}, style.initial.value), (0, _animation.initialUpdaterRun)(style.initial.updater));\n                }\n\n                return _this3.initialStyle;\n              } else {\n                return style;\n              }\n            });\n            props[key] = _this3._filterNonAnimatedStyle(_reactNative.StyleSheet.flatten(processedStyle));\n          } else if (key === 'animatedProps') {\n            var animatedProp = inputProps.animatedProps;\n\n            if (animatedProp.initial !== undefined) {\n              Object.keys(animatedProp.initial.value).forEach(function (key) {\n                var _a, _b;\n\n                props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\n                (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(_this3);\n              });\n            }\n          } else if (value instanceof _AnimatedEvent.default) {\n            props[key] = dummyListener;\n          } else if (has('current', value) && value.current instanceof _WorkletEventHandler.default) {\n            if (value.current.eventNames.length > 0) {\n              value.current.eventNames.forEach(function (eventName) {\n                props[eventName] = has('listeners', value.current) ? value.current.listeners[eventName] : dummyListener;\n              });\n            } else {\n              props[key] = dummyListener;\n            }\n          } else if (!(value instanceof _AnimatedNode.default)) {\n            if (key !== 'onGestureHandlerStateChange' || !(0, _PlatformChecker.isChromeDebugger)()) {\n              props[key] = value;\n            }\n          } else if (value instanceof _AnimatedValue.default) {\n            props[key] = value._startingValue;\n          }\n        };\n\n        for (var key in inputProps) {\n          _loop2(key);\n        }\n\n        return props;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._filterNonAnimatedProps(this.props);\n\n        if ((0, _PlatformChecker.isJest)()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n\n        if (this._isFirstRender) {\n          this._isFirstRender = false;\n        }\n\n        var platformProps = _reactNative.Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n\n        return _react.default.createElement(Component, (0, _extends2.default)({}, props, {\n          ref: this._setComponentRef\n        }, platformProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 21\n          }\n        }));\n      }\n    }]);\n    return AnimatedComponent;\n  }(_react.default.Component);\n\n  AnimatedComponent.displayName = \"AnimatedComponent(\" + (Component.displayName || Component.name || 'Component') + \")\";\n  return _react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(AnimatedComponent, (0, _extends2.default)({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }, {\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }\n    }));\n  });\n}","map":{"version":3,"names":["NODE_MAPPING","Map","listener","data","component","get","viewTag","_updateFromNative","props","dummyListener","hasAnimatedNodes","value","AnimatedNode","Array","isArray","some","item","Object","keys","key","flattenArray","array","resultArr","_flattenArray","arr","forEach","push","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","has","x","undefined","createAnimatedComponent","Component","options","invariant","prototype","isReactComponent","AnimatedComponent","_invokeAnimatedPropsCallbackOnMount","_styles","_viewTag","_isFirstRender","animatedStyle","initialStyle","_component","_animatedPropsCallback","setNativeProps","forceUpdate","_propsAnimated","__getValue","_setComponentRef","setAndForwardRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","findNodeHandle","layout","entering","exiting","shouldBeUseWeb","enableLayoutAnimations","DefaultLayout","DefaultEntering","DefaultExiting","build","config","sv","runOnUI","global","LayoutAnimationRepository","registerConfig","_attachProps","isJest","makeMutable","_detachPropUpdater","__detach","_detachNativeEvents","_detachStyles","setNativeView","_attachNativeEvents","_attachPropUpdater","_attachAnimatedStyles","_a","getScrollableNode","node","_getEventViewRef","prop","AnimatedEvent","attachEvent","current","WorkletEventHandler","registerForEvents","detachEvent","unregisterFromEvents","Platform","OS","remove","animatedProps","prevProps","attached","Set","nextEvts","add","__nodeID","reattachNeeded","nextProps","oldPropsAnimated","createOrReusePropsNode","_b","call","set","size","ReanimatedEventEmitter","addListener","_c","prevStyles","prevAnimatedProps","_animatedProps","viewName","hostInstance","RNRenderer","findHostInstance_DEPRECATED","Error","_nativeTag","viewConfig","uiViewClassName","hasReanimated2Props","length","adaptViewConfig","hasOneSameStyle","prevStyle","isPresent","name","assign","initial","delete","removeAllListeners","_reattachNativeEvents","inputStyle","AnimatedValue","_startingValue","inputProps","styleProp","processedStyle","map","initialUpdaterRun","updater","_filterNonAnimatedStyle","StyleSheet","flatten","animatedProp","eventNames","eventName","listeners","isChromeDebugger","_filterNonAnimatedProps","platformProps","select","web","default","collapsable","React","displayName","forwardRef"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/createAnimatedComponent.js"],"sourcesContent":["import React from 'react';\nimport { findNodeHandle, Platform, StyleSheet } from 'react-native';\nimport ReanimatedEventEmitter from './ReanimatedEventEmitter';\n// @ts-ignore JS file\nimport AnimatedEvent from './reanimated1/core/AnimatedEvent';\n// @ts-ignore JS file\nimport AnimatedNode from './reanimated1/core/AnimatedNode';\n// @ts-ignore JS file\nimport AnimatedValue from './reanimated1/core/AnimatedValue';\n// @ts-ignore JS file\nimport { createOrReusePropsNode } from './reanimated1/core/AnimatedProps';\nimport WorkletEventHandler from './reanimated2/WorkletEventHandler';\nimport setAndForwardRef from './setAndForwardRef';\nimport './reanimated2/layoutReanimation/LayoutAnimationRepository';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from './ConfigHelper';\nimport { RNRenderer } from './reanimated2/platform-specific/RNRenderer';\nimport { makeMutable, runOnUI, enableLayoutAnimations, } from './reanimated2/core';\nimport { DefaultEntering, DefaultExiting, DefaultLayout, } from './reanimated2/layoutReanimation/defaultAnimations/Default';\nimport { isJest, isChromeDebugger, shouldBeUseWeb, } from './reanimated2/PlatformChecker';\nimport { initialUpdaterRun } from './reanimated2/animation';\nconst NODE_MAPPING = new Map();\nfunction listener(data) {\n    const component = NODE_MAPPING.get(data.viewTag);\n    component && component._updateFromNative(data.props);\n}\nfunction dummyListener() {\n    // empty listener we use to assign to listener properties for which animated\n    // event is used.\n}\nfunction hasAnimatedNodes(value) {\n    if (value instanceof AnimatedNode) {\n        return true;\n    }\n    if (Array.isArray(value)) {\n        return value.some((item) => hasAnimatedNodes(item));\n    }\n    if (value && typeof value === 'object') {\n        return Object.keys(value).some((key) => hasAnimatedNodes(value[key]));\n    }\n    return false;\n}\nfunction flattenArray(array) {\n    if (!Array.isArray(array)) {\n        return [array];\n    }\n    const resultArr = [];\n    const _flattenArray = (arr) => {\n        arr.forEach((item) => {\n            if (Array.isArray(item)) {\n                _flattenArray(item);\n            }\n            else {\n                resultArr.push(item);\n            }\n        });\n    };\n    _flattenArray(array);\n    return resultArr;\n}\nfunction onlyAnimatedStyles(styles) {\n    return styles.filter((style) => style === null || style === void 0 ? void 0 : style.viewDescriptors);\n}\nfunction isSameAnimatedStyle(style1, style2) {\n    // We cannot use equality check to compare useAnimatedStyle outputs directly.\n    // Instead, we can compare its viewsRefs.\n    return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nconst isSameAnimatedProps = isSameAnimatedStyle;\nconst has = (key, x) => {\n    if (typeof x === 'function' || typeof x === 'object') {\n        if (x === null || x === undefined) {\n            return false;\n        }\n        else {\n            return key in x;\n        }\n    }\n    return false;\n};\nexport default function createAnimatedComponent(Component, options) {\n    invariant(typeof Component !== 'function' ||\n        (Component.prototype && Component.prototype.isReactComponent), '`createAnimatedComponent` does not support stateless functional components; ' +\n        'use a class component instead.');\n    class AnimatedComponent extends React.Component {\n        constructor(props) {\n            super(props);\n            this._invokeAnimatedPropsCallbackOnMount = false;\n            this._styles = null;\n            this._viewTag = -1;\n            this._isFirstRender = true;\n            this.animatedStyle = { value: {} };\n            this.initialStyle = {};\n            this._component = null;\n            // The system is best designed when setNativeProps is implemented. It is\n            // able to avoid re-rendering and directly set the attributes that changed.\n            // However, setNativeProps can only be implemented on native components\n            // If you want to animate a composite component, you need to re-render it.\n            // In this case, we have a fallback that uses forceUpdate.\n            this._animatedPropsCallback = () => {\n                if (this._component == null) {\n                    // AnimatedProps is created in will-mount because it's used in render.\n                    // But this callback may be invoked before mount in async mode,\n                    // In which case we should defer the setNativeProps() call.\n                    // React may throw away uncommitted work in async mode,\n                    // So a deferred call won't always be invoked.\n                    this._invokeAnimatedPropsCallbackOnMount = true;\n                }\n                else if (typeof this._component.setNativeProps !== 'function') {\n                    this.forceUpdate();\n                }\n                else {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this._component.setNativeProps(this._propsAnimated.__getValue());\n                }\n            };\n            this._setComponentRef = setAndForwardRef({\n                getForwardedRef: () => this.props.forwardedRef,\n                setLocalRef: (ref) => {\n                    // TODO update config\n                    const tag = findNodeHandle(ref);\n                    if ((this.props.layout || this.props.entering || this.props.exiting) &&\n                        tag != null) {\n                        if (!shouldBeUseWeb()) {\n                            enableLayoutAnimations(true, false);\n                        }\n                        let layout = this.props.layout ? this.props.layout : DefaultLayout;\n                        let entering = this.props.entering\n                            ? this.props.entering\n                            : DefaultEntering;\n                        let exiting = this.props.exiting\n                            ? this.props.exiting\n                            : DefaultExiting;\n                        if (has('build', layout)) {\n                            layout = layout.build();\n                        }\n                        if (has('build', entering)) {\n                            entering = entering.build();\n                        }\n                        if (has('build', exiting)) {\n                            exiting = exiting.build();\n                        }\n                        const config = {\n                            layout,\n                            entering,\n                            exiting,\n                            sv: this.sv,\n                        };\n                        runOnUI(() => {\n                            'worklet';\n                            global.LayoutAnimationRepository.registerConfig(tag, config);\n                        })();\n                    }\n                    if (ref !== this._component) {\n                        this._component = ref;\n                    }\n                },\n            });\n            this._attachProps(this.props);\n            if (isJest()) {\n                this.animatedStyle = { value: {} };\n            }\n            this.sv = makeMutable({});\n        }\n        componentWillUnmount() {\n            this._detachPropUpdater();\n            this._propsAnimated && this._propsAnimated.__detach();\n            this._detachNativeEvents();\n            this._detachStyles();\n            this.sv = null;\n        }\n        componentDidMount() {\n            if (this._invokeAnimatedPropsCallbackOnMount) {\n                this._invokeAnimatedPropsCallbackOnMount = false;\n                this._animatedPropsCallback();\n            }\n            this._propsAnimated &&\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._propsAnimated.setNativeView(this._component);\n            this._attachNativeEvents();\n            this._attachPropUpdater();\n            this._attachAnimatedStyles();\n        }\n        _getEventViewRef() {\n            var _a;\n            // Make sure to get the scrollable node for components that implement\n            // `ScrollResponder.Mixin`.\n            return ((_a = this._component) === null || _a === void 0 ? void 0 : _a.getScrollableNode) ? this._component.getScrollableNode()\n                : this._component;\n        }\n        _attachNativeEvents() {\n            const node = this._getEventViewRef();\n            const viewTag = findNodeHandle((options === null || options === void 0 ? void 0 : options.setNativeProps) ? this : node);\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    prop.attachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    prop.current.registerForEvents(viewTag, key);\n                }\n            }\n        }\n        _detachNativeEvents() {\n            const node = this._getEventViewRef();\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    prop.detachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    prop.current.unregisterFromEvents();\n                }\n            }\n        }\n        _detachStyles() {\n            var _a;\n            if (Platform.OS === 'web' && this._styles !== null) {\n                for (const style of this._styles) {\n                    if (style === null || style === void 0 ? void 0 : style.viewsRef) {\n                        style.viewsRef.remove(this);\n                    }\n                }\n            }\n            else if (this._viewTag !== -1 && this._styles !== null) {\n                for (const style of this._styles) {\n                    style.viewDescriptors.remove(this._viewTag);\n                }\n                if ((_a = this.props.animatedProps) === null || _a === void 0 ? void 0 : _a.viewDescriptors) {\n                    this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n                }\n            }\n        }\n        _reattachNativeEvents(prevProps) {\n            const node = this._getEventViewRef();\n            const attached = new Set();\n            const nextEvts = new Set();\n            let viewTag;\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    nextEvts.add(prop.__nodeID);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler) {\n                    if (viewTag === undefined) {\n                        viewTag = prop.current.viewTag;\n                    }\n                }\n            }\n            for (const key in prevProps) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent) {\n                    if (!nextEvts.has(prop.__nodeID)) {\n                        // event was in prev props but not in current props, we detach\n                        prop.detachEvent(node, key);\n                    }\n                    else {\n                        // event was in prev and is still in current props\n                        attached.add(prop.__nodeID);\n                    }\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler &&\n                    prop.current.reattachNeeded) {\n                    prop.current.unregisterFromEvents();\n                }\n            }\n            for (const key in this.props) {\n                const prop = this.props[key];\n                if (prop instanceof AnimatedEvent &&\n                    !attached.has(prop.__nodeID)) {\n                    // not yet attached\n                    prop.attachEvent(node, key);\n                }\n                else if (has('current', prop) &&\n                    prop.current instanceof WorkletEventHandler &&\n                    prop.current.reattachNeeded) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    prop.current.registerForEvents(viewTag, key);\n                    prop.current.reattachNeeded = false;\n                }\n            }\n        }\n        _attachProps(nextProps) {\n            const oldPropsAnimated = this._propsAnimated;\n            this._propsAnimated = createOrReusePropsNode(nextProps, this._animatedPropsCallback, oldPropsAnimated);\n            // If prop node has been reused we don't need to call into \"__detach\"\n            if (oldPropsAnimated !== this._propsAnimated) {\n                // When you call detach, it removes the element from the parent list\n                // of children. If it goes to 0, then the parent also detaches itself\n                // and so on.\n                // An optimization is to attach the new elements and THEN detach the old\n                // ones instead of detaching and THEN attaching.\n                // This way the intermediate state isn't to go to 0 and trigger\n                // this expensive recursive detaching to then re-attach everything on\n                // the very next operation.\n                oldPropsAnimated && oldPropsAnimated.__detach();\n            }\n        }\n        _updateFromNative(props) {\n            var _a, _b;\n            if (options === null || options === void 0 ? void 0 : options.setNativeProps) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                options.setNativeProps(this._component, props);\n            }\n            else {\n                // eslint-disable-next-line no-unused-expressions\n                (_b = (_a = this._component) === null || _a === void 0 ? void 0 : _a.setNativeProps) === null || _b === void 0 ? void 0 : _b.call(_a, props);\n            }\n        }\n        _attachPropUpdater() {\n            const viewTag = findNodeHandle(this);\n            NODE_MAPPING.set(viewTag, this);\n            if (NODE_MAPPING.size === 1) {\n                ReanimatedEventEmitter.addListener('onReanimatedPropsChange', listener);\n            }\n        }\n        _attachAnimatedStyles() {\n            var _a, _b, _c;\n            const styles = this.props.style\n                ? onlyAnimatedStyles(flattenArray(this.props.style))\n                : [];\n            const prevStyles = this._styles;\n            this._styles = styles;\n            const prevAnimatedProps = this._animatedProps;\n            this._animatedProps = this.props.animatedProps;\n            let viewTag;\n            let viewName;\n            if (Platform.OS === 'web') {\n                viewTag = findNodeHandle(this);\n                viewName = null;\n            }\n            else {\n                // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n                const hostInstance = RNRenderer.findHostInstance_DEPRECATED(this);\n                if (!hostInstance) {\n                    throw new Error('Cannot find host instance for this component. Maybe it renders nothing?');\n                }\n                // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n                viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n                /**\n                 * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/master/Libraries/Components/ScrollView/ScrollViewViewConfig.js#L16).\n                 * The name we're looking for is in the field named uiViewClassName.\n                 */\n                viewName = (_a = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig) === null || _a === void 0 ? void 0 : _a.uiViewClassName;\n                // update UI props whitelist for this view\n                const hasReanimated2Props = ((_b = this.props.animatedProps) === null || _b === void 0 ? void 0 : _b.viewDescriptors) || styles.length;\n                if (hasReanimated2Props && (hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig)) {\n                    adaptViewConfig(hostInstance.viewConfig);\n                }\n            }\n            this._viewTag = viewTag;\n            // remove old styles\n            if (prevStyles) {\n                // in most of the cases, views have only a single animated style and it remains unchanged\n                const hasOneSameStyle = styles.length === 1 &&\n                    prevStyles.length === 1 &&\n                    isSameAnimatedStyle(styles[0], prevStyles[0]);\n                if (!hasOneSameStyle) {\n                    // otherwise, remove each style that is not present in new styles\n                    for (const prevStyle of prevStyles) {\n                        const isPresent = styles.some((style) => isSameAnimatedStyle(style, prevStyle));\n                        if (!isPresent) {\n                            prevStyle.viewDescriptors.remove(viewTag);\n                        }\n                    }\n                }\n            }\n            styles.forEach((style) => {\n                style.viewDescriptors.add({ tag: viewTag, name: viewName });\n                if (isJest()) {\n                    /**\n                     * We need to connect Jest's TestObject instance whose contains just props object\n                     * with the updateProps() function where we update the properties of the component.\n                     * We can't update props object directly because TestObject contains a copy of props - look at render function:\n                     * const props = this._filterNonAnimatedProps(this.props);\n                     */\n                    this.animatedStyle.value = Object.assign(Object.assign({}, this.animatedStyle.value), style.initial.value);\n                    style.animatedStyle.current = this.animatedStyle;\n                }\n            });\n            // detach old animatedProps\n            if (prevAnimatedProps &&\n                !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n                prevAnimatedProps.viewDescriptors.remove(viewTag);\n            }\n            // attach animatedProps property\n            if ((_c = this.props.animatedProps) === null || _c === void 0 ? void 0 : _c.viewDescriptors) {\n                this.props.animatedProps.viewDescriptors.add({\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tag: viewTag,\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    name: viewName,\n                });\n            }\n        }\n        _detachPropUpdater() {\n            const viewTag = findNodeHandle(this);\n            NODE_MAPPING.delete(viewTag);\n            if (NODE_MAPPING.size === 0) {\n                ReanimatedEventEmitter.removeAllListeners('onReanimatedPropsChange');\n            }\n        }\n        componentDidUpdate(prevProps) {\n            this._attachProps(this.props);\n            this._reattachNativeEvents(prevProps);\n            this._propsAnimated &&\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this._propsAnimated.setNativeView(this._component);\n            this._attachAnimatedStyles();\n        }\n        _filterNonAnimatedStyle(inputStyle) {\n            const style = {};\n            for (const key in inputStyle) {\n                const value = inputStyle[key];\n                if (!hasAnimatedNodes(value)) {\n                    style[key] = value;\n                }\n                else if (value instanceof AnimatedValue) {\n                    // if any style in animated component is set directly to the `Value` we set those styles to the first value of `Value` node in order\n                    // to avoid flash of default styles when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n                    style[key] = value._startingValue;\n                }\n            }\n            return style;\n        }\n        _filterNonAnimatedProps(inputProps) {\n            const props = {};\n            for (const key in inputProps) {\n                const value = inputProps[key];\n                if (key === 'style') {\n                    const styleProp = inputProps.style;\n                    const styles = flattenArray(styleProp !== null && styleProp !== void 0 ? styleProp : []);\n                    const processedStyle = styles.map((style) => {\n                        if (style && style.viewDescriptors) {\n                            // this is how we recognize styles returned by useAnimatedStyle\n                            style.viewsRef.add(this);\n                            if (this._isFirstRender) {\n                                this.initialStyle = Object.assign(Object.assign({}, style.initial.value), initialUpdaterRun(style.initial.updater));\n                            }\n                            return this.initialStyle;\n                        }\n                        else {\n                            return style;\n                        }\n                    });\n                    props[key] = this._filterNonAnimatedStyle(StyleSheet.flatten(processedStyle));\n                }\n                else if (key === 'animatedProps') {\n                    const animatedProp = inputProps.animatedProps;\n                    if (animatedProp.initial !== undefined) {\n                        Object.keys(animatedProp.initial.value).forEach((key) => {\n                            var _a, _b;\n                            props[key] = (_a = animatedProp.initial) === null || _a === void 0 ? void 0 : _a.value[key];\n                            (_b = animatedProp.viewsRef) === null || _b === void 0 ? void 0 : _b.add(this);\n                        });\n                    }\n                }\n                else if (value instanceof AnimatedEvent) {\n                    // we cannot filter out event listeners completely as some components\n                    // rely on having a callback registered in order to generate events\n                    // alltogether. Therefore we provide a dummy callback here to allow\n                    // native event dispatcher to hijack events.\n                    props[key] = dummyListener;\n                }\n                else if (has('current', value) &&\n                    value.current instanceof WorkletEventHandler) {\n                    if (value.current.eventNames.length > 0) {\n                        value.current.eventNames.forEach((eventName) => {\n                            props[eventName] = has('listeners', value.current)\n                                ? value.current.listeners[eventName]\n                                : dummyListener;\n                        });\n                    }\n                    else {\n                        props[key] = dummyListener;\n                    }\n                }\n                else if (!(value instanceof AnimatedNode)) {\n                    if (key !== 'onGestureHandlerStateChange' || !isChromeDebugger()) {\n                        props[key] = value;\n                    }\n                }\n                else if (value instanceof AnimatedValue) {\n                    // if any prop in animated component is set directly to the `Value` we set those props to the first value of `Value` node in order\n                    // to avoid default values for a short moment when `Value` is being asynchrounously sent via bridge and initialized in the native side.\n                    props[key] = value._startingValue;\n                }\n            }\n            return props;\n        }\n        render() {\n            const props = this._filterNonAnimatedProps(this.props);\n            if (isJest()) {\n                props.animatedStyle = this.animatedStyle;\n            }\n            if (this._isFirstRender) {\n                this._isFirstRender = false;\n            }\n            const platformProps = Platform.select({\n                web: {},\n                default: { collapsable: false },\n            });\n            return (<Component {...props} ref={this._setComponentRef} {...platformProps}/>);\n        }\n    }\n    AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n    return React.forwardRef((props, ref) => {\n        return (<AnimatedComponent {...props} {...(ref === null ? null : { forwardedRef: ref })}/>);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}