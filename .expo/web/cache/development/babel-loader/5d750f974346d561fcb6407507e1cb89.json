{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = DevLoadingView;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _DevLoadingViewNativeModule = _interopRequireDefault(require(\"./DevLoadingViewNativeModule\"));\n\nvar _getInitialSafeArea = require(\"./getInitialSafeArea\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction DevLoadingView() {\n  var _useState = (0, _react.useState)('Refreshing...'),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isDevLoading = _useState4[0],\n      setIsDevLoading = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      isAnimating = _useState6[0],\n      setIsAnimating = _useState6[1];\n\n  var translateY = (0, _react.useRef)(new _reactNative.Animated.Value(0)).current;\n  var emitter = (0, _react.useMemo)(function () {\n    try {\n      return new _expoModulesCore.EventEmitter(_DevLoadingViewNativeModule.default);\n    } catch (error) {\n      throw new Error('Failed to instantiate native emitter in `DevLoadingView` because the native module `DevLoadingView` is undefined: ' + error.message);\n    }\n  }, []);\n  (0, _react.useEffect)(function () {\n    if (!emitter) return;\n\n    function handleShowMessage(event) {\n      setMessage(event.message);\n      translateY.setValue(0);\n      setIsDevLoading(true);\n    }\n\n    function handleHide() {\n      setIsAnimating(true);\n      setIsDevLoading(false);\n\n      _reactNative.Animated.timing(translateY, {\n        toValue: 150,\n        delay: 1000,\n        duration: 350,\n        useNativeDriver: _reactNative.Platform.OS !== 'web'\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n\n        if (finished) {\n          setIsAnimating(false);\n          translateY.setValue(0);\n        }\n      });\n    }\n\n    var showMessageSubscription = emitter.addListener('devLoadingView:showMessage', handleShowMessage);\n    var hideSubscription = emitter.addListener('devLoadingView:hide', handleHide);\n    return function cleanup() {\n      showMessageSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, [translateY, emitter]);\n\n  if (!isDevLoading && !isAnimating) {\n    return null;\n  }\n\n  return _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.animatedContainer, {\n      transform: [{\n        translateY: translateY\n      }]\n    }],\n    pointerEvents: \"none\"\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.banner\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.contentContainer\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row'\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.text\n  }, message)), _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.subtitle\n  }, isDevLoading ? 'Using Fast Refresh' : \"Don't see your changes? Reload the app\")))));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  animatedContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 42\n  },\n  banner: {\n    flex: 1,\n    overflow: 'visible',\n    backgroundColor: 'rgba(0,0,0,0.75)',\n    paddingBottom: (0, _getInitialSafeArea.getInitialSafeArea)().bottom\n  },\n  contentContainer: {\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center'\n  },\n  text: {\n    color: '#fff',\n    fontSize: 15\n  },\n  subtitle: {\n    color: 'rgba(255,255,255,0.8)'\n  }\n});","map":{"version":3,"mappings":"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","names":["DevLoadingView","message","setMessage","isDevLoading","setIsDevLoading","isAnimating","setIsAnimating","translateY","Animated","Value","current","emitter","EventEmitter","DevLoadingViewNativeModule","error","Error","handleShowMessage","event","setValue","handleHide","timing","toValue","delay","duration","useNativeDriver","Platform","OS","start","finished","showMessageSubscription","addListener","hideSubscription","cleanup","remove","React","View","style","styles","animatedContainer","transform","pointerEvents","banner","contentContainer","flexDirection","Text","text","flex","subtitle","StyleSheet","create","position","bottom","left","right","zIndex","overflow","backgroundColor","paddingBottom","paddingTop","alignItems","justifyContent","textAlign","color","fontSize"],"sourceRoot":"","sources":["../../src/environment/DevLoadingView.tsx"],"sourcesContent":["import { EventEmitter } from 'expo-modules-core';\nimport React, { useEffect, useState, useRef, useMemo } from 'react';\nimport { Animated, StyleSheet, Text, Platform, View } from 'react-native';\n\nimport DevLoadingViewNativeModule from './DevLoadingViewNativeModule';\nimport { getInitialSafeArea } from './getInitialSafeArea';\n\nexport default function DevLoadingView() {\n  const [message, setMessage] = useState('Refreshing...');\n  const [isDevLoading, setIsDevLoading] = useState(false);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const translateY = useRef(new Animated.Value(0)).current;\n  const emitter = useMemo<EventEmitter>(() => {\n    try {\n      return new EventEmitter(DevLoadingViewNativeModule);\n    } catch (error) {\n      throw new Error(\n        'Failed to instantiate native emitter in `DevLoadingView` because the native module `DevLoadingView` is undefined: ' +\n          error.message\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!emitter) return;\n\n    function handleShowMessage(event: { message: string }) {\n      setMessage(event.message);\n      // TODO: if we show the refreshing banner and don't get a hide message\n      // for 3 seconds, warn the user that it's taking a while and suggest\n      // they reload\n\n      translateY.setValue(0);\n      setIsDevLoading(true);\n    }\n\n    function handleHide() {\n      // TODO: if we showed the 'refreshing' banner less than 250ms ago, delay\n      // switching to the 'finished' banner\n\n      setIsAnimating(true);\n      setIsDevLoading(false);\n      Animated.timing(translateY, {\n        toValue: 150,\n        delay: 1000,\n        duration: 350,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsAnimating(false);\n          translateY.setValue(0);\n        }\n      });\n    }\n\n    const showMessageSubscription = emitter.addListener(\n      'devLoadingView:showMessage',\n      handleShowMessage\n    );\n    const hideSubscription = emitter.addListener('devLoadingView:hide', handleHide);\n\n    return function cleanup() {\n      showMessageSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, [translateY, emitter]);\n\n  if (!isDevLoading && !isAnimating) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={[styles.animatedContainer, { transform: [{ translateY }] }]}\n      pointerEvents=\"none\">\n      <View style={styles.banner}>\n        <View style={styles.contentContainer}>\n          <View style={{ flexDirection: 'row' }}>\n            <Text style={styles.text}>{message}</Text>\n          </View>\n\n          <View style={{ flex: 1 }}>\n            <Text style={styles.subtitle}>\n              {isDevLoading ? 'Using Fast Refresh' : \"Don't see your changes? Reload the app\"}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  animatedContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 42, // arbitrary\n  },\n\n  banner: {\n    flex: 1,\n    overflow: 'visible',\n    backgroundColor: 'rgba(0,0,0,0.75)',\n    paddingBottom: getInitialSafeArea().bottom,\n  },\n  contentContainer: {\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 5,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n  },\n  text: {\n    color: '#fff',\n    fontSize: 15,\n  },\n  subtitle: {\n    color: 'rgba(255,255,255,0.8)',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}