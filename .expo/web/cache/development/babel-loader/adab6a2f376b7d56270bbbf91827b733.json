{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAnimatedStyle = useAnimatedStyle;\n\nvar _react = require(\"react\");\n\nvar _core = require(\"../core\");\n\nvar _UpdateProps = _interopRequireWildcard(require(\"../UpdateProps\"));\n\nvar _animation = require(\"../animation\");\n\nvar _NativeReanimated = _interopRequireDefault(require(\"../NativeReanimated\"));\n\nvar _useSharedValue = require(\"./useSharedValue\");\n\nvar _utils = require(\"./utils\");\n\nvar _ViewDescriptorsSet = require(\"../ViewDescriptorsSet\");\n\nvar _PlatformChecker = require(\"../PlatformChecker\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar prepareAnimation = function () {\n  var _f = function _f(animatedProp, lastAnimation, lastValue) {\n    if (Array.isArray(animatedProp)) {\n      animatedProp.forEach(function (prop, index) {\n        return prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n      });\n    }\n\n    if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n      var animation = animatedProp;\n      var value = animation.current;\n\n      if (lastValue !== undefined) {\n        if (typeof lastValue === 'object') {\n          if (lastValue.value !== undefined) {\n            value = lastValue.value;\n          } else if (lastValue.onFrame !== undefined) {\n            if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n              value = lastAnimation.current;\n            } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n              value = lastValue.current;\n            }\n          }\n        } else {\n          value = lastValue;\n        }\n      }\n\n      animation.callStart = function (timestamp) {\n        animation.onStart(animation, value, timestamp, lastAnimation);\n      };\n\n      animation.callStart((0, _core.getTimestamp)());\n      animation.callStart = null;\n    } else if (typeof animatedProp === 'object') {\n      Object.keys(animatedProp).forEach(function (key) {\n        return prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n      });\n    }\n  };\n\n  _f._closure = {\n    getTimestamp: _core.getTimestamp\n  };\n  _f.asString = \"function prepareAnimation(animatedProp,lastAnimation,lastValue){const{getTimestamp}=jsThis._closure;{if(Array.isArray(animatedProp)){animatedProp.forEach(function(prop,index){return prepareAnimation(prop,lastAnimation&&lastAnimation[index],lastValue&&lastValue[index]);});}if(typeof animatedProp==='object'&&animatedProp.onFrame){const animation=animatedProp;let value=animation.current;if(lastValue!==undefined){if(typeof lastValue==='object'){if(lastValue.value!==undefined){value=lastValue.value;}else if(lastValue.onFrame!==undefined){if((lastAnimation===null||lastAnimation===void 0?void 0:lastAnimation.current)!==undefined){value=lastAnimation.current;}else if((lastValue===null||lastValue===void 0?void 0:lastValue.current)!==undefined){value=lastValue.current;}}}else{value=lastValue;}}animation.callStart=function(timestamp){animation.onStart(animation,value,timestamp,lastAnimation);};animation.callStart(getTimestamp());animation.callStart=null;}else if(typeof animatedProp==='object'){Object.keys(animatedProp).forEach(function(key){return prepareAnimation(animatedProp[key],lastAnimation&&lastAnimation[key],lastValue&&lastValue[key]);});}}}\";\n  _f.__workletHash = 1333702046144;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (11:0)\";\n  return _f;\n}();\n\nvar runAnimations = function () {\n  var _f = function _f(animation, timestamp, key, result, animationsActive) {\n    if (!animationsActive.value) {\n      return true;\n    }\n\n    if (Array.isArray(animation)) {\n      result[key] = [];\n      var allFinished = true;\n      animation.forEach(function (entry, index) {\n        if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n          allFinished = false;\n        }\n      });\n      return allFinished;\n    } else if (typeof animation === 'object' && animation.onFrame) {\n      var finished = true;\n\n      if (!animation.finished) {\n        if (animation.callStart) {\n          animation.callStart(timestamp);\n          animation.callStart = null;\n        }\n\n        finished = animation.onFrame(animation, timestamp);\n        animation.timestamp = timestamp;\n\n        if (finished) {\n          animation.finished = true;\n          animation.callback && animation.callback(true);\n        }\n      }\n\n      result[key] = animation.current;\n      return finished;\n    } else if (typeof animation === 'object') {\n      result[key] = {};\n      var _allFinished = true;\n      Object.keys(animation).forEach(function (k) {\n        if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n          _allFinished = false;\n        }\n      });\n      return _allFinished;\n    } else {\n      result[key] = animation;\n      return true;\n    }\n  };\n\n  _f._closure = {};\n  _f.asString = \"function runAnimations(animation,timestamp,key,result,animationsActive){if(!animationsActive.value){return true;}if(Array.isArray(animation)){result[key]=[];let allFinished=true;animation.forEach(function(entry,index){if(!runAnimations(entry,timestamp,index,result[key],animationsActive)){allFinished=false;}});return allFinished;}else if(typeof animation==='object'&&animation.onFrame){let finished=true;if(!animation.finished){if(animation.callStart){animation.callStart(timestamp);animation.callStart=null;}finished=animation.onFrame(animation,timestamp);animation.timestamp=timestamp;if(finished){animation.finished=true;animation.callback&&animation.callback(true);}}result[key]=animation.current;return finished;}else if(typeof animation==='object'){result[key]={};let allFinished=true;Object.keys(animation).forEach(function(k){if(!runAnimations(animation[k],timestamp,k,result[key],animationsActive)){allFinished=false;}});return allFinished;}else{result[key]=animation;return true;}}\";\n  _f.__workletHash = 3625332641327;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (53:0)\";\n  return _f;\n}();\n\nvar styleUpdater = function () {\n  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n    var _a, _b;\n\n    var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    var oldValues = state.last;\n    var hasAnimations = false;\n\n    for (var key in newValues) {\n      var value = newValues[key];\n\n      if ((0, _utils.isAnimated)(value)) {\n        prepareAnimation(value, animations[key], oldValues[key]);\n        animations[key] = value;\n        hasAnimations = true;\n      } else {\n        delete animations[key];\n      }\n    }\n\n    if (hasAnimations) {\n      var frame = function frame(timestamp) {\n        var animations = state.animations,\n            last = state.last,\n            isAnimationCancelled = state.isAnimationCancelled;\n\n        if (isAnimationCancelled) {\n          state.isAnimationRunning = false;\n          return;\n        }\n\n        var updates = {};\n        var allFinished = true;\n\n        for (var propName in animations) {\n          var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n          if (finished) {\n            last[propName] = updates[propName];\n            delete animations[propName];\n          } else {\n            allFinished = false;\n          }\n        }\n\n        if (updates) {\n          (0, _UpdateProps.default)(viewDescriptors, updates, maybeViewRef);\n        }\n\n        if (!allFinished) {\n          (0, _core.requestFrame)(frame);\n        } else {\n          state.isAnimationRunning = false;\n        }\n      };\n\n      state.animations = animations;\n\n      if (!state.isAnimationRunning) {\n        state.isAnimationCancelled = false;\n        state.isAnimationRunning = true;\n\n        if (_frameTimestamp) {\n          frame(_frameTimestamp);\n        } else {\n          (0, _core.requestFrame)(frame);\n        }\n      }\n\n      state.last = Object.assign({}, oldValues, newValues);\n      var style = (0, _utils.getStyleWithoutAnimations)(state.last);\n\n      if (style) {\n        (0, _UpdateProps.default)(viewDescriptors, style, maybeViewRef);\n      }\n    } else {\n      state.isAnimationCancelled = true;\n      state.animations = [];\n      var diff = (0, _utils.styleDiff)(oldValues, newValues);\n      state.last = Object.assign({}, oldValues, newValues);\n\n      if (diff) {\n        (0, _UpdateProps.default)(viewDescriptors, newValues, maybeViewRef);\n      }\n    }\n  };\n\n  _f._closure = {\n    isAnimated: _utils.isAnimated,\n    prepareAnimation: prepareAnimation,\n    runAnimations: runAnimations,\n    updateProps: _UpdateProps.default,\n    requestFrame: _core.requestFrame,\n    getStyleWithoutAnimations: _utils.getStyleWithoutAnimations,\n    styleDiff: _utils.styleDiff\n  };\n  _f.asString = \"function styleUpdater(viewDescriptors,updater,state,maybeViewRef,animationsActive){const{isAnimated,prepareAnimation,runAnimations,updateProps,requestFrame,getStyleWithoutAnimations,styleDiff}=jsThis._closure;{var _a,_b;const animations=(_a=state.animations)!==null&&_a!==void 0?_a:{};const newValues=(_b=updater())!==null&&_b!==void 0?_b:{};const oldValues=state.last;let hasAnimations=false;for(const key in newValues){const value=newValues[key];if(isAnimated(value)){prepareAnimation(value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}else{delete animations[key];}}if(hasAnimations){const frame=function(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;for(const propName in animations){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}}if(updates){updateProps(viewDescriptors,updates,maybeViewRef);}if(!allFinished){requestFrame(frame);}else{state.isAnimationRunning=false;}};state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;if(_frameTimestamp){frame(_frameTimestamp);}else{requestFrame(frame);}}state.last=Object.assign({},oldValues,newValues);const style=getStyleWithoutAnimations(state.last);if(style){updateProps(viewDescriptors,style,maybeViewRef);}}else{state.isAnimationCancelled=true;state.animations=[];const diff=styleDiff(oldValues,newValues);state.last=Object.assign({},oldValues,newValues);if(diff){updateProps(viewDescriptors,newValues,maybeViewRef);}}}}\";\n  _f.__workletHash = 13069955727964;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (100:0)\";\n  return _f;\n}();\n\nvar jestStyleUpdater = function () {\n  var _f = function _f(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n    var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n\n    var _a, _b;\n\n    var animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    var newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    var oldValues = state.last;\n    var hasAnimations = false;\n    Object.keys(animations).forEach(function (key) {\n      var value = newValues[key];\n\n      if (!(0, _utils.isAnimated)(value)) {\n        delete animations[key];\n      }\n    });\n    Object.keys(newValues).forEach(function (key) {\n      var value = newValues[key];\n\n      if ((0, _utils.isAnimated)(value)) {\n        prepareAnimation(value, animations[key], oldValues[key]);\n        animations[key] = value;\n        hasAnimations = true;\n      }\n    });\n\n    function frame(timestamp) {\n      var animations = state.animations,\n          last = state.last,\n          isAnimationCancelled = state.isAnimationCancelled;\n\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      var updates = {};\n      var allFinished = true;\n      Object.keys(animations).forEach(function (propName) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      });\n\n      if (Object.keys(updates).length) {\n        (0, _UpdateProps.updatePropsJestWrapper)(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n      }\n\n      if (!allFinished) {\n        (0, _core.requestFrame)(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    }\n\n    if (hasAnimations) {\n      state.animations = animations;\n\n      if (!state.isAnimationRunning) {\n        state.isAnimationCancelled = false;\n        state.isAnimationRunning = true;\n\n        if (_frameTimestamp) {\n          frame(_frameTimestamp);\n        } else {\n          (0, _core.requestFrame)(frame);\n        }\n      }\n    } else {\n      state.isAnimationCancelled = true;\n      state.animations = [];\n    }\n\n    var diff = (0, _utils.styleDiff)(oldValues, newValues);\n    state.last = Object.assign({}, oldValues, newValues);\n\n    if (Object.keys(diff).length !== 0) {\n      (0, _UpdateProps.updatePropsJestWrapper)(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\n    }\n  };\n\n  _f._closure = {\n    isAnimated: _utils.isAnimated,\n    prepareAnimation: prepareAnimation,\n    runAnimations: runAnimations,\n    updatePropsJestWrapper: _UpdateProps.updatePropsJestWrapper,\n    requestFrame: _core.requestFrame,\n    styleDiff: _utils.styleDiff\n  };\n  _f.asString = \"function jestStyleUpdater(viewDescriptors,updater,state,maybeViewRef,animationsActive,animatedStyle,adapters=[]){const{isAnimated,prepareAnimation,runAnimations,updatePropsJestWrapper,requestFrame,styleDiff}=jsThis._closure;{var _a,_b;const animations=(_a=state.animations)!==null&&_a!==void 0?_a:{};const newValues=(_b=updater())!==null&&_b!==void 0?_b:{};const oldValues=state.last;let hasAnimations=false;Object.keys(animations).forEach(function(key){const value=newValues[key];if(!isAnimated(value)){delete animations[key];}});Object.keys(newValues).forEach(function(key){const value=newValues[key];if(isAnimated(value)){prepareAnimation(value,animations[key],oldValues[key]);animations[key]=value;hasAnimations=true;}});function frame(timestamp){const{animations:animations,last:last,isAnimationCancelled:isAnimationCancelled}=state;if(isAnimationCancelled){state.isAnimationRunning=false;return;}const updates={};let allFinished=true;Object.keys(animations).forEach(function(propName){const finished=runAnimations(animations[propName],timestamp,propName,updates,animationsActive);if(finished){last[propName]=updates[propName];delete animations[propName];}else{allFinished=false;}});if(Object.keys(updates).length){updatePropsJestWrapper(viewDescriptors,updates,maybeViewRef,animatedStyle,adapters);}if(!allFinished){requestFrame(frame);}else{state.isAnimationRunning=false;}}if(hasAnimations){state.animations=animations;if(!state.isAnimationRunning){state.isAnimationCancelled=false;state.isAnimationRunning=true;if(_frameTimestamp){frame(_frameTimestamp);}else{requestFrame(frame);}}}else{state.isAnimationCancelled=true;state.animations=[];}const diff=styleDiff(oldValues,newValues);state.last=Object.assign({},oldValues,newValues);if(Object.keys(diff).length!==0){updatePropsJestWrapper(viewDescriptors,diff,maybeViewRef,animatedStyle,adapters);}}}\";\n  _f.__workletHash = 13781832065631;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (174:0)\";\n  return _f;\n}();\n\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    for (var key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop.value !== undefined) {\n    throw new Error(\"invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\n\nfunction useAnimatedStyle(updater, dependencies, adapters) {\n  var _a, _b;\n\n  var viewsRef = (0, _ViewDescriptorsSet.makeViewsRefSet)();\n  var viewDescriptors = (0, _ViewDescriptorsSet.makeViewDescriptorsSet)();\n  var initRef = (0, _react.useRef)();\n  var inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? (0, _utils.buildWorkletsHash)(adaptersArray) : null;\n  var animationsActive = (0, _useSharedValue.useSharedValue)(true);\n  var animatedStyle = (0, _react.useRef)({});\n\n  if (!dependencies) {\n    dependencies = [].concat(inputs, [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    var initialStyle = (0, _animation.initialUpdaterRun)(updater);\n    (0, _utils.validateAnimatedStyles)(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: (0, _core.makeRemote)({\n        last: initialStyle\n      }),\n      sharableViewDescriptors: (0, _core.makeMutable)([])\n    };\n    viewDescriptors.rebuildsharableViewDescriptors(initRef.current.sharableViewDescriptors);\n  }\n\n  dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\n  var _initRef$current = initRef.current,\n      initial = _initRef$current.initial,\n      remoteState = _initRef$current.remoteState,\n      sharableViewDescriptors = _initRef$current.sharableViewDescriptors;\n  var maybeViewRef = _NativeReanimated.default.native ? undefined : viewsRef;\n  (0, _react.useEffect)(function () {\n    var fun;\n    var updaterFn = updater;\n    var optimalization = updater.__optimalization;\n\n    if (adapters) {\n      updaterFn = function () {\n        var _f = function _f() {\n          var newValues = updater();\n          adaptersArray.forEach(function (adapter) {\n            adapter(newValues);\n          });\n          return newValues;\n        };\n\n        _f._closure = {\n          updater: updater,\n          adaptersArray: adaptersArray\n        };\n        _f.asString = \"function _f(){const{updater,adaptersArray}=jsThis._closure;{const newValues=updater();adaptersArray.forEach(function(adapter){adapter(newValues);});return newValues;}}\";\n        _f.__workletHash = 15812374835043;\n        _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (315:24)\";\n        return _f;\n      }();\n    }\n\n    if ((0, _utils.canApplyOptimalisation)(updaterFn) && !(0, _PlatformChecker.shouldBeUseWeb)()) {\n      if ((0, _utils.hasColorProps)(updaterFn())) {\n        updaterFn = function () {\n          var _f = function _f() {\n            var newValues = updaterFn();\n            var oldValues = remoteState.last;\n            var diff = (0, _utils.styleDiff)(oldValues, newValues);\n            remoteState.last = Object.assign({}, oldValues, newValues);\n            (0, _utils.parseColors)(diff);\n            return diff;\n          };\n\n          _f._closure = {\n            updaterFn: updaterFn,\n            remoteState: remoteState,\n            styleDiff: _utils.styleDiff,\n            parseColors: _utils.parseColors\n          };\n          _f.asString = \"function _f(){const{updaterFn,remoteState,styleDiff,parseColors}=jsThis._closure;{const newValues=updaterFn();const oldValues=remoteState.last;const diff=styleDiff(oldValues,newValues);remoteState.last=Object.assign({},oldValues,newValues);parseColors(diff);return diff;}}\";\n          _f.__workletHash = 5178118372497;\n          _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (326:28)\";\n          return _f;\n        }();\n      } else {\n        updaterFn = function () {\n          var _f = function _f() {\n            var newValues = updaterFn();\n            var oldValues = remoteState.last;\n            var diff = (0, _utils.styleDiff)(oldValues, newValues);\n            remoteState.last = Object.assign({}, oldValues, newValues);\n            return diff;\n          };\n\n          _f._closure = {\n            updaterFn: updaterFn,\n            remoteState: remoteState,\n            styleDiff: _utils.styleDiff\n          };\n          _f.asString = \"function _f(){const{updaterFn,remoteState,styleDiff}=jsThis._closure;{const newValues=updaterFn();const oldValues=remoteState.last;const diff=styleDiff(oldValues,newValues);remoteState.last=Object.assign({},oldValues,newValues);return diff;}}\";\n          _f.__workletHash = 5024825431498;\n          _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (337:28)\";\n          return _f;\n        }();\n      }\n    } else if (!(0, _PlatformChecker.shouldBeUseWeb)()) {\n      optimalization = 0;\n\n      updaterFn = function () {\n        var _f = function _f() {\n          var style = updaterFn();\n          (0, _utils.parseColors)(style);\n          return style;\n        };\n\n        _f._closure = {\n          updaterFn: updaterFn,\n          parseColors: _utils.parseColors\n        };\n        _f.asString = \"function _f(){const{updaterFn,parseColors}=jsThis._closure;{const style=updaterFn();parseColors(style);return style;}}\";\n        _f.__workletHash = 14518071140053;\n        _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (349:24)\";\n        return _f;\n      }();\n    }\n\n    if (typeof updater.__optimalization !== undefined) {\n      updaterFn.__optimalization = optimalization;\n    }\n\n    if ((0, _PlatformChecker.isJest)()) {\n      fun = function () {\n        var _f = function _f() {\n          jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n        };\n\n        _f._closure = {\n          jestStyleUpdater: jestStyleUpdater,\n          sharableViewDescriptors: sharableViewDescriptors,\n          updater: updater,\n          remoteState: remoteState,\n          maybeViewRef: maybeViewRef,\n          animationsActive: animationsActive,\n          animatedStyle: animatedStyle,\n          adaptersArray: adaptersArray\n        };\n        _f.asString = \"function _f(){const{jestStyleUpdater,sharableViewDescriptors,updater,remoteState,maybeViewRef,animationsActive,animatedStyle,adaptersArray}=jsThis._closure;{jestStyleUpdater(sharableViewDescriptors,updater,remoteState,maybeViewRef,animationsActive,animatedStyle,adaptersArray);}}\";\n        _f.__workletHash = 11302607948209;\n        _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (360:18)\";\n        return _f;\n      }();\n    } else {\n      fun = function () {\n        var _f = function _f() {\n          styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive);\n        };\n\n        _f._closure = {\n          styleUpdater: styleUpdater,\n          sharableViewDescriptors: sharableViewDescriptors,\n          updaterFn: updaterFn,\n          remoteState: remoteState,\n          maybeViewRef: maybeViewRef,\n          animationsActive: animationsActive\n        };\n        _f.asString = \"function _f(){const{styleUpdater,sharableViewDescriptors,updaterFn,remoteState,maybeViewRef,animationsActive}=jsThis._closure;{styleUpdater(sharableViewDescriptors,updaterFn,remoteState,maybeViewRef,animationsActive);}}\";\n        _f.__workletHash = 15042733015377;\n        _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\hook\\\\useAnimatedStyle.js (366:18)\";\n        return _f;\n      }();\n    }\n\n    var mapperId = (0, _core.startMapper)(fun, inputs, [], updaterFn, sharableViewDescriptors);\n    return function () {\n      (0, _core.stopMapper)(mapperId);\n    };\n  }, dependencies);\n  (0, _react.useEffect)(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n\n  if (process.env.JEST_WORKER_ID) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"names":["prepareAnimation","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","getTimestamp","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","_a","_b","animations","newValues","oldValues","last","hasAnimations","isAnimated","frame","isAnimationCancelled","isAnimationRunning","updates","propName","updateProps","requestFrame","_frameTimestamp","assign","style","getStyleWithoutAnimations","diff","styleDiff","jestStyleUpdater","animatedStyle","adapters","length","updatePropsJestWrapper","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","viewsRef","makeViewsRefSet","makeViewDescriptorsSet","initRef","useRef","inputs","values","_closure","adaptersArray","adaptersHash","buildWorkletsHash","useSharedValue","__workletHash","push","initialStyle","initialUpdaterRun","validateAnimatedStyles","initial","remoteState","makeRemote","sharableViewDescriptors","makeMutable","rebuildsharableViewDescriptors","NativeReanimatedModule","native","useEffect","fun","updaterFn","optimalization","__optimalization","adapter","canApplyOptimalisation","shouldBeUseWeb","hasColorProps","parseColors","isJest","mapperId","startMapper","stopMapper","process","env","JEST_WORKER_ID"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated2/hook/useAnimatedStyle.js"],"sourcesContent":["/* global _frameTimestamp */\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote, requestFrame, getTimestamp, makeMutable, } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport NativeReanimatedModule from '../NativeReanimated';\nimport { useSharedValue } from './useSharedValue';\nimport { buildWorkletsHash, canApplyOptimalisation, getStyleWithoutAnimations, hasColorProps, isAnimated, parseColors, styleDiff, validateAnimatedStyles, } from './utils';\nimport { makeViewDescriptorsSet, makeViewsRefSet, } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nfunction prepareAnimation(animatedProp, lastAnimation, lastValue) {\n    'worklet';\n    if (Array.isArray(animatedProp)) {\n        animatedProp.forEach((prop, index) => prepareAnimation(prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]));\n        // return animatedProp;\n    }\n    if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n        const animation = animatedProp;\n        let value = animation.current;\n        if (lastValue !== undefined) {\n            if (typeof lastValue === 'object') {\n                if (lastValue.value !== undefined) {\n                    // previously it was a shared value\n                    value = lastValue.value;\n                }\n                else if (lastValue.onFrame !== undefined) {\n                    if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n                        // it was an animation before, copy its state\n                        value = lastAnimation.current;\n                    }\n                    else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n                        // it was initialized\n                        value = lastValue.current;\n                    }\n                }\n            }\n            else {\n                // previously it was a plain value, just set it as starting point\n                value = lastValue;\n            }\n        }\n        animation.callStart = (timestamp) => {\n            animation.onStart(animation, value, timestamp, lastAnimation);\n        };\n        animation.callStart(getTimestamp());\n        animation.callStart = null;\n    }\n    else if (typeof animatedProp === 'object') {\n        // it is an object\n        Object.keys(animatedProp).forEach((key) => prepareAnimation(animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]));\n    }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n    'worklet';\n    if (!animationsActive.value) {\n        return true;\n    }\n    if (Array.isArray(animation)) {\n        result[key] = [];\n        let allFinished = true;\n        animation.forEach((entry, index) => {\n            if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n                allFinished = false;\n            }\n        });\n        return allFinished;\n    }\n    else if (typeof animation === 'object' && animation.onFrame) {\n        let finished = true;\n        if (!animation.finished) {\n            if (animation.callStart) {\n                animation.callStart(timestamp);\n                animation.callStart = null;\n            }\n            finished = animation.onFrame(animation, timestamp);\n            animation.timestamp = timestamp;\n            if (finished) {\n                animation.finished = true;\n                animation.callback && animation.callback(true /* finished */);\n            }\n        }\n        result[key] = animation.current;\n        return finished;\n    }\n    else if (typeof animation === 'object') {\n        result[key] = {};\n        let allFinished = true;\n        Object.keys(animation).forEach((k) => {\n            if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n                allFinished = false;\n            }\n        });\n        return allFinished;\n    }\n    else {\n        result[key] = animation;\n        return true;\n    }\n}\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n    'worklet';\n    var _a, _b;\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    const oldValues = state.last;\n    let hasAnimations = false;\n    for (const key in newValues) {\n        const value = newValues[key];\n        if (isAnimated(value)) {\n            prepareAnimation(value, animations[key], oldValues[key]);\n            animations[key] = value;\n            hasAnimations = true;\n        }\n        else {\n            delete animations[key];\n        }\n    }\n    if (hasAnimations) {\n        const frame = (timestamp) => {\n            const { animations, last, isAnimationCancelled } = state;\n            if (isAnimationCancelled) {\n                state.isAnimationRunning = false;\n                return;\n            }\n            const updates = {};\n            let allFinished = true;\n            for (const propName in animations) {\n                const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n                if (finished) {\n                    last[propName] = updates[propName];\n                    delete animations[propName];\n                }\n                else {\n                    allFinished = false;\n                }\n            }\n            if (updates) {\n                updateProps(viewDescriptors, updates, maybeViewRef);\n            }\n            if (!allFinished) {\n                requestFrame(frame);\n            }\n            else {\n                state.isAnimationRunning = false;\n            }\n        };\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n            state.isAnimationCancelled = false;\n            state.isAnimationRunning = true;\n            if (_frameTimestamp) {\n                frame(_frameTimestamp);\n            }\n            else {\n                requestFrame(frame);\n            }\n        }\n        state.last = Object.assign({}, oldValues, newValues);\n        const style = getStyleWithoutAnimations(state.last);\n        if (style) {\n            updateProps(viewDescriptors, style, maybeViewRef);\n        }\n    }\n    else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n        const diff = styleDiff(oldValues, newValues);\n        state.last = Object.assign({}, oldValues, newValues);\n        if (diff) {\n            updateProps(viewDescriptors, newValues, maybeViewRef);\n        }\n    }\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle, adapters = []) {\n    'worklet';\n    var _a, _b;\n    const animations = (_a = state.animations) !== null && _a !== void 0 ? _a : {};\n    const newValues = (_b = updater()) !== null && _b !== void 0 ? _b : {};\n    const oldValues = state.last;\n    // extract animated props\n    let hasAnimations = false;\n    Object.keys(animations).forEach((key) => {\n        const value = newValues[key];\n        if (!isAnimated(value)) {\n            delete animations[key];\n        }\n    });\n    Object.keys(newValues).forEach((key) => {\n        const value = newValues[key];\n        if (isAnimated(value)) {\n            prepareAnimation(value, animations[key], oldValues[key]);\n            animations[key] = value;\n            hasAnimations = true;\n        }\n    });\n    function frame(timestamp) {\n        const { animations, last, isAnimationCancelled } = state;\n        if (isAnimationCancelled) {\n            state.isAnimationRunning = false;\n            return;\n        }\n        const updates = {};\n        let allFinished = true;\n        Object.keys(animations).forEach((propName) => {\n            const finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n            if (finished) {\n                last[propName] = updates[propName];\n                delete animations[propName];\n            }\n            else {\n                allFinished = false;\n            }\n        });\n        if (Object.keys(updates).length) {\n            updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n        }\n        if (!allFinished) {\n            requestFrame(frame);\n        }\n        else {\n            state.isAnimationRunning = false;\n        }\n    }\n    if (hasAnimations) {\n        state.animations = animations;\n        if (!state.isAnimationRunning) {\n            state.isAnimationCancelled = false;\n            state.isAnimationRunning = true;\n            if (_frameTimestamp) {\n                frame(_frameTimestamp);\n            }\n            else {\n                requestFrame(frame);\n            }\n        }\n    }\n    else {\n        state.isAnimationCancelled = true;\n        state.animations = [];\n    }\n    // calculate diff\n    const diff = styleDiff(oldValues, newValues);\n    state.last = Object.assign({}, oldValues, newValues);\n    if (Object.keys(diff).length !== 0) {\n        updatePropsJestWrapper(viewDescriptors, diff, maybeViewRef, animatedStyle, adapters);\n    }\n}\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(prop, currentKey) {\n    if (Array.isArray(prop)) {\n        // if it's an array (i.ex. transform) validate all its elements\n        for (const element of prop) {\n            checkSharedValueUsage(element, currentKey);\n        }\n    }\n    else if (typeof prop === 'object' && prop.value === undefined) {\n        // if it's a nested object, run validation for all its props\n        for (const key of Object.keys(prop)) {\n            checkSharedValueUsage(prop[key], key);\n        }\n    }\n    else if (currentKey !== undefined &&\n        typeof prop === 'object' &&\n        prop.value !== undefined) {\n        // if shared value is passed insted of its value, throw an error\n        throw new Error(`invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`);\n    }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n    var _a, _b;\n    const viewsRef = makeViewsRefSet();\n    const viewDescriptors = makeViewDescriptorsSet();\n    const initRef = useRef();\n    const inputs = Object.values((_a = updater._closure) !== null && _a !== void 0 ? _a : {});\n    const adaptersArray = adapters\n        ? Array.isArray(adapters)\n            ? adapters\n            : [adapters]\n        : [];\n    const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n    const animationsActive = useSharedValue(true);\n    const animatedStyle = useRef({});\n    // build dependencies\n    if (!dependencies) {\n        dependencies = [...inputs, updater.__workletHash];\n    }\n    else {\n        dependencies.push(updater.__workletHash);\n    }\n    adaptersHash && dependencies.push(adaptersHash);\n    if (!initRef.current) {\n        const initialStyle = initialUpdaterRun(updater);\n        validateAnimatedStyles(initialStyle);\n        initRef.current = {\n            initial: {\n                value: initialStyle,\n                updater: updater,\n            },\n            remoteState: makeRemote({ last: initialStyle }),\n            sharableViewDescriptors: makeMutable([]),\n        };\n        viewDescriptors.rebuildsharableViewDescriptors(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        initRef.current.sharableViewDescriptors);\n    }\n    dependencies.push((_b = initRef.current) === null || _b === void 0 ? void 0 : _b.sharableViewDescriptors.value);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const { initial, remoteState, sharableViewDescriptors } = initRef.current;\n    const maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n    useEffect(() => {\n        let fun;\n        let updaterFn = updater;\n        let optimalization = updater.__optimalization;\n        if (adapters) {\n            updaterFn = () => {\n                'worklet';\n                const newValues = updater();\n                adaptersArray.forEach((adapter) => {\n                    adapter(newValues);\n                });\n                return newValues;\n            };\n        }\n        if (canApplyOptimalisation(updaterFn) && !shouldBeUseWeb()) {\n            if (hasColorProps(updaterFn())) {\n                updaterFn = () => {\n                    'worklet';\n                    const newValues = updaterFn();\n                    const oldValues = remoteState.last;\n                    const diff = styleDiff(oldValues, newValues);\n                    remoteState.last = Object.assign({}, oldValues, newValues);\n                    parseColors(diff);\n                    return diff;\n                };\n            }\n            else {\n                updaterFn = () => {\n                    'worklet';\n                    const newValues = updaterFn();\n                    const oldValues = remoteState.last;\n                    const diff = styleDiff(oldValues, newValues);\n                    remoteState.last = Object.assign({}, oldValues, newValues);\n                    return diff;\n                };\n            }\n        }\n        else if (!shouldBeUseWeb()) {\n            optimalization = 0;\n            updaterFn = () => {\n                'worklet';\n                const style = updaterFn();\n                parseColors(style);\n                return style;\n            };\n        }\n        if (typeof updater.__optimalization !== undefined) {\n            updaterFn.__optimalization = optimalization;\n        }\n        if (isJest()) {\n            fun = () => {\n                'worklet';\n                jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n            };\n        }\n        else {\n            fun = () => {\n                'worklet';\n                styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive);\n            };\n        }\n        const mapperId = startMapper(fun, inputs, [], updaterFn, \n        // TODO fix this\n        sharableViewDescriptors);\n        return () => {\n            stopMapper(mapperId);\n        };\n    }, dependencies);\n    useEffect(() => {\n        animationsActive.value = true;\n        return () => {\n            // initRef.current = null;\n            // viewsRef = null;\n            animationsActive.value = false;\n        };\n    }, []);\n    checkSharedValueUsage(initial.value);\n    if (process.env.JEST_WORKER_ID) {\n        return { viewDescriptors, initial: initial, viewsRef, animatedStyle };\n    }\n    else {\n        return { viewDescriptors, initial: initial, viewsRef };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}