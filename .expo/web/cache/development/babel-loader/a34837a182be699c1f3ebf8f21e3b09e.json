{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedOperator = createAnimatedOperator;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _val = require(\"../val\");\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _AnimatedBlock = require(\"../core/AnimatedBlock\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction reduce(fn) {\n  return function (input) {\n    return input.reduce(function (a, b) {\n      return fn((0, _val.val)(a), (0, _val.val)(b));\n    });\n  };\n}\n\nfunction reduceFrom(fn, initialValue) {\n  return function (input) {\n    return input.reduce(function (a, b) {\n      return fn((0, _val.val)(a), (0, _val.val)(b));\n    }, initialValue);\n  };\n}\n\nfunction infix(fn) {\n  return function (input) {\n    return fn((0, _val.val)(input[0]), (0, _val.val)(input[1]));\n  };\n}\n\nfunction single(fn) {\n  return function (input) {\n    return fn((0, _val.val)(input[0]));\n  };\n}\n\nvar OPERATIONS = {\n  add: reduce(function (a, b) {\n    return a + b;\n  }),\n  sub: reduce(function (a, b) {\n    return a - b;\n  }),\n  multiply: reduce(function (a, b) {\n    return a * b;\n  }),\n  divide: reduce(function (a, b) {\n    return a / b;\n  }),\n  pow: reduce(function (a, b) {\n    return Math.pow(a, b);\n  }),\n  modulo: reduce(function (a, b) {\n    return (a % b + b) % b;\n  }),\n  sqrt: single(function (a) {\n    return Math.sqrt(a);\n  }),\n  log: single(function (a) {\n    return Math.log(a);\n  }),\n  sin: single(function (a) {\n    return Math.sin(a);\n  }),\n  cos: single(function (a) {\n    return Math.cos(a);\n  }),\n  tan: single(function (a) {\n    return Math.tan(a);\n  }),\n  acos: single(function (a) {\n    return Math.acos(a);\n  }),\n  asin: single(function (a) {\n    return Math.asin(a);\n  }),\n  atan: single(function (a) {\n    return Math.atan(a);\n  }),\n  exp: single(function (a) {\n    return Math.exp(a);\n  }),\n  round: single(function (a) {\n    return Math.round(a);\n  }),\n  abs: single(function (a) {\n    return Math.abs(a);\n  }),\n  ceil: single(function (a) {\n    return Math.ceil(a);\n  }),\n  floor: single(function (a) {\n    return Math.floor(a);\n  }),\n  max: reduce(function (a, b) {\n    return Math.max(a, b);\n  }),\n  min: reduce(function (a, b) {\n    return Math.min(a, b);\n  }),\n  and: reduceFrom(function (a, b) {\n    return a && b;\n  }, true),\n  or: reduceFrom(function (a, b) {\n    return a || b;\n  }, false),\n  not: single(function (a) {\n    return !a;\n  }),\n  defined: single(function (a) {\n    return a !== null && a !== undefined && !isNaN(a);\n  }),\n  lessThan: infix(function (a, b) {\n    return a < b;\n  }),\n  eq: infix(function (a, b) {\n    return a == b;\n  }),\n  greaterThan: infix(function (a, b) {\n    return a > b;\n  }),\n  lessOrEq: infix(function (a, b) {\n    return a <= b;\n  }),\n  greaterOrEq: infix(function (a, b) {\n    return a >= b;\n  }),\n  neq: infix(function (a, b) {\n    return a != b;\n  })\n};\n\nvar AnimatedOperator = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedOperator, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedOperator);\n\n  function AnimatedOperator(operator, input) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedOperator);\n    (0, _invariant.default)(typeof operator === 'string', \"Reanimated: Animated.operator node first argument should be of type String, but got: \" + operator);\n    (0, _invariant.default)(input.every(function (el) {\n      return el instanceof _AnimatedNode2.default || typeof el === 'string' || typeof el === 'number';\n    }), \"Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got \" + input);\n    _this = _super.call(this, {\n      type: 'op',\n      op: operator,\n      input: input\n    }, input);\n    _this._op = operator;\n    _this._input = input;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedOperator, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedOperator, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      if (!this._operation) {\n        this._operation = OPERATIONS[this._op];\n        (0, _invariant.default)(this._operation, \"Illegal operator '%s'\", this._op);\n      }\n\n      return this._operation(this._input);\n    }\n  }]);\n  return AnimatedOperator;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedOperator(name) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return new AnimatedOperator(name, args.map(_AnimatedBlock.adapt));\n  };\n}","map":{"version":3,"names":["reduce","fn","input","a","b","val","reduceFrom","initialValue","infix","single","OPERATIONS","add","sub","multiply","divide","pow","Math","modulo","sqrt","log","sin","cos","tan","acos","asin","atan","exp","round","abs","ceil","floor","max","min","and","or","not","defined","undefined","isNaN","lessThan","eq","greaterThan","lessOrEq","greaterOrEq","neq","AnimatedOperator","operator","invariant","every","el","AnimatedNode","type","op","_op","_input","__nodeID","_operation","createAnimatedOperator","name","args","map","adapt"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedOperator.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nimport invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\n\nfunction reduce(fn) {\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)));\n}\n\nfunction reduceFrom(fn, initialValue) {\n  return (input) => input.reduce((a, b) => fn(val(a), val(b)), initialValue);\n}\n\nfunction infix(fn) {\n  return (input) => fn(val(input[0]), val(input[1]));\n}\n\nfunction single(fn) {\n  return (input) => fn(val(input[0]));\n}\n\nconst OPERATIONS = {\n  // arithmetic\n  add: reduce((a, b) => a + b),\n  sub: reduce((a, b) => a - b),\n  multiply: reduce((a, b) => a * b),\n  divide: reduce((a, b) => a / b),\n  pow: reduce((a, b) => Math.pow(a, b)),\n  modulo: reduce((a, b) => ((a % b) + b) % b),\n  sqrt: single((a) => Math.sqrt(a)),\n  log: single((a) => Math.log(a)),\n  sin: single((a) => Math.sin(a)),\n  cos: single((a) => Math.cos(a)),\n  tan: single((a) => Math.tan(a)),\n  acos: single((a) => Math.acos(a)),\n  asin: single((a) => Math.asin(a)),\n  atan: single((a) => Math.atan(a)),\n  exp: single((a) => Math.exp(a)),\n  round: single((a) => Math.round(a)),\n  abs: single((a) => Math.abs(a)),\n  ceil: single((a) => Math.ceil(a)),\n  floor: single((a) => Math.floor(a)),\n  max: reduce((a, b) => Math.max(a, b)),\n  min: reduce((a, b) => Math.min(a, b)),\n\n  // logical\n  and: reduceFrom((a, b) => a && b, true),\n  or: reduceFrom((a, b) => a || b, false),\n  not: single((a) => !a),\n  defined: single((a) => a !== null && a !== undefined && !isNaN(a)),\n\n  // comparing\n  lessThan: infix((a, b) => a < b),\n  /* eslint-disable-next-line eqeqeq */\n  eq: infix((a, b) => a == b),\n  greaterThan: infix((a, b) => a > b),\n  lessOrEq: infix((a, b) => a <= b),\n  greaterOrEq: infix((a, b) => a >= b),\n  /* eslint-disable-next-line eqeqeq */\n  neq: infix((a, b) => a != b),\n};\n\nclass AnimatedOperator extends AnimatedNode {\n  _input;\n  _op;\n  _operation;\n\n  constructor(operator, input) {\n    invariant(\n      typeof operator === 'string',\n      `Reanimated: Animated.operator node first argument should be of type String, but got: ${operator}`\n    );\n    invariant(\n      input.every(\n        (el) =>\n          el instanceof AnimatedNode ||\n          typeof el === 'string' ||\n          typeof el === 'number'\n      ),\n      `Reanimated: Animated.operator node second argument should be one or more of type AnimatedNode, String or Number but got ${input}`\n    );\n    super({ type: 'op', op: operator, input }, input);\n    this._op = operator;\n    this._input = input;\n  }\n\n  toString() {\n    return `AnimatedOperator, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    if (!this._operation) {\n      this._operation = OPERATIONS[this._op];\n      invariant(this._operation, `Illegal operator '%s'`, this._op);\n    }\n    return this._operation(this._input);\n  }\n}\n\nexport function createAnimatedOperator(name) {\n  return (...args) => new AnimatedOperator(name, args.map(adapt));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}