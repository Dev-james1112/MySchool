{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pinchHandlerName = exports.PinchGestureHandler = void 0;\n\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\n\nvar _gestureHandlerCommon = require(\"./gestureHandlerCommon\");\n\nvar pinchHandlerName = 'PinchGestureHandler';\nexports.pinchHandlerName = pinchHandlerName;\nvar PinchGestureHandler = (0, _createHandler.default)({\n  name: pinchHandlerName,\n  allowedProps: _gestureHandlerCommon.baseGestureHandlerProps,\n  config: {}\n});\nexports.PinchGestureHandler = PinchGestureHandler;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAmCO,IAAMA,gBAAgB,GAAG,qBAAzB;;AAIA,IAAMC,mBAAmB,GAAGC,4BAGjC;EACAC,IAAI,EAAEH,gBADN;EAEAI,YAAY,EAAEC,6CAFd;EAGAC,MAAM,EAAE;AAHR,CAHiCJ,CAA5B","names":["pinchHandlerName","PinchGestureHandler","createHandler","name","allowedProps","baseGestureHandlerProps","config"],"sources":["PinchGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport type PinchGestureHandlerEventPayload = {\n  /**\n   * The scale factor relative to the points of the two touches in screen\n   * coordinates.\n   */\n  scale: number;\n\n  /**\n   * Position expressed in points along X axis of center anchor point of\n   * gesture.\n   */\n  focalX: number;\n\n  /**\n   * Position expressed in points along Y axis of center anchor point of\n   * gesture.\n   */\n  focalY: number;\n\n  /**\n   *\n   * Velocity of the pan gesture the current moment. The value is expressed in\n   * point units per second.\n   */\n  velocity: number;\n};\n\nexport interface PinchGestureHandlerProps\n  extends BaseGestureHandlerProps<PinchGestureHandlerEventPayload> {}\n\nexport const pinchHandlerName = 'PinchGestureHandler';\n\nexport type PinchGestureHandler = typeof PinchGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const PinchGestureHandler = createHandler<\n  PinchGestureHandlerProps,\n  PinchGestureHandlerEventPayload\n>({\n  name: pinchHandlerName,\n  allowedProps: baseGestureHandlerProps,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"script"}