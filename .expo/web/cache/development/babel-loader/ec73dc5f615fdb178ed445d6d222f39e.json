{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withDecay = void 0;\n\nvar _util = require(\"./util\");\n\nvar _reactNative = require(\"react-native\");\n\nvar withDecay = function () {\n  var _f = function _f(userConfig, callback) {\n    return (0, _util.defineAnimation)(0, function () {\n      var _f = function _f() {\n        var _a;\n\n        var config = {\n          deceleration: 0.998,\n          velocityFactor: _reactNative.Platform.OS !== 'web' ? 1 : 1000,\n          velocity: 0\n        };\n\n        if (userConfig) {\n          Object.keys(userConfig).forEach(function (key) {\n            return config[key] = userConfig[key];\n          });\n        }\n\n        var VELOCITY_EPS = _reactNative.Platform.OS !== 'web' ? 1 : 1 / 20;\n        var SLOPE_FACTOR = 0.1;\n\n        function decay(animation, now) {\n          var lastTimestamp = animation.lastTimestamp,\n              startTimestamp = animation.startTimestamp,\n              initialVelocity = animation.initialVelocity,\n              current = animation.current,\n              velocity = animation.velocity;\n          var deltaTime = Math.min(now - lastTimestamp, 64);\n          var v = velocity * Math.exp(-(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR);\n          animation.current = current + v * config.velocityFactor * deltaTime / 1000;\n          animation.velocity = v;\n          animation.lastTimestamp = now;\n\n          if (config.clamp) {\n            if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n              animation.current = config.clamp[0];\n              return true;\n            } else if (initialVelocity > 0 && animation.current >= config.clamp[1]) {\n              animation.current = config.clamp[1];\n              return true;\n            }\n          }\n\n          return Math.abs(v) < VELOCITY_EPS;\n        }\n\n        function validateConfig() {\n          if (config.clamp) {\n            if (!Array.isArray(config.clamp)) {\n              throw Error(\"config.clamp must be an array but is \" + typeof config.clamp);\n            }\n\n            if (config.clamp.length !== 2) {\n              throw Error(\"clamp array must contain 2 items but is given \" + config.clamp.length);\n            }\n          }\n\n          if (config.velocityFactor <= 0) {\n            throw Error(\"config.velocityFactor must be greather then 0 but is \" + config.velocityFactor);\n          }\n        }\n\n        function onStart(animation, value, now) {\n          animation.current = value;\n          animation.lastTimestamp = now;\n          animation.startTimestamp = now;\n          animation.initialVelocity = config.velocity;\n          validateConfig();\n        }\n\n        return {\n          onFrame: decay,\n          onStart: onStart,\n          callback: callback,\n          velocity: (_a = config.velocity) !== null && _a !== void 0 ? _a : 0,\n          initialVelocity: 0,\n          current: 0,\n          lastTimestamp: 0,\n          startTimestamp: 0\n        };\n      };\n\n      _f._closure = {\n        Platform: {\n          OS: _reactNative.Platform.OS\n        },\n        userConfig: userConfig,\n        callback: callback\n      };\n      _f.asString = \"function _f(){const{Platform,userConfig,callback}=jsThis._closure;{var _a;const config={deceleration:0.998,velocityFactor:Platform.OS!=='web'?1:1000,velocity:0};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}const VELOCITY_EPS=Platform.OS!=='web'?1:1/20;const SLOPE_FACTOR=0.1;function decay(animation,now){const{lastTimestamp:lastTimestamp,startTimestamp:startTimestamp,initialVelocity:initialVelocity,current:current,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);const v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR);animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;if(config.clamp){if(initialVelocity<0&&animation.current<=config.clamp[0]){animation.current=config.clamp[0];return true;}else if(initialVelocity>0&&animation.current>=config.clamp[1]){animation.current=config.clamp[1];return true;}}return Math.abs(v)<VELOCITY_EPS;}function validateConfig(){if(config.clamp){if(!Array.isArray(config.clamp)){throw Error(\\\"config.clamp must be an array but is \\\"+typeof config.clamp);}if(config.clamp.length!==2){throw Error(\\\"clamp array must contain 2 items but is given \\\"+config.clamp.length);}}if(config.velocityFactor<=0){throw Error(\\\"config.velocityFactor must be greather then 0 but is \\\"+config.velocityFactor);}}function onStart(animation,value,now){animation.current=value;animation.lastTimestamp=now;animation.startTimestamp=now;animation.initialVelocity=config.velocity;validateConfig();}return{onFrame:decay,onStart:onStart,callback:callback,velocity:(_a=config.velocity)!==null&&_a!==void 0?_a:0,initialVelocity:0,current:0,lastTimestamp:0,startTimestamp:0};}}\";\n      _f.__workletHash = 7058793376627;\n      _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\decay.js (5:30)\";\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: _util.defineAnimation,\n    Platform: {\n      OS: _reactNative.Platform.OS\n    }\n  };\n  _f.asString = \"function withDecay(userConfig,callback){const{defineAnimation,Platform}=jsThis._closure;{return defineAnimation(0,function(){'worklet';var _a;const config={deceleration:0.998,velocityFactor:Platform.OS!=='web'?1:1000,velocity:0};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}const VELOCITY_EPS=Platform.OS!=='web'?1:1/20;const SLOPE_FACTOR=0.1;function decay(animation,now){const{lastTimestamp:lastTimestamp,startTimestamp:startTimestamp,initialVelocity:initialVelocity,current:current,velocity:velocity}=animation;const deltaTime=Math.min(now-lastTimestamp,64);const v=velocity*Math.exp(-(1-config.deceleration)*(now-startTimestamp)*SLOPE_FACTOR);animation.current=current+v*config.velocityFactor*deltaTime/1000;animation.velocity=v;animation.lastTimestamp=now;if(config.clamp){if(initialVelocity<0&&animation.current<=config.clamp[0]){animation.current=config.clamp[0];return true;}else if(initialVelocity>0&&animation.current>=config.clamp[1]){animation.current=config.clamp[1];return true;}}return Math.abs(v)<VELOCITY_EPS;}function validateConfig(){if(config.clamp){if(!Array.isArray(config.clamp)){throw Error(\\\"config.clamp must be an array but is \\\"+typeof config.clamp);}if(config.clamp.length!==2){throw Error(\\\"clamp array must contain 2 items but is given \\\"+config.clamp.length);}}if(config.velocityFactor<=0){throw Error(\\\"config.velocityFactor must be greather then 0 but is \\\"+config.velocityFactor);}}function onStart(animation,value,now){animation.current=value;animation.lastTimestamp=now;animation.startTimestamp=now;animation.initialVelocity=config.velocity;validateConfig();}return{onFrame:decay,onStart:onStart,callback:callback,velocity:(_a=config.velocity)!==null&&_a!==void 0?_a:0,initialVelocity:0,current:0,lastTimestamp:0,startTimestamp:0};});}}\";\n  _f.__workletHash = 4039134172572;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\decay.js (3:7)\";\n  return _f;\n}();\n\nexports.withDecay = withDecay;","map":{"version":3,"names":["withDecay","userConfig","callback","defineAnimation","_a","config","deceleration","velocityFactor","Platform","OS","velocity","Object","keys","forEach","key","VELOCITY_EPS","SLOPE_FACTOR","decay","animation","now","lastTimestamp","startTimestamp","initialVelocity","current","deltaTime","Math","min","v","exp","clamp","abs","validateConfig","Array","isArray","Error","length","onStart","value","onFrame"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated2/animation/decay.js"],"sourcesContent":["import { defineAnimation } from './util';\nimport { Platform } from 'react-native';\nexport function withDecay(userConfig, callback) {\n    'worklet';\n    return defineAnimation(0, () => {\n        'worklet';\n        var _a;\n        const config = {\n            deceleration: 0.998,\n            velocityFactor: Platform.OS !== 'web' ? 1 : 1000,\n            velocity: 0,\n        };\n        if (userConfig) {\n            Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n        }\n        const VELOCITY_EPS = Platform.OS !== 'web' ? 1 : 1 / 20;\n        const SLOPE_FACTOR = 0.1;\n        function decay(animation, now) {\n            const { lastTimestamp, startTimestamp, initialVelocity, current, velocity, } = animation;\n            const deltaTime = Math.min(now - lastTimestamp, 64);\n            const v = velocity *\n                Math.exp(-(1 - config.deceleration) * (now - startTimestamp) * SLOPE_FACTOR);\n            animation.current =\n                current + (v * config.velocityFactor * deltaTime) / 1000; // /1000 because time is in ms not in s\n            animation.velocity = v;\n            animation.lastTimestamp = now;\n            if (config.clamp) {\n                if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n                    animation.current = config.clamp[0];\n                    return true;\n                }\n                else if (initialVelocity > 0 &&\n                    animation.current >= config.clamp[1]) {\n                    animation.current = config.clamp[1];\n                    return true;\n                }\n            }\n            return Math.abs(v) < VELOCITY_EPS;\n        }\n        function validateConfig() {\n            if (config.clamp) {\n                if (!Array.isArray(config.clamp)) {\n                    throw Error(`config.clamp must be an array but is ${typeof config.clamp}`);\n                }\n                if (config.clamp.length !== 2) {\n                    throw Error(`clamp array must contain 2 items but is given ${config.clamp.length}`);\n                }\n            }\n            if (config.velocityFactor <= 0) {\n                throw Error(`config.velocityFactor must be greather then 0 but is ${config.velocityFactor}`);\n            }\n        }\n        function onStart(animation, value, now) {\n            animation.current = value;\n            animation.lastTimestamp = now;\n            animation.startTimestamp = now;\n            animation.initialVelocity = config.velocity;\n            validateConfig();\n        }\n        return {\n            onFrame: decay,\n            onStart,\n            callback,\n            velocity: (_a = config.velocity) !== null && _a !== void 0 ? _a : 0,\n            initialVelocity: 0,\n            current: 0,\n            lastTimestamp: 0,\n            startTimestamp: 0,\n        };\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}