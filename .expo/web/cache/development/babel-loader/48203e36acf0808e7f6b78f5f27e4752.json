{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar Info = (0, _createClass2.default)(function Info() {\n  (0, _classCallCheck2.default)(this, Info);\n  this.any_blank_count = 0;\n  this.any_blank_ms = 0;\n  this.any_blank_speed_sum = 0;\n  this.mostly_blank_count = 0;\n  this.mostly_blank_ms = 0;\n  this.pixels_blank = 0;\n  this.pixels_sampled = 0;\n  this.pixels_scrolled = 0;\n  this.total_time_spent = 0;\n  this.sample_count = 0;\n});\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n\nvar FillRateHelper = function () {\n  function FillRateHelper(getFrameMetrics) {\n    (0, _classCallCheck2.default)(this, FillRateHelper);\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  (0, _createClass2.default)(FillRateHelper, [{\n    key: \"activate\",\n    value: function activate() {\n      if (this._enabled && this._samplesStartTime == null) {\n        DEBUG && console.debug('FillRateHelper: activate');\n        this._samplesStartTime = global.performance.now();\n      }\n    }\n  }, {\n    key: \"deactivateAndFlush\",\n    value: function deactivateAndFlush() {\n      if (!this._enabled) {\n        return;\n      }\n\n      var start = this._samplesStartTime;\n\n      if (start == null) {\n        DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n        return;\n      }\n\n      if (this._info.sample_count < _minSampleCount) {\n        this._resetData();\n\n        return;\n      }\n\n      var total_time_spent = global.performance.now() - start;\n      var info = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, this._info), {}, {\n        total_time_spent: total_time_spent\n      });\n\n      if (DEBUG) {\n        var derived = {\n          avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n          avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n          avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n          any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n          any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n          mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n          mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n        };\n\n        for (var key in derived) {\n          derived[key] = Math.round(1000 * derived[key]) / 1000;\n        }\n\n        console.debug('FillRateHelper deactivateAndFlush: ', {\n          derived: derived,\n          info: info\n        });\n      }\n\n      _listeners.forEach(function (listener) {\n        return listener(info);\n      });\n\n      this._resetData();\n    }\n  }, {\n    key: \"computeBlankness\",\n    value: function computeBlankness(props, state, scrollMetrics) {\n      if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n        return 0;\n      }\n\n      var dOffset = scrollMetrics.dOffset,\n          offset = scrollMetrics.offset,\n          velocity = scrollMetrics.velocity,\n          visibleLength = scrollMetrics.visibleLength;\n      this._info.sample_count++;\n      this._info.pixels_sampled += Math.round(visibleLength);\n      this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n      var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n      var now = global.performance.now();\n\n      if (this._anyBlankStartTime != null) {\n        this._info.any_blank_ms += now - this._anyBlankStartTime;\n      }\n\n      this._anyBlankStartTime = null;\n\n      if (this._mostlyBlankStartTime != null) {\n        this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n      }\n\n      this._mostlyBlankStartTime = null;\n      var blankTop = 0;\n      var first = state.first;\n\n      var firstFrame = this._getFrameMetrics(first);\n\n      while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n        firstFrame = this._getFrameMetrics(first);\n        first++;\n      }\n\n      if (firstFrame && first > 0) {\n        blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n      }\n\n      var blankBottom = 0;\n      var last = state.last;\n\n      var lastFrame = this._getFrameMetrics(last);\n\n      while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n        lastFrame = this._getFrameMetrics(last);\n        last--;\n      }\n\n      if (lastFrame && last < props.getItemCount(props.data) - 1) {\n        var bottomEdge = lastFrame.offset + lastFrame.length;\n        blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n      }\n\n      var pixels_blank = Math.round(blankTop + blankBottom);\n      var blankness = pixels_blank / visibleLength;\n\n      if (blankness > 0) {\n        this._anyBlankStartTime = now;\n        this._info.any_blank_speed_sum += scrollSpeed;\n        this._info.any_blank_count++;\n        this._info.pixels_blank += pixels_blank;\n\n        if (blankness > 0.5) {\n          this._mostlyBlankStartTime = now;\n          this._info.mostly_blank_count++;\n        }\n      } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n        this.deactivateAndFlush();\n      }\n\n      return blankness;\n    }\n  }, {\n    key: \"enabled\",\n    value: function enabled() {\n      return this._enabled;\n    }\n  }, {\n    key: \"_resetData\",\n    value: function _resetData() {\n      this._anyBlankStartTime = null;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n    }\n  }], [{\n    key: \"addListener\",\n    value: function addListener(callback) {\n      if (_sampleRate === null) {\n        console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n      }\n\n      _listeners.push(callback);\n\n      return {\n        remove: function remove() {\n          _listeners = _listeners.filter(function (listener) {\n            return callback !== listener;\n          });\n        }\n      };\n    }\n  }, {\n    key: \"setSampleRate\",\n    value: function setSampleRate(sampleRate) {\n      _sampleRate = sampleRate;\n    }\n  }, {\n    key: \"setMinSampleCount\",\n    value: function setMinSampleCount(minSampleCount) {\n      _minSampleCount = minSampleCount;\n    }\n  }]);\n  return FillRateHelper;\n}();\n\nvar _default = FillRateHelper;\nexports.default = _default;","map":{"version":3,"names":["Info","any_blank_count","any_blank_ms","any_blank_speed_sum","mostly_blank_count","mostly_blank_ms","pixels_blank","pixels_sampled","pixels_scrolled","total_time_spent","sample_count","DEBUG","_listeners","_minSampleCount","_sampleRate","FillRateHelper","getFrameMetrics","_anyBlankStartTime","_enabled","_info","_mostlyBlankStartTime","_samplesStartTime","_getFrameMetrics","Math","random","_resetData","console","debug","global","performance","now","start","info","_objectSpread","derived","avg_blankness","avg_speed","avg_speed_when_any_blank","any_blank_per_min","any_blank_time_frac","mostly_blank_per_min","mostly_blank_time_frac","key","round","forEach","listener","props","state","scrollMetrics","getItemCount","data","dOffset","offset","velocity","visibleLength","abs","scrollSpeed","blankTop","first","firstFrame","last","inLayout","min","max","blankBottom","lastFrame","bottomEdge","length","blankness","deactivateAndFlush","callback","warn","push","remove","filter","sampleRate","minSampleCount"],"sources":["C:/.project/today_meal/node_modules/react-native-web/dist/vendor/react-native/FillRateHelper/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n\nclass Info {\n  constructor() {\n    this.any_blank_count = 0;\n    this.any_blank_ms = 0;\n    this.any_blank_speed_sum = 0;\n    this.mostly_blank_count = 0;\n    this.mostly_blank_ms = 0;\n    this.pixels_blank = 0;\n    this.pixels_sampled = 0;\n    this.pixels_scrolled = 0;\n    this.total_time_spent = 0;\n    this.sample_count = 0;\n  }\n\n}\n\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\n\nvar _sampleRate = DEBUG ? 1 : null;\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\n\n\nclass FillRateHelper {\n  static addListener(callback) {\n    if (_sampleRate === null) {\n      console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n    }\n\n    _listeners.push(callback);\n\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      }\n    };\n  }\n\n  static setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  }\n\n  static setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  }\n\n  constructor(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n\n    this._resetData();\n  }\n\n  activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = global.performance.now();\n    }\n  }\n\n  deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n\n    var start = this._samplesStartTime; // const for flow\n\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n\n      return;\n    }\n\n    var total_time_spent = global.performance.now() - start;\n\n    var info = _objectSpread(_objectSpread({}, this._info), {}, {\n      total_time_spent\n    });\n\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n\n      for (var key in derived) {\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived,\n        info\n      });\n    }\n\n    _listeners.forEach(listener => listener(info));\n\n    this._resetData();\n  }\n\n  computeBlankness(props, state, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n      return 0;\n    }\n\n    var dOffset = scrollMetrics.dOffset,\n        offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength; // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n\n    var now = global.performance.now();\n\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n\n    this._anyBlankStartTime = null;\n\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = state.first;\n\n    var firstFrame = this._getFrameMetrics(first);\n\n    while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first);\n      first++;\n    } // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n\n\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n\n    var blankBottom = 0;\n    var last = state.last;\n\n    var lastFrame = this._getFrameMetrics(last);\n\n    while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last);\n      last--;\n    } // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n\n\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n\n    return blankness;\n  }\n\n  enabled() {\n    return this._enabled;\n  }\n\n  _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  }\n\n}\n\nexport default FillRateHelper;"],"mappings":"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"},"metadata":{},"sourceType":"script"}