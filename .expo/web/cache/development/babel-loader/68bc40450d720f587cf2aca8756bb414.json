{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BaseButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.BaseButton;\n  }\n});\nObject.defineProperty(exports, \"BorderlessButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.BorderlessButton;\n  }\n});\nObject.defineProperty(exports, \"Directions\", {\n  enumerable: true,\n  get: function get() {\n    return _Directions.Directions;\n  }\n});\nObject.defineProperty(exports, \"DrawerLayout\", {\n  enumerable: true,\n  get: function get() {\n    return _DrawerLayout.default;\n  }\n});\nObject.defineProperty(exports, \"DrawerLayoutAndroid\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.DrawerLayoutAndroid;\n  }\n});\nObject.defineProperty(exports, \"FlatList\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.FlatList;\n  }\n});\nObject.defineProperty(exports, \"FlingGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _FlingGestureHandler.FlingGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"ForceTouchGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _ForceTouchGestureHandler.ForceTouchGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"Gesture\", {\n  enumerable: true,\n  get: function get() {\n    return _gestureObjects.GestureObjects;\n  }\n});\nObject.defineProperty(exports, \"GestureDetector\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureDetector.GestureDetector;\n  }\n});\nObject.defineProperty(exports, \"GestureHandlerRootView\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureHandlerRootView.default;\n  }\n});\nObject.defineProperty(exports, \"LongPressGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _LongPressGestureHandler.LongPressGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"NativeViewGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _NativeViewGestureHandler.NativeViewGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"PanGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _PanGestureHandler.PanGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"PinchGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _PinchGestureHandler.PinchGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"RawButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.RawButton;\n  }\n});\nObject.defineProperty(exports, \"RectButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.RectButton;\n  }\n});\nObject.defineProperty(exports, \"RotationGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _RotationGestureHandler.RotationGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"ScrollView\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.ScrollView;\n  }\n});\nObject.defineProperty(exports, \"State\", {\n  enumerable: true,\n  get: function get() {\n    return _State.State;\n  }\n});\nObject.defineProperty(exports, \"Swipeable\", {\n  enumerable: true,\n  get: function get() {\n    return _Swipeable.default;\n  }\n});\nObject.defineProperty(exports, \"Switch\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.Switch;\n  }\n});\nObject.defineProperty(exports, \"TapGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _TapGestureHandler.TapGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"TextInput\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.TextInput;\n  }\n});\nObject.defineProperty(exports, \"TouchableHighlight\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableHighlight;\n  }\n});\nObject.defineProperty(exports, \"TouchableNativeFeedback\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableNativeFeedback;\n  }\n});\nObject.defineProperty(exports, \"TouchableOpacity\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableOpacity;\n  }\n});\nObject.defineProperty(exports, \"TouchableWithoutFeedback\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableWithoutFeedback;\n  }\n});\nObject.defineProperty(exports, \"createNativeWrapper\", {\n  enumerable: true,\n  get: function get() {\n    return _createNativeWrapper.default;\n  }\n});\nObject.defineProperty(exports, \"gestureHandlerRootHOC\", {\n  enumerable: true,\n  get: function get() {\n    return _gestureHandlerRootHOC.default;\n  }\n});\n\nvar _init = require(\"./init\");\n\nvar _Directions = require(\"./Directions\");\n\nvar _State = require(\"./State\");\n\nvar _gestureHandlerRootHOC = _interopRequireDefault(require(\"./gestureHandlerRootHOC\"));\n\nvar _GestureHandlerRootView = _interopRequireDefault(require(\"./GestureHandlerRootView\"));\n\nvar _TapGestureHandler = require(\"./handlers/TapGestureHandler\");\n\nvar _ForceTouchGestureHandler = require(\"./handlers/ForceTouchGestureHandler\");\n\nvar _LongPressGestureHandler = require(\"./handlers/LongPressGestureHandler\");\n\nvar _PanGestureHandler = require(\"./handlers/PanGestureHandler\");\n\nvar _PinchGestureHandler = require(\"./handlers/PinchGestureHandler\");\n\nvar _RotationGestureHandler = require(\"./handlers/RotationGestureHandler\");\n\nvar _FlingGestureHandler = require(\"./handlers/FlingGestureHandler\");\n\nvar _createNativeWrapper = _interopRequireDefault(require(\"./handlers/createNativeWrapper\"));\n\nvar _GestureDetector = require(\"./handlers/gestures/GestureDetector\");\n\nvar _gestureObjects = require(\"./handlers/gestures/gestureObjects\");\n\nvar _NativeViewGestureHandler = require(\"./handlers/NativeViewGestureHandler\");\n\nvar _GestureButtons = require(\"./components/GestureButtons\");\n\nvar _touchables = require(\"./components/touchables\");\n\nvar _GestureComponents = require(\"./components/GestureComponents\");\n\nvar _Swipeable = _interopRequireDefault(require(\"./components/Swipeable\"));\n\nvar _DrawerLayout = _interopRequireDefault(require(\"./components/DrawerLayout\"));\n\n(0, _init.initialize)();","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AA+CA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AAiBA;;AAOA;;AAMA;;AAMA;;AA8CA;;AASA;;AAEAA","names":["initialize"],"sources":["index.ts"],"sourcesContent":["import { initialize } from './init';\n\nexport { Directions } from './Directions';\nexport { State } from './State';\nexport { default as gestureHandlerRootHOC } from './gestureHandlerRootHOC';\nexport { default as GestureHandlerRootView } from './GestureHandlerRootView';\nexport type {\n  // event types\n  GestureEvent,\n  HandlerStateChangeEvent,\n  // event payloads types\n  GestureEventPayload,\n  HandlerStateChangeEventPayload,\n  // pointer events\n  GestureTouchEvent,\n  TouchData,\n  // new api event types\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from './handlers/gestureHandlerCommon';\nexport type { GestureType } from './handlers/gestures/gesture';\nexport type {\n  TapGestureHandlerEventPayload,\n  TapGestureHandlerProps,\n} from './handlers/TapGestureHandler';\nexport type {\n  ForceTouchGestureHandlerEventPayload,\n  ForceTouchGestureHandlerProps,\n} from './handlers/ForceTouchGestureHandler';\nexport type { ForceTouchGestureChangeEventPayload } from './handlers/gestures/forceTouchGesture';\nexport type {\n  LongPressGestureHandlerEventPayload,\n  LongPressGestureHandlerProps,\n} from './handlers/LongPressGestureHandler';\nexport type {\n  PanGestureHandlerEventPayload,\n  PanGestureHandlerProps,\n} from './handlers/PanGestureHandler';\nexport type { PanGestureChangeEventPayload } from './handlers/gestures/panGesture';\nexport type {\n  PinchGestureHandlerEventPayload,\n  PinchGestureHandlerProps,\n} from './handlers/PinchGestureHandler';\nexport type { PinchGestureChangeEventPayload } from './handlers/gestures/pinchGesture';\nexport type {\n  RotationGestureHandlerEventPayload,\n  RotationGestureHandlerProps,\n} from './handlers/RotationGestureHandler';\nexport type {\n  FlingGestureHandlerEventPayload,\n  FlingGestureHandlerProps,\n} from './handlers/FlingGestureHandler';\nexport { TapGestureHandler } from './handlers/TapGestureHandler';\nexport { ForceTouchGestureHandler } from './handlers/ForceTouchGestureHandler';\nexport { LongPressGestureHandler } from './handlers/LongPressGestureHandler';\nexport { PanGestureHandler } from './handlers/PanGestureHandler';\nexport { PinchGestureHandler } from './handlers/PinchGestureHandler';\nexport { RotationGestureHandler } from './handlers/RotationGestureHandler';\nexport { FlingGestureHandler } from './handlers/FlingGestureHandler';\nexport { default as createNativeWrapper } from './handlers/createNativeWrapper';\nexport type {\n  NativeViewGestureHandlerPayload,\n  NativeViewGestureHandlerProps,\n} from './handlers/NativeViewGestureHandler';\nexport { GestureDetector } from './handlers/gestures/GestureDetector';\nexport { GestureObjects as Gesture } from './handlers/gestures/gestureObjects';\nexport type { TapGestureType as TapGesture } from './handlers/gestures/tapGesture';\nexport type { PanGestureType as PanGesture } from './handlers/gestures/panGesture';\nexport type { FlingGestureType as FlingGesture } from './handlers/gestures/flingGesture';\nexport type { LongPressGestureType as LongPressGesture } from './handlers/gestures/longPressGesture';\nexport type { PinchGestureType as PinchGesture } from './handlers/gestures/pinchGesture';\nexport type { RotationGestureType as RotationGesture } from './handlers/gestures/rotationGesture';\nexport type { ForceTouchGestureType as ForceTouchGesture } from './handlers/gestures/forceTouchGesture';\nexport type { NativeGestureType as NativeGesture } from './handlers/gestures/nativeGesture';\nexport type { ManualGestureType as ManualGesture } from './handlers/gestures/manualGesture';\nexport type {\n  ComposedGestureType as ComposedGesture,\n  RaceGestureType as RaceGesture,\n  SimultaneousGestureType as SimultaneousGesture,\n  ExclusiveGestureType as ExclusiveGesture,\n} from './handlers/gestures/gestureComposition';\nexport type { GestureStateManagerType as GestureStateManager } from './handlers/gestures/gestureStateManager';\nexport { NativeViewGestureHandler } from './handlers/NativeViewGestureHandler';\nexport type {\n  RawButtonProps,\n  BaseButtonProps,\n  RectButtonProps,\n  BorderlessButtonProps,\n} from './components/GestureButtons';\nexport {\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n} from './components/GestureButtons';\nexport {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from './components/touchables';\nexport {\n  ScrollView,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  FlatList,\n} from './components/GestureComponents';\nexport type {\n  //events\n  GestureHandlerGestureEvent,\n  GestureHandlerStateChangeEvent,\n  //event payloads\n  GestureHandlerGestureEventNativeEvent,\n  GestureHandlerStateChangeNativeEvent,\n  NativeViewGestureHandlerGestureEvent,\n  NativeViewGestureHandlerStateChangeEvent,\n  TapGestureHandlerGestureEvent,\n  TapGestureHandlerStateChangeEvent,\n  ForceTouchGestureHandlerGestureEvent,\n  ForceTouchGestureHandlerStateChangeEvent,\n  LongPressGestureHandlerGestureEvent,\n  LongPressGestureHandlerStateChangeEvent,\n  PanGestureHandlerGestureEvent,\n  PanGestureHandlerStateChangeEvent,\n  PinchGestureHandlerGestureEvent,\n  PinchGestureHandlerStateChangeEvent,\n  RotationGestureHandlerGestureEvent,\n  RotationGestureHandlerStateChangeEvent,\n  FlingGestureHandlerGestureEvent,\n  FlingGestureHandlerStateChangeEvent,\n  // handlers props\n  NativeViewGestureHandlerProperties,\n  TapGestureHandlerProperties,\n  LongPressGestureHandlerProperties,\n  PanGestureHandlerProperties,\n  PinchGestureHandlerProperties,\n  RotationGestureHandlerProperties,\n  FlingGestureHandlerProperties,\n  ForceTouchGestureHandlerProperties,\n  // buttons props\n  RawButtonProperties,\n  BaseButtonProperties,\n  RectButtonProperties,\n  BorderlessButtonProperties,\n} from './handlers/gestureHandlerTypesCompat';\n\nexport { default as Swipeable } from './components/Swipeable';\nexport type {\n  DrawerLayoutProps,\n  DrawerPosition,\n  DrawerState,\n  DrawerType,\n  DrawerLockMode,\n  DrawerKeyboardDismissMode,\n} from './components/DrawerLayout';\nexport { default as DrawerLayout } from './components/DrawerLayout';\n\ninitialize();\n"]},"metadata":{},"sourceType":"script"}