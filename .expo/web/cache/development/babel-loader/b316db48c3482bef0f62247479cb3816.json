{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createOrReuseTransformNode = createOrReuseTransformNode;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.isequal\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction sanitizeTransform(inputTransform) {\n  var outputTransform = [];\n  var hasAnimatedTransform = false;\n  inputTransform.forEach(function (transform) {\n    for (var key in transform) {\n      var value = transform[key];\n\n      if (value instanceof _AnimatedNode2.default) {\n        hasAnimatedTransform = true;\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value: value\n        });\n      }\n    }\n  });\n  return hasAnimatedTransform ? outputTransform : undefined;\n}\n\nfunction extractAnimatedParentNodes(transform) {\n  var parents = [];\n  transform.forEach(function (transform) {\n    for (var key in transform) {\n      var value = transform[key];\n\n      if (value instanceof _AnimatedNode2.default) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\n\nfunction createOrReuseTransformNode(transform, oldNode) {\n  var config = sanitizeTransform(transform);\n\n  if (config === undefined) {\n    return undefined;\n  }\n\n  if (oldNode && (0, _lodash.default)(config, oldNode._config)) {\n    return oldNode;\n  }\n\n  return new AnimatedTransform(transform, config);\n}\n\nvar AnimatedTransform = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedTransform, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedTransform);\n\n  function AnimatedTransform(transform, config) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedTransform);\n    _this = _super.call(this, {\n      type: 'transform',\n      transform: config\n    }, extractAnimatedParentNodes(transform));\n    _this._config = config;\n    _this._transform = transform;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedTransform, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedTransform, id: \" + this.__nodeID;\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return this._transform.map(function (transform) {\n        var result = {};\n\n        for (var key in transform) {\n          var value = transform[key];\n\n          if (value instanceof _AnimatedNode2.default) {\n            result[key] = value.__getValue();\n          }\n        }\n\n        return result;\n      });\n    }\n  }]);\n  return AnimatedTransform;\n}(_AnimatedNode2.default);","map":{"version":3,"names":["sanitizeTransform","inputTransform","outputTransform","hasAnimatedTransform","forEach","transform","key","value","AnimatedNode","push","property","nodeID","__nodeID","undefined","extractAnimatedParentNodes","parents","createOrReuseTransformNode","oldNode","config","deepEqual","_config","AnimatedTransform","type","_transform","map","result","__getValue"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedTransform.js"],"sourcesContent":["import AnimatedNode from './AnimatedNode';\n\nimport deepEqual from 'lodash.isequal';\n\nfunction sanitizeTransform(inputTransform) {\n  const outputTransform = [];\n  let hasAnimatedTransform = false;\n  inputTransform.forEach((transform) => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        hasAnimatedTransform = true;\n        outputTransform.push({\n          property: key,\n          nodeID: value.__nodeID,\n        });\n      } else {\n        outputTransform.push({\n          property: key,\n          value,\n        });\n      }\n    }\n  });\n  return hasAnimatedTransform ? outputTransform : undefined;\n}\n\nfunction extractAnimatedParentNodes(transform) {\n  const parents = [];\n  transform.forEach((transform) => {\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        parents.push(value);\n      }\n    }\n  });\n  return parents;\n}\n\nexport function createOrReuseTransformNode(transform, oldNode) {\n  const config = sanitizeTransform(transform);\n  if (config === undefined) {\n    return undefined;\n  }\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedTransform(transform, config);\n}\n\nclass AnimatedTransform extends AnimatedNode {\n  constructor(transform, config) {\n    super(\n      { type: 'transform', transform: config },\n      extractAnimatedParentNodes(transform)\n    );\n    this._config = config;\n    this._transform = transform;\n  }\n\n  toString() {\n    return `AnimatedTransform, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    return this._transform.map((transform) => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = value.__getValue();\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;;;AAEA,SAASA,iBAAT,CAA2BC,cAA3B,EAA2C;EACzC,IAAMC,eAAe,GAAG,EAAxB;EACA,IAAIC,oBAAoB,GAAG,KAA3B;EACAF,cAAc,CAACG,OAAf,CAAuB,UAACC,SAAD,EAAe;IACpC,KAAK,IAAMC,GAAX,IAAkBD,SAAlB,EAA6B;MAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAD,CAAvB;;MACA,IAAIC,KAAK,YAAYC,sBAArB,EAAmC;QACjCL,oBAAoB,GAAG,IAAvB;QACAD,eAAe,CAACO,IAAhB,CAAqB;UACnBC,QAAQ,EAAEJ,GADS;UAEnBK,MAAM,EAAEJ,KAAK,CAACK;QAFK,CAArB;MAID,CAND,MAMO;QACLV,eAAe,CAACO,IAAhB,CAAqB;UACnBC,QAAQ,EAAEJ,GADS;UAEnBC,KAAK,EAALA;QAFmB,CAArB;MAID;IACF;EACF,CAhBD;EAiBA,OAAOJ,oBAAoB,GAAGD,eAAH,GAAqBW,SAAhD;AACD;;AAED,SAASC,0BAAT,CAAoCT,SAApC,EAA+C;EAC7C,IAAMU,OAAO,GAAG,EAAhB;EACAV,SAAS,CAACD,OAAV,CAAkB,UAACC,SAAD,EAAe;IAC/B,KAAK,IAAMC,GAAX,IAAkBD,SAAlB,EAA6B;MAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAD,CAAvB;;MACA,IAAIC,KAAK,YAAYC,sBAArB,EAAmC;QACjCO,OAAO,CAACN,IAAR,CAAaF,KAAb;MACD;IACF;EACF,CAPD;EAQA,OAAOQ,OAAP;AACD;;AAEM,SAASC,0BAAT,CAAoCX,SAApC,EAA+CY,OAA/C,EAAwD;EAC7D,IAAMC,MAAM,GAAGlB,iBAAiB,CAACK,SAAD,CAAhC;;EACA,IAAIa,MAAM,KAAKL,SAAf,EAA0B;IACxB,OAAOA,SAAP;EACD;;EACD,IAAII,OAAO,IAAI,IAAAE,eAAA,EAAUD,MAAV,EAAkBD,OAAO,CAACG,OAA1B,CAAf,EAAmD;IACjD,OAAOH,OAAP;EACD;;EACD,OAAO,IAAII,iBAAJ,CAAsBhB,SAAtB,EAAiCa,MAAjC,CAAP;AACD;;IAEKG,iB;;;;;EACJ,2BAAYhB,SAAZ,EAAuBa,MAAvB,EAA+B;IAAA;;IAAA;IAC7B,0BACE;MAAEI,IAAI,EAAE,WAAR;MAAqBjB,SAAS,EAAEa;IAAhC,CADF,EAEEJ,0BAA0B,CAACT,SAAD,CAF5B;IAIA,MAAKe,OAAL,GAAeF,MAAf;IACA,MAAKK,UAAL,GAAkBlB,SAAlB;IAN6B;EAO9B;;;;WAED,oBAAW;MACT,mCAAiC,KAAKO,QAAtC;IACD;;;WAED,wBAAe;MACb,OAAO,KAAKW,UAAL,CAAgBC,GAAhB,CAAoB,UAACnB,SAAD,EAAe;QACxC,IAAMoB,MAAM,GAAG,EAAf;;QACA,KAAK,IAAMnB,GAAX,IAAkBD,SAAlB,EAA6B;UAC3B,IAAME,KAAK,GAAGF,SAAS,CAACC,GAAD,CAAvB;;UACA,IAAIC,KAAK,YAAYC,sBAArB,EAAmC;YACjCiB,MAAM,CAACnB,GAAD,CAAN,GAAcC,KAAK,CAACmB,UAAN,EAAd;UACD;QACF;;QACD,OAAOD,MAAP;MACD,CATM,CAAP;IAUD;;;EAzB6BjB,sB"},"metadata":{},"sourceType":"script"}