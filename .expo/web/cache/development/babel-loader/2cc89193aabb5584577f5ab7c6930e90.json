{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useNavigationHelpers;\n\nvar _routers = require(\"@react-navigation/routers\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\n\nvar _types = require(\"./types\");\n\nvar _UnhandledActionContext = _interopRequireDefault(require(\"./UnhandledActionContext\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n_types.PrivateValueStore;\n\nfunction useNavigationHelpers(_ref) {\n  var navigatorId = _ref.id,\n      onAction = _ref.onAction,\n      getState = _ref.getState,\n      emitter = _ref.emitter,\n      router = _ref.router;\n  var onUnhandledAction = React.useContext(_UnhandledActionContext.default);\n  var parentNavigationHelpers = React.useContext(_NavigationContext.default);\n  return React.useMemo(function () {\n    var dispatch = function dispatch(op) {\n      var action = typeof op === 'function' ? op(getState()) : op;\n      var handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction === null || onUnhandledAction === void 0 ? void 0 : onUnhandledAction(action);\n      }\n    };\n\n    var actions = Object.assign({}, router.actionCreators, _routers.CommonActions);\n    var helpers = Object.keys(actions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return dispatch(actions[name].apply(actions, arguments));\n      };\n\n      return acc;\n    }, {});\n    var navigationHelpers = Object.assign({}, parentNavigationHelpers, helpers, {\n      dispatch: dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers ? parentNavigationHelpers.isFocused : function () {\n        return true;\n      },\n      canGoBack: function canGoBack() {\n        var state = getState();\n        return router.getStateForAction(state, _routers.CommonActions.goBack(), {\n          routeNames: state.routeNames,\n          routeParamList: {},\n          routeGetIdList: {}\n        }) !== null || (parentNavigationHelpers === null || parentNavigationHelpers === void 0 ? void 0 : parentNavigationHelpers.canGoBack()) || false;\n      },\n      getId: function getId() {\n        return navigatorId;\n      },\n      getParent: function getParent(id) {\n        if (id !== undefined) {\n          var current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState: getState\n    });\n    return navigationHelpers;\n  }, [navigatorId, emitter.emit, getState, onAction, onUnhandledAction, parentNavigationHelpers, router]);\n}","map":{"version":3,"mappings":";;;;;;;AAAA;;AAOA;;AAEA;;AACA;;AACA;;;;;;AAKAA;;AAce,SAASC,oBAAT,OAWY;EAAA,IALrBC,WAKqB,QALzBC,EAKyB;EAAA,IAJzBC,QAIyB,QAJzBA,QAIyB;EAAA,IAHzBC,QAGyB,QAHzBA,QAGyB;EAAA,IAFzBC,OAEyB,QAFzBA,OAEyB;EAAA,IADzBC,MACyB,QADzBA,MACyB;EACzB,IAAMC,iBAAiB,GAAGC,KAAK,CAACC,UAAND,CAAiBE,+BAAjBF,CAA1B;EACA,IAAMG,uBAAuB,GAAGH,KAAK,CAACC,UAAND,CAAiBI,0BAAjBJ,CAAhC;EAEA,OAAOA,KAAK,CAACK,OAANL,CAAc,YAAM;IACzB,IAAMM,QAAQ,GAAIC,SAAZD,QAAYC,GAAD,EAA6C;MAC5D,IAAMC,MAAM,GAAG,OAAOD,EAAP,KAAc,UAAd,GAA2BA,EAAE,CAACX,QAAQ,EAAT,CAA7B,GAA4CW,EAA3D;MAEA,IAAME,OAAO,GAAGd,QAAQ,CAACa,MAAD,CAAxB;;MAEA,IAAI,CAACC,OAAL,EAAc;QACZV,iBAAiB,SAAjBA,qBAAiB,WAAjBA,6BAAiB,CAAGS,MAAH,CAAjBT;MACD;IAPH;;IAUA,IAAMW,OAAO,qBACRZ,MAAM,CAACa,cADC,EAERC,sBAFQ,CAAb;IAKA,IAAMC,OAAO,GAAGC,MAAM,CAACC,IAAPD,CAAYJ,OAAZI,EAAqBE,MAArBF,CAA4B,UAACG,GAAD,EAAMC,IAAN,EAAe;MAEzDD,GAAG,CAACC,IAAD,CAAHD,GAAY;QAAA,OAAkBX,QAAQ,CAACI,OAAO,CAACQ,IAAD,CAAPR,cAAO,EAAOS,SAAP,CAAR,CAA1B;MAAZ;;MACA,OAAOF,GAAP;IAHc,GAIb,EAJaH,CAAhB;IAMA,IAAMM,iBAAiB,qBAClBjB,uBADkB,EAElBU,OAFkB;MAGrBP,QAHwB,EAGxBA,QAHqB;MAIrBe,IAAI,EAAExB,OAAO,CAACwB,IAJO;MAKrBC,SAAS,EAAEnB,uBAAuB,GAC9BA,uBAAuB,CAACmB,SADM,GAE9B;QAAA,OAAM,IAAN;MAAA,CAPiB;MAQrBC,SAAS,EAAE,qBAAM;QACf,IAAMC,KAAK,GAAG5B,QAAQ,EAAtB;QAEA,OACEE,MAAM,CAAC2B,iBAAP3B,CAAyB0B,KAAzB1B,EAAgCc,uBAAcc,MAAdd,EAAhCd,EAAkE;UAChE6B,UAAU,EAAEH,KAAK,CAACG,UAD8C;UAEhEC,cAAc,EAAE,EAFgD;UAGhEC,cAAc,EAAE;QAHgD,CAAlE/B,MAIO,IAJPA,KAKAK,uBALA,SAKAA,2BALA,WAKAA,GALA,MAKAA,0BAAuB,CAAEoB,SAAzBpB,EALAL,KAMA,KAPF;MAXsB,CAAH;MAqBrBgC,KAAK,EAAE;QAAA,OAAMrC,WAAN;MAAA,CArBc;MAsBrBsC,SAAS,EAAGrC,qBAAD,EAAiB;QAC1B,IAAIA,EAAE,KAAKsC,SAAX,EAAsB;UACpB,IAAIC,OAAO,GAAGb,iBAAd;;UAEA,OAAOa,OAAO,IAAIvC,EAAE,KAAKuC,OAAO,CAACH,KAARG,EAAzB,EAA0C;YACxCA,OAAO,GAAGA,OAAO,CAACF,SAARE,EAAVA;UACD;;UAED,OAAOA,OAAP;QACD;;QAED,OAAO9B,uBAAP;MAjCsB,CAAH;MAmCrBP;IAnCqB,EAAvB;IAsCA,OAAOwB,iBAAP;EA5DK,GA6DJ,CACD3B,WADC,EAEDI,OAAO,CAACwB,IAFP,EAGDzB,QAHC,EAIDD,QAJC,EAKDI,iBALC,EAMDI,uBANC,EAODL,MAPC,CA7DIE,CAAP;AAsED","names":["PrivateValueStore","useNavigationHelpers","navigatorId","id","onAction","getState","emitter","router","onUnhandledAction","React","useContext","UnhandledActionContext","parentNavigationHelpers","NavigationContext","useMemo","dispatch","op","action","handled","actions","actionCreators","CommonActions","helpers","Object","keys","reduce","acc","name","arguments","navigationHelpers","emit","isFocused","canGoBack","state","getStateForAction","goBack","routeNames","routeParamList","routeGetIdList","getId","getParent","undefined","current"],"sources":["useNavigationHelpers.tsx"],"sourcesContent":["import {\n  CommonActions,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  Router,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport { NavigationHelpers, PrivateValueStore } from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype Options<State extends NavigationState, Action extends NavigationAction> = {\n  id: string | undefined;\n  onAction: (action: NavigationAction) => boolean;\n  getState: () => State;\n  emitter: NavigationEventEmitter<any>;\n  router: Router<State, Action>;\n};\n\n/**\n * Navigation object with helper methods to be used by a navigator.\n * This object includes methods for common actions as well as methods the parent screen's navigation object.\n */\nexport default function useNavigationHelpers<\n  State extends NavigationState,\n  ActionHelpers extends Record<string, () => void>,\n  Action extends NavigationAction,\n  EventMap extends Record<string, any>\n>({\n  id: navigatorId,\n  onAction,\n  getState,\n  emitter,\n  router,\n}: Options<State, Action>) {\n  const onUnhandledAction = React.useContext(UnhandledActionContext);\n  const parentNavigationHelpers = React.useContext(NavigationContext);\n\n  return React.useMemo(() => {\n    const dispatch = (op: Action | ((state: State) => Action)) => {\n      const action = typeof op === 'function' ? op(getState()) : op;\n\n      const handled = onAction(action);\n\n      if (!handled) {\n        onUnhandledAction?.(action);\n      }\n    };\n\n    const actions = {\n      ...router.actionCreators,\n      ...CommonActions,\n    };\n\n    const helpers = Object.keys(actions).reduce((acc, name) => {\n      // @ts-expect-error: name is a valid key, but TypeScript is dumb\n      acc[name] = (...args: any) => dispatch(actions[name](...args));\n      return acc;\n    }, {} as ActionHelpers);\n\n    const navigationHelpers = {\n      ...parentNavigationHelpers,\n      ...helpers,\n      dispatch,\n      emit: emitter.emit,\n      isFocused: parentNavigationHelpers\n        ? parentNavigationHelpers.isFocused\n        : () => true,\n      canGoBack: () => {\n        const state = getState();\n\n        return (\n          router.getStateForAction(state, CommonActions.goBack() as Action, {\n            routeNames: state.routeNames,\n            routeParamList: {},\n            routeGetIdList: {},\n          }) !== null ||\n          parentNavigationHelpers?.canGoBack() ||\n          false\n        );\n      },\n      getId: () => navigatorId,\n      getParent: (id?: string) => {\n        if (id !== undefined) {\n          let current = navigationHelpers;\n\n          while (current && id !== current.getId()) {\n            current = current.getParent();\n          }\n\n          return current;\n        }\n\n        return parentNavigationHelpers;\n      },\n      getState,\n    } as NavigationHelpers<ParamListBase, EventMap> & ActionHelpers;\n\n    return navigationHelpers;\n  }, [\n    navigatorId,\n    emitter.emit,\n    getState,\n    onAction,\n    onUnhandledAction,\n    parentNavigationHelpers,\n    router,\n  ]);\n}\n"]},"metadata":{},"sourceType":"script"}