{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _useCode = _interopRequireDefault(require(\"../derived/useCode\"));\n\nvar _AnimatedNode = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nfunction assertNodesNotNull(code, children, exec) {\n  if (!code) {\n    var error = !children ? \"Got \\\"\" + typeof children + \"\\\" type passed to children\" : \"Got \\\"\" + typeof exec + \"\\\" type passed to exec\";\n    throw new Error(\"<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. \" + error);\n  }\n}\n\nfunction Code(_ref) {\n  var exec = _ref.exec,\n      children = _ref.children,\n      dependencies = _ref.dependencies;\n  var nodes = children || exec;\n  var code = null;\n\n  if (nodes instanceof _AnimatedNode.default) {\n    code = function code() {\n      return nodes;\n    };\n  } else if (typeof nodes === 'function') {\n    code = nodes;\n  }\n\n  assertNodesNotNull(code, children, exec);\n  (0, _useCode.default)(code, dependencies);\n  return null;\n}\n\nvar _default = Code;\nexports.default = _default;","map":{"version":3,"names":["assertNodesNotNull","code","children","exec","error","Error","Code","dependencies","nodes","AnimatedNode","useCode"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedCode.js"],"sourcesContent":["import useCode from '../derived/useCode';\nimport AnimatedNode from './AnimatedNode';\n\nfunction assertNodesNotNull(code, children, exec) {\n  if (!code) {\n    const error = !children\n      ? `Got \"${typeof children}\" type passed to children`\n      : `Got \"${typeof exec}\" type passed to exec`;\n\n    throw new Error(\n      `<Animated.Code /> expects the 'exec' prop or children to be an animated node or a function returning an animated node. ${error}`\n    );\n  }\n}\n\nfunction Code({ exec, children, dependencies }) {\n  const nodes = children || exec;\n\n  let code = null;\n  if (nodes instanceof AnimatedNode) {\n    code = () => nodes;\n  } else if (typeof nodes === 'function') {\n    code = nodes;\n  }\n\n  assertNodesNotNull(code, children, exec);\n\n  useCode(code, dependencies);\n  return null;\n}\n\nexport default Code;\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,SAASA,kBAAT,CAA4BC,IAA5B,EAAkCC,QAAlC,EAA4CC,IAA5C,EAAkD;EAChD,IAAI,CAACF,IAAL,EAAW;IACT,IAAMG,KAAK,GAAG,CAACF,QAAD,cACF,OAAOA,QADL,6CAEF,OAAOC,IAFL,2BAAd;IAIA,MAAM,IAAIE,KAAJ,6HACsHD,KADtH,CAAN;EAGD;AACF;;AAED,SAASE,IAAT,OAAgD;EAAA,IAAhCH,IAAgC,QAAhCA,IAAgC;EAAA,IAA1BD,QAA0B,QAA1BA,QAA0B;EAAA,IAAhBK,YAAgB,QAAhBA,YAAgB;EAC9C,IAAMC,KAAK,GAAGN,QAAQ,IAAIC,IAA1B;EAEA,IAAIF,IAAI,GAAG,IAAX;;EACA,IAAIO,KAAK,YAAYC,qBAArB,EAAmC;IACjCR,IAAI,GAAG;MAAA,OAAMO,KAAN;IAAA,CAAP;EACD,CAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiC;IACtCP,IAAI,GAAGO,KAAP;EACD;;EAEDR,kBAAkB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,IAAjB,CAAlB;EAEA,IAAAO,gBAAA,EAAQT,IAAR,EAAcM,YAAd;EACA,OAAO,IAAP;AACD;;eAEcD,I"},"metadata":{},"sourceType":"script"}