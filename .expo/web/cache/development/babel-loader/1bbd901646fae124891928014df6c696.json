{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar MISSING_CONTEXT_ERROR = \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\n\nvar _default = React.createContext({\n  isDefault: true,\n\n  get getKey() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get setKey() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get getState() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get setState() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n\n  get getIsInitial() {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  }\n\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;AACA;;;;;;AAEA,IAAMA,qBAAqB,GACzB,wKADF;;eAGeC,KAAK,CAACC,aAAND,CAcZ;EACDE,SAAS,EAAE,IADV;;EAGD,IAAIC,MAAJ,GAAkB;IAChB,MAAM,IAAIC,KAAJ,CAAUL,qBAAV,CAAN;EAJD;;EAMD,IAAIM,MAAJ,GAAkB;IAChB,MAAM,IAAID,KAAJ,CAAUL,qBAAV,CAAN;EAPD;;EASD,IAAIO,QAAJ,GAAoB;IAClB,MAAM,IAAIF,KAAJ,CAAUL,qBAAV,CAAN;EAVD;;EAYD,IAAIQ,QAAJ,GAAoB;IAClB,MAAM,IAAIH,KAAJ,CAAUL,qBAAV,CAAN;EAbD;;EAeD,IAAIS,YAAJ,GAAwB;IACtB,MAAM,IAAIJ,KAAJ,CAAUL,qBAAV,CAAN;EACD;;AAjBA,CAdYC,C","names":["MISSING_CONTEXT_ERROR","React","createContext","isDefault","getKey","Error","setKey","getState","setState","getIsInitial"],"sources":["NavigationStateContext.tsx"],"sourcesContent":["import type { NavigationState, PartialState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nconst MISSING_CONTEXT_ERROR =\n  \"Couldn't find a navigation context. Have you wrapped your app with 'NavigationContainer'? See https://reactnavigation.org/docs/getting-started for setup instructions.\";\n\nexport default React.createContext<{\n  isDefault?: true;\n  state?: NavigationState | PartialState<NavigationState>;\n  getKey: () => string | undefined;\n  setKey: (key: string) => void;\n  getState: () => NavigationState | PartialState<NavigationState> | undefined;\n  setState: (\n    state: NavigationState | PartialState<NavigationState> | undefined\n  ) => void;\n  getIsInitial: () => boolean;\n  addOptionsGetter?: (\n    key: string,\n    getter: () => object | undefined | null\n  ) => void;\n}>({\n  isDefault: true,\n\n  get getKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setKey(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get setState(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n  get getIsInitial(): any {\n    throw new Error(MISSING_CONTEXT_ERROR);\n  },\n});\n"]},"metadata":{},"sourceType":"script"}