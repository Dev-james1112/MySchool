{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _AnimatedEvent = require(\"../AnimatedEvent\");\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _AnimatedStyle = _interopRequireDefault(require(\"./AnimatedStyle\"));\n\nvar _NativeAnimatedHelper = _interopRequireDefault(require(\"../NativeAnimatedHelper\"));\n\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../../exports/findNodeHandle\"));\n\nvar _invariant = _interopRequireDefault(require(\"fbjs/lib/invariant\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedProps = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedProps, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedProps);\n\n  function AnimatedProps(props, callback) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedProps);\n    _this = _super.call(this);\n\n    if (props.style) {\n      props = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, props), {}, {\n        style: new _AnimatedStyle.default(props.style)\n      });\n    }\n\n    _this._props = props;\n    _this._callback = callback;\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedProps, [{\n    key: \"__getValue\",\n    value: function __getValue() {\n      var props = {};\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof _AnimatedNode2.default) {\n          if (!value.__isNative || value instanceof _AnimatedStyle.default) {\n            props[key] = value.__getValue();\n          }\n        } else if (value instanceof _AnimatedEvent.AnimatedEvent) {\n          props[key] = value.__getHandler();\n        } else {\n          props[key] = value;\n        }\n      }\n\n      return props;\n    }\n  }, {\n    key: \"__getAnimatedValue\",\n    value: function __getAnimatedValue() {\n      var props = {};\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof _AnimatedNode2.default) {\n          props[key] = value.__getAnimatedValue();\n        }\n      }\n\n      return props;\n    }\n  }, {\n    key: \"__attach\",\n    value: function __attach() {\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof _AnimatedNode2.default) {\n          value.__addChild(this);\n        }\n      }\n    }\n  }, {\n    key: \"__detach\",\n    value: function __detach() {\n      if (this.__isNative && this._animatedView) {\n        this.__disconnectAnimatedView();\n      }\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof _AnimatedNode2.default) {\n          value.__removeChild(this);\n        }\n      }\n\n      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedProps.prototype), \"__detach\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._callback();\n    }\n  }, {\n    key: \"__makeNative\",\n    value: function __makeNative() {\n      if (!this.__isNative) {\n        this.__isNative = true;\n\n        for (var key in this._props) {\n          var value = this._props[key];\n\n          if (value instanceof _AnimatedNode2.default) {\n            value.__makeNative();\n          }\n        }\n\n        if (this._animatedView) {\n          this.__connectAnimatedView();\n        }\n      }\n    }\n  }, {\n    key: \"setNativeView\",\n    value: function setNativeView(animatedView) {\n      if (this._animatedView === animatedView) {\n        return;\n      }\n\n      this._animatedView = animatedView;\n\n      if (this.__isNative) {\n        this.__connectAnimatedView();\n      }\n    }\n  }, {\n    key: \"__connectAnimatedView\",\n    value: function __connectAnimatedView() {\n      (0, _invariant.default)(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = (0, _findNodeHandle.default)(this._animatedView);\n      (0, _invariant.default)(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n      _NativeAnimatedHelper.default.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__disconnectAnimatedView\",\n    value: function __disconnectAnimatedView() {\n      (0, _invariant.default)(this.__isNative, 'Expected node to be marked as \"native\"');\n      var nativeViewTag = (0, _findNodeHandle.default)(this._animatedView);\n      (0, _invariant.default)(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n\n      _NativeAnimatedHelper.default.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n    }\n  }, {\n    key: \"__restoreDefaultValues\",\n    value: function __restoreDefaultValues() {\n      if (this.__isNative) {\n        _NativeAnimatedHelper.default.API.restoreDefaultValues(this.__getNativeTag());\n      }\n    }\n  }, {\n    key: \"__getNativeConfig\",\n    value: function __getNativeConfig() {\n      var propsConfig = {};\n\n      for (var propKey in this._props) {\n        var value = this._props[propKey];\n\n        if (value instanceof _AnimatedNode2.default) {\n          value.__makeNative();\n\n          propsConfig[propKey] = value.__getNativeTag();\n        }\n      }\n\n      return {\n        type: 'props',\n        props: propsConfig\n      };\n    }\n  }]);\n  return AnimatedProps;\n}(_AnimatedNode2.default);\n\nvar _default = AnimatedProps;\nexports.default = _default;","map":{"version":3,"names":["AnimatedProps","props","callback","style","_objectSpread","AnimatedStyle","_props","_callback","__attach","key","value","AnimatedNode","__isNative","__getValue","AnimatedEvent","__getHandler","__getAnimatedValue","__addChild","_animatedView","__disconnectAnimatedView","__removeChild","__makeNative","__connectAnimatedView","animatedView","invariant","nativeViewTag","findNodeHandle","NativeAnimatedHelper","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","restoreDefaultValues","propsConfig","propKey","type"],"sources":["C:/.project/today_meal/node_modules/react-native-web/dist/vendor/react-native/Animated/nodes/AnimatedProps.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedStyle from './AnimatedStyle';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport findNodeHandle from '../../../../exports/findNodeHandle';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n\n    if (props.style) {\n      props = _objectSpread(_objectSpread({}, props), {}, {\n        style: new AnimatedStyle(props.style)\n      });\n    }\n\n    this._props = props;\n    this._callback = callback;\n\n    this.__attach();\n  }\n\n  __getValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue() {\n    var props = {};\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n\n    return props;\n  }\n\n  __attach() {\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n\n    for (var key in this._props) {\n      var value = this._props[key];\n\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n\n    super.__detach();\n  }\n\n  update() {\n    this._callback();\n  }\n\n  __makeNative() {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      for (var key in this._props) {\n        var value = this._props[key];\n\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n\n    this._animatedView = animatedView;\n\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    var nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n\n  __restoreDefaultValues() {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig() {\n    var propsConfig = {};\n\n    for (var propKey in this._props) {\n      var value = this._props[propKey];\n\n      if (value instanceof AnimatedNode) {\n        value.__makeNative();\n\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n\n}\n\nexport default AnimatedProps;"],"mappings":"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"},"metadata":{},"sourceType":"script"}