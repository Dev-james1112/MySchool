{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = springAnimation;\n\nvar _base = require(\"../base\");\n\nvar _InternalAnimatedValue = _interopRequireDefault(require(\"../core/InternalAnimatedValue\"));\n\nvar MAX_STEPS_MS = 64;\n\nfunction spring(clock, state, config) {\n  var lastTime = (0, _base.cond)(state.time, state.time, clock);\n  var deltaTime = (0, _base.min)((0, _base.sub)(clock, lastTime), MAX_STEPS_MS);\n  var c = config.damping;\n  var m = config.mass;\n  var k = config.stiffness;\n  var v0 = (0, _base.multiply)(-1, state.velocity);\n  var x0 = (0, _base.sub)(config.toValue, state.position);\n  var zeta = (0, _base.divide)(c, (0, _base.multiply)(2, (0, _base.sqrt)((0, _base.multiply)(k, m))));\n  var omega0 = (0, _base.sqrt)((0, _base.divide)(k, m));\n  var omega1 = (0, _base.multiply)(omega0, (0, _base.sqrt)((0, _base.sub)(1, (0, _base.multiply)(zeta, zeta))));\n  var t = (0, _base.divide)(deltaTime, 1000);\n  var sin1 = (0, _base.sin)((0, _base.multiply)(omega1, t));\n  var cos1 = (0, _base.cos)((0, _base.multiply)(omega1, t));\n  var underDampedEnvelope = (0, _base.exp)((0, _base.multiply)(-1, zeta, omega0, t));\n  var underDampedFrag1 = (0, _base.multiply)(underDampedEnvelope, (0, _base.add)((0, _base.multiply)(sin1, (0, _base.divide)((0, _base.add)(v0, (0, _base.multiply)(zeta, omega0, x0)), omega1)), (0, _base.multiply)(x0, cos1)));\n  var underDampedPosition = (0, _base.sub)(config.toValue, underDampedFrag1);\n  var underDampedVelocity = (0, _base.sub)((0, _base.multiply)(zeta, omega0, underDampedFrag1), (0, _base.multiply)(underDampedEnvelope, (0, _base.sub)((0, _base.multiply)(cos1, (0, _base.add)(v0, (0, _base.multiply)(zeta, omega0, x0))), (0, _base.multiply)(omega1, x0, sin1))));\n  var criticallyDampedEnvelope = (0, _base.exp)((0, _base.multiply)(-1, omega0, t));\n  var criticallyDampedPosition = (0, _base.sub)(config.toValue, (0, _base.multiply)(criticallyDampedEnvelope, (0, _base.add)(x0, (0, _base.multiply)((0, _base.add)(v0, (0, _base.multiply)(omega0, x0)), t))));\n  var criticallyDampedVelocity = (0, _base.multiply)(criticallyDampedEnvelope, (0, _base.add)((0, _base.multiply)(v0, (0, _base.sub)((0, _base.multiply)(t, omega0), 1)), (0, _base.multiply)(t, x0, omega0, omega0)));\n  var prevPosition = state.prevPosition ? state.prevPosition : new _InternalAnimatedValue.default(0);\n  var isOvershooting = (0, _base.cond)((0, _base.and)(config.overshootClamping, (0, _base.neq)(config.stiffness, 0)), (0, _base.cond)((0, _base.lessThan)(prevPosition, config.toValue), (0, _base.greaterThan)(state.position, config.toValue), (0, _base.lessThan)(state.position, config.toValue)));\n  var isVelocity = (0, _base.lessThan)((0, _base.abs)(state.velocity), config.restSpeedThreshold);\n  var isDisplacement = (0, _base.or)((0, _base.eq)(config.stiffness, 0), (0, _base.lessThan)((0, _base.abs)((0, _base.sub)(config.toValue, state.position)), config.restDisplacementThreshold));\n  return (0, _base.block)([(0, _base.set)(prevPosition, state.position), (0, _base.cond)((0, _base.lessThan)(zeta, 1), [(0, _base.set)(state.position, underDampedPosition), (0, _base.set)(state.velocity, underDampedVelocity)], [(0, _base.set)(state.position, criticallyDampedPosition), (0, _base.set)(state.velocity, criticallyDampedVelocity)]), (0, _base.set)(state.time, clock), (0, _base.cond)((0, _base.or)(isOvershooting, (0, _base.and)(isVelocity, isDisplacement)), [(0, _base.cond)((0, _base.neq)(config.stiffness, 0), [(0, _base.set)(state.velocity, 0), (0, _base.set)(state.position, config.toValue)]), (0, _base.set)(state.finished, 1)])]);\n}\n\nvar procSpring = (0, _base.proc)(function (finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock) {\n  return spring(clock, {\n    finished: finished,\n    velocity: velocity,\n    position: position,\n    time: time,\n    prevPosition: prevPosition\n  }, {\n    toValue: toValue,\n    damping: damping,\n    mass: mass,\n    stiffness: stiffness,\n    overshootClamping: overshootClamping,\n    restDisplacementThreshold: restDisplacementThreshold,\n    restSpeedThreshold: restSpeedThreshold\n  });\n});\n\nfunction springAnimation(clock, _ref, _ref2) {\n  var finished = _ref.finished,\n      velocity = _ref.velocity,\n      position = _ref.position,\n      time = _ref.time,\n      prevPosition = _ref.prevPosition;\n  var toValue = _ref2.toValue,\n      damping = _ref2.damping,\n      mass = _ref2.mass,\n      stiffness = _ref2.stiffness,\n      overshootClamping = _ref2.overshootClamping,\n      restDisplacementThreshold = _ref2.restDisplacementThreshold,\n      restSpeedThreshold = _ref2.restSpeedThreshold;\n  return procSpring(finished, velocity, position, time, prevPosition, toValue, damping, mass, stiffness, overshootClamping, restSpeedThreshold, restDisplacementThreshold, clock);\n}","map":{"version":3,"names":["MAX_STEPS_MS","spring","clock","state","config","lastTime","cond","time","deltaTime","min","sub","c","damping","m","mass","k","stiffness","v0","multiply","velocity","x0","toValue","position","zeta","divide","sqrt","omega0","omega1","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","add","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","prevPosition","AnimatedValue","isOvershooting","and","overshootClamping","neq","lessThan","greaterThan","isVelocity","abs","restSpeedThreshold","isDisplacement","or","eq","restDisplacementThreshold","block","set","finished","procSpring","proc","springAnimation"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated1/animations/spring.js"],"sourcesContent":["import {\n  cond,\n  sub,\n  divide,\n  multiply,\n  sqrt,\n  add,\n  block,\n  set,\n  exp,\n  sin,\n  cos,\n  eq,\n  or,\n  neq,\n  and,\n  lessThan,\n  greaterThan,\n  proc,\n  min,\n  abs,\n} from '../base';\nimport AnimatedValue from '../core/InternalAnimatedValue';\n\nconst MAX_STEPS_MS = 64;\n\nfunction spring(clock, state, config) {\n  const lastTime = cond(state.time, state.time, clock);\n\n  const deltaTime = min(sub(clock, lastTime), MAX_STEPS_MS);\n\n  const c = config.damping;\n  const m = config.mass;\n  const k = config.stiffness;\n\n  const v0 = multiply(-1, state.velocity);\n  const x0 = sub(config.toValue, state.position);\n\n  const zeta = divide(c, multiply(2, sqrt(multiply(k, m)))); // damping ratio\n  const omega0 = sqrt(divide(k, m)); // undamped angular frequency of the oscillator (rad/ms)\n  const omega1 = multiply(omega0, sqrt(sub(1, multiply(zeta, zeta)))); // exponential decay\n\n  const t = divide(deltaTime, 1000); // in seconds\n\n  const sin1 = sin(multiply(omega1, t));\n  const cos1 = cos(multiply(omega1, t));\n\n  // under damped\n  const underDampedEnvelope = exp(multiply(-1, zeta, omega0, t));\n  const underDampedFrag1 = multiply(\n    underDampedEnvelope,\n    add(\n      multiply(sin1, divide(add(v0, multiply(zeta, omega0, x0)), omega1)),\n      multiply(x0, cos1)\n    )\n  );\n  const underDampedPosition = sub(config.toValue, underDampedFrag1);\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity = sub(\n    multiply(zeta, omega0, underDampedFrag1),\n    multiply(\n      underDampedEnvelope,\n      sub(\n        multiply(cos1, add(v0, multiply(zeta, omega0, x0))),\n        multiply(omega1, x0, sin1)\n      )\n    )\n  );\n\n  // critically damped\n  const criticallyDampedEnvelope = exp(multiply(-1, omega0, t));\n  const criticallyDampedPosition = sub(\n    config.toValue,\n    multiply(\n      criticallyDampedEnvelope,\n      add(x0, multiply(add(v0, multiply(omega0, x0)), t))\n    )\n  );\n  const criticallyDampedVelocity = multiply(\n    criticallyDampedEnvelope,\n    add(\n      multiply(v0, sub(multiply(t, omega0), 1)),\n      multiply(t, x0, omega0, omega0)\n    )\n  );\n\n  // conditions for stopping the spring animations\n  const prevPosition = state.prevPosition\n    ? state.prevPosition\n    : new AnimatedValue(0);\n\n  const isOvershooting = cond(\n    and(config.overshootClamping, neq(config.stiffness, 0)),\n    cond(\n      lessThan(prevPosition, config.toValue),\n      greaterThan(state.position, config.toValue),\n      lessThan(state.position, config.toValue)\n    )\n  );\n  const isVelocity = lessThan(abs(state.velocity), config.restSpeedThreshold);\n  const isDisplacement = or(\n    eq(config.stiffness, 0),\n    lessThan(\n      abs(sub(config.toValue, state.position)),\n      config.restDisplacementThreshold\n    )\n  );\n\n  return block([\n    set(prevPosition, state.position),\n    cond(\n      lessThan(zeta, 1),\n      [\n        set(state.position, underDampedPosition),\n        set(state.velocity, underDampedVelocity),\n      ],\n      [\n        set(state.position, criticallyDampedPosition),\n        set(state.velocity, criticallyDampedVelocity),\n      ]\n    ),\n    set(state.time, clock),\n    cond(or(isOvershooting, and(isVelocity, isDisplacement)), [\n      cond(neq(config.stiffness, 0), [\n        set(state.velocity, 0),\n        set(state.position, config.toValue),\n      ]),\n      set(state.finished, 1),\n    ]),\n  ]);\n}\n\nconst procSpring = proc(\n  (\n    finished,\n    velocity,\n    position,\n    time,\n    prevPosition,\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restSpeedThreshold,\n    restDisplacementThreshold,\n    clock\n  ) =>\n    spring(\n      clock,\n      {\n        finished,\n        velocity,\n        position,\n        time,\n        prevPosition,\n      },\n      {\n        toValue,\n        damping,\n        mass,\n        stiffness,\n        overshootClamping,\n        restDisplacementThreshold,\n        restSpeedThreshold,\n      }\n    )\n);\n\nexport default function springAnimation(\n  clock,\n  { finished, velocity, position, time, prevPosition },\n  {\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restDisplacementThreshold,\n    restSpeedThreshold,\n  }\n) {\n  return procSpring(\n    finished,\n    velocity,\n    position,\n    time,\n    prevPosition,\n    toValue,\n    damping,\n    mass,\n    stiffness,\n    overshootClamping,\n    restSpeedThreshold,\n    restDisplacementThreshold,\n    clock\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}