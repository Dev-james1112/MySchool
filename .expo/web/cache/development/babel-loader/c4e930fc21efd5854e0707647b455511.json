{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withStyleAnimation = exports.setPath = exports.resolvePath = void 0;\n\nvar _util = require(\"./util\");\n\nvar _timing = require(\"./timing\");\n\nvar _UpdateProps = require(\"../UpdateProps\");\n\nvar _Colors = require(\"../Colors\");\n\nvar resolvePath = function () {\n  var _f = function _f(obj, path) {\n    var keys = Array.isArray(path) ? path : [path];\n    return keys.reduce(function (acc, current) {\n      if (Array.isArray(acc) && typeof current === 'number') {\n        return acc[current];\n      } else if (typeof acc === 'object' && current in acc) {\n        return acc[current];\n      }\n\n      return undefined;\n    }, obj);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";\n  _f.__workletHash = 6802843237952;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (7:7)\";\n  return _f;\n}();\n\nexports.resolvePath = resolvePath;\n\nvar setPath = function () {\n  var _f = function _f(obj, path, value) {\n    var keys = Array.isArray(path) ? path : [path];\n    var currObj = obj;\n\n    for (var i = 0; i < keys.length - 1; i++) {\n      currObj = currObj;\n\n      if (!currObj[keys[i]]) {\n        if (typeof keys[i + 1] === 'number') {\n          currObj[keys[i]] = [];\n        } else {\n          currObj[keys[i]] = {};\n        }\n      }\n\n      currObj = currObj[keys[i]];\n    }\n\n    currObj[keys[keys.length - 1]] = value;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";\n  _f.__workletHash = 16252556056779;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (20:7)\";\n  return _f;\n}();\n\nexports.setPath = setPath;\n\nvar withStyleAnimation = function () {\n  var _f = function _f(styleAnimations) {\n    return (0, _util.defineAnimation)({}, function () {\n      var _f = function _f() {\n        var onFrame = function onFrame(animation, now) {\n          var stillGoing = false;\n          var entriesToCheck = [{\n            value: animation.styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n              for (var key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var currentStyleAnimation = currentEntry.value;\n\n              if (currentStyleAnimation.finished) {\n                continue;\n              }\n\n              var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n\n              if (finished) {\n                currentStyleAnimation.finished = true;\n\n                if (currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(true);\n                }\n              } else {\n                stillGoing = true;\n              }\n\n              if (_UpdateProps.ColorProperties.includes(currentEntry.path[0])) {\n                currentStyleAnimation.current = (0, _Colors.processColor)(currentStyleAnimation.current);\n              }\n\n              setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n            }\n          }\n\n          return !stillGoing;\n        };\n\n        var onStart = function onStart(animation, value, now, previousAnimation) {\n          var entriesToCheck = [{\n            value: styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n              for (var key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n              var prevVal = resolvePath(value, currentEntry.path);\n\n              if (prevAnimation && !prevVal) {\n                prevVal = prevAnimation.current;\n              }\n\n              setPath(animation.current, currentEntry.path, prevVal);\n              var currentAnimation = void 0;\n\n              if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n                currentAnimation = (0, _timing.withTiming)(currentEntry.value, {\n                  duration: 0\n                });\n                setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n              } else {\n                currentAnimation = currentEntry.value;\n              }\n\n              currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n            }\n          }\n        };\n\n        var callback = function callback(finished) {\n          if (!finished) {\n            var animationsToCheck = [styleAnimations];\n\n            while (animationsToCheck.length > 0) {\n              var currentAnimation = animationsToCheck.pop();\n\n              if (Array.isArray(currentAnimation)) {\n                for (var element of currentAnimation) {\n                  animationsToCheck.push(element);\n                }\n              } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n                for (var value of Object.values(currentAnimation)) {\n                  animationsToCheck.push(value);\n                }\n              } else {\n                var currentStyleAnimation = currentAnimation;\n\n                if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(false);\n                }\n              }\n            }\n          }\n        };\n\n        return {\n          isHigherOrder: true,\n          onFrame: onFrame,\n          onStart: onStart,\n          current: {},\n          styleAnimations: styleAnimations,\n          callback: callback\n        };\n      };\n\n      _f._closure = {\n        ColorProperties: _UpdateProps.ColorProperties,\n        processColor: _Colors.processColor,\n        setPath: setPath,\n        styleAnimations: styleAnimations,\n        resolvePath: resolvePath,\n        withTiming: _timing.withTiming\n      };\n      _f.asString = \"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";\n      _f.__workletHash = 9887536897803;\n      _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (43:31)\";\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: _util.defineAnimation,\n    ColorProperties: _UpdateProps.ColorProperties,\n    processColor: _Colors.processColor,\n    setPath: setPath,\n    resolvePath: resolvePath,\n    withTiming: _timing.withTiming\n  };\n  _f.asString = \"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";\n  _f.__workletHash = 15006684130601;\n  _f.__location = \"C:\\\\.project\\\\today_meal\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (41:7)\";\n  return _f;\n}();\n\nexports.withStyleAnimation = withStyleAnimation;","map":{"version":3,"names":["resolvePath","obj","path","keys","Array","isArray","reduce","acc","current","undefined","setPath","value","currObj","i","length","withStyleAnimation","styleAnimations","defineAnimation","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","key","Object","currentStyleAnimation","finished","callback","ColorProperties","includes","processColor","onStart","previousAnimation","prevAnimation","prevVal","currentAnimation","withTiming","duration","animationsToCheck","element","values","isHigherOrder"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"sourcesContent":["import { defineAnimation } from './util';\nimport { withTiming } from './timing';\nimport { ColorProperties } from '../UpdateProps';\nimport { processColor } from '../Colors';\n// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nexport function resolvePath(obj, path) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    return keys.reduce((acc, current) => {\n        if (Array.isArray(acc) && typeof current === 'number') {\n            return acc[current];\n        }\n        else if (typeof acc === 'object' && current in acc) {\n            return acc[current];\n        }\n        return undefined;\n    }, obj);\n}\nexport function setPath(obj, path, value) {\n    'worklet';\n    const keys = Array.isArray(path) ? path : [path];\n    let currObj = obj;\n    for (let i = 0; i < keys.length - 1; i++) {\n        // creates entry if there isn't one\n        currObj = currObj;\n        if (!currObj[keys[i]]) {\n            // if next key is a number create an array\n            if (typeof keys[i + 1] === 'number') {\n                currObj[keys[i]] = [];\n            }\n            else {\n                currObj[keys[i]] = {};\n            }\n        }\n        currObj = currObj[keys[i]];\n    }\n    currObj[keys[keys.length - 1]] =\n        value;\n}\nexport function withStyleAnimation(styleAnimations) {\n    'worklet';\n    return defineAnimation({}, () => {\n        'worklet';\n        const onFrame = (animation, now) => {\n            let stillGoing = false;\n            const entriesToCheck = [\n                { value: animation.styleAnimations, path: [] },\n            ];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onFrame === undefined) {\n                    // nested object\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const currentStyleAnimation = currentEntry.value;\n                    if (currentStyleAnimation.finished) {\n                        continue;\n                    }\n                    const finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n                    if (finished) {\n                        currentStyleAnimation.finished = true;\n                        if (currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(true);\n                        }\n                    }\n                    else {\n                        stillGoing = true;\n                    }\n                    if (ColorProperties.includes(currentEntry.path[0])) {\n                        currentStyleAnimation.current = processColor(currentStyleAnimation.current);\n                    }\n                    setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n                }\n            }\n            return !stillGoing;\n        };\n        const onStart = (animation, value, now, previousAnimation) => {\n            const entriesToCheck = [{ value: styleAnimations, path: [] }];\n            while (entriesToCheck.length > 0) {\n                const currentEntry = entriesToCheck.pop();\n                if (Array.isArray(currentEntry.value)) {\n                    for (let index = 0; index < currentEntry.value.length; index++) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[index],\n                            path: currentEntry.path.concat(index),\n                        });\n                    }\n                }\n                else if (typeof currentEntry.value === 'object' &&\n                    currentEntry.value.onStart === undefined) {\n                    for (const key of Object.keys(currentEntry.value)) {\n                        entriesToCheck.push({\n                            value: currentEntry.value[key],\n                            path: currentEntry.path.concat(key),\n                        });\n                    }\n                }\n                else {\n                    const prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n                    let prevVal = resolvePath(value, currentEntry.path);\n                    if (prevAnimation && !prevVal) {\n                        prevVal = prevAnimation.current;\n                    }\n                    setPath(animation.current, currentEntry.path, prevVal);\n                    let currentAnimation;\n                    if (typeof currentEntry.value !== 'object' ||\n                        !currentEntry.value.onStart) {\n                        currentAnimation = withTiming(currentEntry.value, { duration: 0 });\n                        setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n                    }\n                    else {\n                        currentAnimation = currentEntry.value;\n                    }\n                    currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n                }\n            }\n        };\n        const callback = (finished) => {\n            if (!finished) {\n                const animationsToCheck = [\n                    styleAnimations,\n                ];\n                while (animationsToCheck.length > 0) {\n                    const currentAnimation = animationsToCheck.pop();\n                    if (Array.isArray(currentAnimation)) {\n                        for (const element of currentAnimation) {\n                            animationsToCheck.push(element);\n                        }\n                    }\n                    else if (typeof currentAnimation === 'object' &&\n                        currentAnimation.onStart === undefined) {\n                        for (const value of Object.values(currentAnimation)) {\n                            animationsToCheck.push(value);\n                        }\n                    }\n                    else {\n                        const currentStyleAnimation = currentAnimation;\n                        if (!currentStyleAnimation.finished &&\n                            currentStyleAnimation.callback) {\n                            currentStyleAnimation.callback(false);\n                        }\n                    }\n                }\n            }\n        };\n        return {\n            isHigherOrder: true,\n            onFrame,\n            onStart,\n            current: {},\n            styleAnimations,\n            callback,\n        };\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}