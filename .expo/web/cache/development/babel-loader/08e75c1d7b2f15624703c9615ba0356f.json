{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedConcat = createAnimatedConcat;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _AnimatedBlock = require(\"../core/AnimatedBlock\");\n\nvar _AnimatedNode2 = _interopRequireDefault(require(\"./AnimatedNode\"));\n\nvar _val = require(\"../val\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedConcat = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedConcat, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedConcat);\n\n  function AnimatedConcat(input) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedConcat);\n    (0, _invariant.default)(input.every(function (el) {\n      return el instanceof _AnimatedNode2.default || typeof el === 'number' || typeof el === 'string';\n    }), \"Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: \" + input);\n    _this = _super.call(this, {\n      type: 'concat',\n      input: input\n    }, input);\n    _this._input = input;\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedConcat, [{\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      return this._input.reduce(function (prev, current) {\n        return prev + (0, _val.val)(current);\n      }, '');\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"AnimatedConcat, id: \" + this.__nodeID;\n    }\n  }]);\n  return AnimatedConcat;\n}(_AnimatedNode2.default);\n\nfunction createAnimatedConcat() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return new AnimatedConcat(args.map(_AnimatedBlock.adapt));\n}","map":{"version":3,"names":["AnimatedConcat","input","invariant","every","el","AnimatedNode","type","_input","reduce","prev","current","val","__nodeID","createAnimatedConcat","args","map","adapt"],"sources":["C:/.project/today_meal/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedConcat.js"],"sourcesContent":["import invariant from 'invariant';\nimport { adapt } from '../core/AnimatedBlock';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../val';\n\nclass AnimatedConcat extends AnimatedNode {\n  constructor(input) {\n    invariant(\n      input.every(\n        (el) =>\n          el instanceof AnimatedNode ||\n          typeof el === 'number' ||\n          typeof el === 'string'\n      ),\n      `Reanimated: Animated.concat node arguments should be of type AnimatedNode or String or Number. One or more of them are not of that type. Node: ${input}`\n    );\n    super({ type: 'concat', input }, input);\n    this._input = input;\n  }\n\n  __onEvaluate() {\n    return this._input.reduce((prev, current) => prev + val(current), '');\n  }\n\n  toString() {\n    return `AnimatedConcat, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedConcat(...args) {\n  return new AnimatedConcat(args.map(adapt));\n}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEMA,c;;;;;EACJ,wBAAYC,KAAZ,EAAmB;IAAA;;IAAA;IACjB,IAAAC,kBAAA,EACED,KAAK,CAACE,KAAN,CACE,UAACC,EAAD;MAAA,OACEA,EAAE,YAAYC,sBAAd,IACA,OAAOD,EAAP,KAAc,QADd,IAEA,OAAOA,EAAP,KAAc,QAHhB;IAAA,CADF,CADF,sJAOoJH,KAPpJ;IASA,0BAAM;MAAEK,IAAI,EAAE,QAAR;MAAkBL,KAAK,EAALA;IAAlB,CAAN,EAAiCA,KAAjC;IACA,MAAKM,MAAL,GAAcN,KAAd;IAXiB;EAYlB;;;;WAED,wBAAe;MACb,OAAO,KAAKM,MAAL,CAAYC,MAAZ,CAAmB,UAACC,IAAD,EAAOC,OAAP;QAAA,OAAmBD,IAAI,GAAG,IAAAE,QAAA,EAAID,OAAJ,CAA1B;MAAA,CAAnB,EAA2D,EAA3D,CAAP;IACD;;;WAED,oBAAW;MACT,gCAA8B,KAAKE,QAAnC;IACD;;;EArB0BP,sB;;AAwBtB,SAASQ,oBAAT,GAAuC;EAAA,kCAANC,IAAM;IAANA,IAAM;EAAA;;EAC5C,OAAO,IAAId,cAAJ,CAAmBc,IAAI,CAACC,GAAL,CAASC,oBAAT,CAAnB,CAAP;AACD"},"metadata":{},"sourceType":"script"}