{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BorderlessButton = exports.BaseButton = void 0;\nObject.defineProperty(exports, \"PureNativeButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureHandlerButton.default;\n  }\n});\nexports.RectButton = exports.RawButton = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _createNativeWrapper = _interopRequireDefault(require(\"../handlers/createNativeWrapper\"));\n\nvar _GestureHandlerButton = _interopRequireDefault(require(\"./GestureHandlerButton\"));\n\nvar _State = require(\"../State\");\n\nvar _excluded = [\"rippleColor\"],\n    _excluded2 = [\"children\", \"style\"],\n    _excluded3 = [\"children\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar RawButton = (0, _createNativeWrapper.default)(_GestureHandlerButton.default, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\nexports.RawButton = RawButton;\n\nvar BaseButton = function (_React$Component) {\n  (0, _inherits2.default)(BaseButton, _React$Component);\n\n  var _super = _createSuper(BaseButton);\n\n  function BaseButton(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BaseButton);\n    _this = _super.call(this, props);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"lastActive\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleEvent\", function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var state = nativeEvent.state,\n          oldState = nativeEvent.oldState,\n          pointerInside = nativeEvent.pointerInside;\n      var active = pointerInside && state === _State.State.ACTIVE;\n\n      if (active !== _this.lastActive && _this.props.onActiveStateChange) {\n        _this.props.onActiveStateChange(active);\n      }\n\n      if (oldState === _State.State.ACTIVE && state !== _State.State.CANCELLED && _this.lastActive && _this.props.onPress) {\n        _this.props.onPress(active);\n      }\n\n      _this.lastActive = active;\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"onHandlerStateChange\", function (e) {\n      var _this$props$onHandler, _this$props;\n\n      (_this$props$onHandler = (_this$props = _this.props).onHandlerStateChange) === null || _this$props$onHandler === void 0 ? void 0 : _this$props$onHandler.call(_this$props, e);\n\n      _this.handleEvent(e);\n    });\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"onGestureEvent\", function (e) {\n      var _this$props$onGesture, _this$props2;\n\n      (_this$props$onGesture = (_this$props2 = _this.props).onGestureEvent) === null || _this$props$onGesture === void 0 ? void 0 : _this$props$onGesture.call(_this$props2, e);\n\n      _this.handleEvent(e);\n    });\n\n    _this.lastActive = false;\n    return _this;\n  }\n\n  (0, _createClass2.default)(BaseButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          rippleColor = _this$props5.rippleColor,\n          rest = (0, _objectWithoutProperties2.default)(_this$props5, _excluded);\n      return React.createElement(RawButton, _extends({\n        rippleColor: (0, _reactNative.processColor)(rippleColor)\n      }, rest, {\n        onGestureEvent: this.onGestureEvent,\n        onHandlerStateChange: this.onHandlerStateChange\n      }));\n    }\n  }]);\n  return BaseButton;\n}(React.Component);\n\nexports.BaseButton = BaseButton;\n\nvar AnimatedBaseButton = _reactNative.Animated.createAnimatedComponent(BaseButton);\n\nvar btnStyles = _reactNative.StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\n\nvar RectButton = function (_React$Component2) {\n  (0, _inherits2.default)(RectButton, _React$Component2);\n\n  var _super2 = _createSuper(RectButton);\n\n  function RectButton(props) {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, RectButton);\n    _this2 = _super2.call(this, props);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this2), \"opacity\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this2), \"onActiveStateChange\", function (active) {\n      var _this$props$onActiveS, _this$props3;\n\n      if (_reactNative.Platform.OS !== 'android') {\n        _this2.opacity.setValue(active ? _this2.props.activeOpacity : 0);\n      }\n\n      (_this$props$onActiveS = (_this$props3 = _this2.props).onActiveStateChange) === null || _this$props$onActiveS === void 0 ? void 0 : _this$props$onActiveS.call(_this$props3, active);\n    });\n\n    _this2.opacity = new _reactNative.Animated.Value(0);\n    return _this2;\n  }\n\n  (0, _createClass2.default)(RectButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          children = _this$props6.children,\n          style = _this$props6.style,\n          rest = (0, _objectWithoutProperties2.default)(_this$props6, _excluded2);\n\n      var resolvedStyle = _reactNative.StyleSheet.flatten(style !== null && style !== void 0 ? style : {});\n\n      return React.createElement(BaseButton, _extends({}, rest, {\n        style: resolvedStyle,\n        onActiveStateChange: this.onActiveStateChange\n      }), React.createElement(_reactNative.Animated.View, {\n        style: [btnStyles.underlay, {\n          opacity: this.opacity,\n          backgroundColor: this.props.underlayColor,\n          borderRadius: resolvedStyle.borderRadius,\n          borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n          borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n          borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n          borderBottomRightRadius: resolvedStyle.borderBottomRightRadius\n        }]\n      }), children);\n    }\n  }]);\n  return RectButton;\n}(React.Component);\n\nexports.RectButton = RectButton;\n\n_defineProperty(RectButton, \"defaultProps\", {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n});\n\nvar BorderlessButton = function (_React$Component3) {\n  (0, _inherits2.default)(BorderlessButton, _React$Component3);\n\n  var _super3 = _createSuper(BorderlessButton);\n\n  function BorderlessButton(props) {\n    var _this3;\n\n    (0, _classCallCheck2.default)(this, BorderlessButton);\n    _this3 = _super3.call(this, props);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this3), \"opacity\", void 0);\n\n    _defineProperty((0, _assertThisInitialized2.default)(_this3), \"onActiveStateChange\", function (active) {\n      var _this$props$onActiveS2, _this$props4;\n\n      if (_reactNative.Platform.OS !== 'android') {\n        _this3.opacity.setValue(active ? _this3.props.activeOpacity : 1);\n      }\n\n      (_this$props$onActiveS2 = (_this$props4 = _this3.props).onActiveStateChange) === null || _this$props$onActiveS2 === void 0 ? void 0 : _this$props$onActiveS2.call(_this$props4, active);\n    });\n\n    _this3.opacity = new _reactNative.Animated.Value(1);\n    return _this3;\n  }\n\n  (0, _createClass2.default)(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          children = _this$props7.children,\n          style = _this$props7.style,\n          rest = (0, _objectWithoutProperties2.default)(_this$props7, _excluded3);\n      return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n        onActiveStateChange: this.onActiveStateChange,\n        style: [style, _reactNative.Platform.OS === 'ios' && {\n          opacity: this.opacity\n        }]\n      }), children);\n    }\n  }]);\n  return BorderlessButton;\n}(React.Component);\n\nexports.BorderlessButton = BorderlessButton;\n\n_defineProperty(BorderlessButton, \"defaultProps\", {\n  activeOpacity: 0.3,\n  borderless: true\n});","map":{"version":3,"mappings":"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","names":["RawButton","createNativeWrapper","GestureHandlerButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","constructor","props","_defineProperty","nativeEvent","state","oldState","pointerInside","active","State","ACTIVE","lastActive","onActiveStateChange","CANCELLED","onPress","e","onHandlerStateChange","handleEvent","onGestureEvent","render","rippleColor","rest","React","processColor","Component","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","Platform","OS","opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","View","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BorderlessButton","borderless"],"sources":["GestureButtons.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  processColor,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  NativeViewGestureHandlerPayload,\n  NativeViewGestureHandlerProps,\n} from '../handlers/NativeViewGestureHandler';\n\nexport interface RawButtonProps extends NativeViewGestureHandlerProps {\n  /**\n   * Defines if more than one button could be pressed simultaneously. By default\n   * set true.\n   */\n  exclusive?: boolean;\n  // TODO: we should transform props in `createNativeWrapper`\n\n  /**\n   * Android only.\n   *\n   * Defines color of native ripple animation used since API level 21.\n   */\n  rippleColor?: any; // it was present in BaseButtonProps before but is used here in code\n\n  /**\n   * Android only.\n   *\n   * Defines radius of native ripple animation used since API level 21.\n   */\n  rippleRadius?: number | null;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you want the ripple animation to render outside the view bounds.\n   */\n  borderless?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Defines whether the ripple animation should be drawn on the foreground of the view.\n   */\n  foreground?: boolean;\n\n  /**\n   * Android only.\n   *\n   * Set this to true if you don't want the system to play sound when the button is pressed.\n   */\n  touchSoundDisabled?: boolean;\n}\n\nexport interface BaseButtonProps extends RawButtonProps {\n  /**\n   * Called when the button gets pressed (analogous to `onPress` in\n   * `TouchableHighlight` from RN core).\n   */\n  onPress?: (pointerInside: boolean) => void;\n\n  /**\n   * Called when button changes from inactive to active and vice versa. It\n   * passes active state as a boolean variable as a first parameter for that\n   * method.\n   */\n  onActiveStateChange?: (active: boolean) => void;\n  style?: StyleProp<ViewStyle>;\n  testID?: string;\n}\n\nexport interface RectButtonProps extends BaseButtonProps {\n  /**\n   * Background color that will be dimmed when button is in active state.\n   */\n  underlayColor?: string;\n\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the underlay when button is in active state.\n   */\n  activeOpacity?: number;\n}\n\nexport interface BorderlessButtonProps extends BaseButtonProps {\n  /**\n   * iOS only.\n   *\n   * Opacity applied to the button when it is in an active state.\n   */\n  activeOpacity?: number;\n}\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\nexport class BaseButton extends React.Component<BaseButtonProps> {\n  private lastActive: boolean;\n\n  constructor(props: BaseButtonProps) {\n    super(props);\n    this.lastActive = false;\n  }\n\n  private handleEvent = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this.lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this.lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this.lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first, then forward the\n  // event to listeners. However, here our handler is virtually only forwarding\n  // events to listeners, so we reverse the order to keep the proper order of\n  // the callbacks (from \"raw\" ones to \"processed\").\n  private onHandlerStateChange = (\n    e: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onHandlerStateChange?.(e);\n    this.handleEvent(e);\n  };\n\n  private onGestureEvent = (\n    e: GestureEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onGestureEvent?.(e);\n    this.handleEvent(\n      e as HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n    ); // TODO: maybe it is not correct\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component<RectButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: RectButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(0);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 0);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this.opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component<BorderlessButtonProps> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: BorderlessButtonProps) {\n    super(props);\n    this.opacity = new Animated.Value(1);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 1);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this.onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"script"}