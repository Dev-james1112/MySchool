{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createElement = _interopRequireDefault(require(\"../createElement\"));\n\nvar forwardedProps = _interopRequireWildcard(require(\"../../modules/forwardedProps\"));\n\nvar _pick = _interopRequireDefault(require(\"../../modules/pick\"));\n\nvar _useElementLayout = _interopRequireDefault(require(\"../../modules/useElementLayout\"));\n\nvar _useLayoutEffect = _interopRequireDefault(require(\"../../modules/useLayoutEffect\"));\n\nvar _useMergeRefs = _interopRequireDefault(require(\"../../modules/useMergeRefs\"));\n\nvar _usePlatformMethods = _interopRequireDefault(require(\"../../modules/usePlatformMethods\"));\n\nvar _useResponderEvents = _interopRequireDefault(require(\"../../modules/useResponderEvents\"));\n\nvar _useLocale = require(\"../../modules/useLocale\");\n\nvar _StyleSheet = _interopRequireDefault(require(\"../StyleSheet\"));\n\nvar _TextInputState = _interopRequireDefault(require(\"../../modules/TextInputState\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return (0, _pick.default)(props, forwardPropsList);\n};\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = React.forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && _TextInputState.default.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    _TextInputState.default._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      _TextInputState.default._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(function () {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        hostNode.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  (0, _useLayoutEffect.default)(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      _TextInputState.default._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  (0, _useElementLayout.default)(hostRef, onLayout);\n  (0, _useResponderEvents.default)(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n\n  var _useLocaleContext = (0, _useLocale.useLocaleContext)(),\n      contextDirection = _useLocaleContext.direction;\n\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.inputMode = inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = (0, _usePlatformMethods.default)(supportedProps);\n  var setRef = (0, _useMergeRefs.default)(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? (0, _useLocale.getLocaleDirection)(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = (0, _createElement.default)(component, supportedProps, {\n    writingDirection: writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = _TextInputState.default;\n\nvar styles = _StyleSheet.default.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\n\nvar _default = TextInput;\nexports.default = _default;","map":{"version":3,"names":["isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","Object","assign","forwardedProps","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","value","type","pickProps","props","pick","isEventComposing","nativeEvent","isComposing","keyCode","focusTimeout","TextInput","React","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","hostNode","newHeight","scrollHeight","newWidth","scrollWidth","current","contentSize","imperativeRef","useMemo","clear","isFocused","TextInputState","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","target","handleChange","handleFocus","clearTimeout","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","key","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","useLayoutEffect","document","activeElement","component","useElementLayout","useResponderEvents","_useLocaleContext","useLocaleContext","contextDirection","direction","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","style","styles","textinput$raw","platformMethodsRef","usePlatformMethods","setRef","useMergeRefs","ref","langDirection","getLocaleDirection","componentDirection","writingDirection","element","createElement","displayName","State","StyleSheet","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"sources":["C:/.project/today_meal/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport { getLocaleDirection, useLocaleContext } from '../../modules/useLocale';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = (node, selection) => {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = (node, selection) => {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = props => pick(props, forwardPropsList); // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(hostNode => {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(() => hostNode => {\n    // TextInput needs to add more methods to the hostNode in addition to those\n    // added by `usePlatformMethods`. This is temporarily until an API like\n    // `TextInput.clear(hostRef)` is added to React Native.\n    if (hostNode != null) {\n      hostNode.clear = function () {\n        if (hostNode != null) {\n          hostNode.value = '';\n        }\n      };\n\n      hostNode.isFocused = function () {\n        return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n      };\n\n      handleContentSizeChange(hostNode);\n    }\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(() => {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target; // Prevent key events bubbling (see #612)\n\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        hostNode.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(() => {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off'; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.inputMode = inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"script"}